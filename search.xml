<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[如何用MinGW-x64在VSCode编译和调试C/C++]]></title>
    <url>%2F2019%2F08%2F07%2FMingw-w64%E4%B8%8B%E7%9A%84Vscode%2F</url>
    <content type="text"><![CDATA[前言我的环境如下：平台：Windows10 x64Mingw-w64版本：x86_64-8.1.0-posix-seh-rt_v6-rev0VSCode版本：1.36.1 x64由于Mingw-w64在线安装需要梯子，所以这里推荐大家安装由SOURCEFORGE托管的Mingw-w64绿色安装包下载地址为：https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/ 我把我的工作区压缩包和Mingw-w64压缩包放到了下面这个链接 https://www.lanzous.com/b859892 Mingw-w64安装Mingw-w64在SOURCEFORGE里下载完压缩包之后直接把里面的内容解压出来就能用了这里我解压到了C盘的根目录下 你们随意 配置环境变量右击计算机-属性-高级系统设置-环境变量-Path（系统变量）-新建-输入你的mingw64下的bin文件夹地址 检测环境变量是否搭建成功 VSCode安装VScode 安装C/C++扩展也可以安装下中文包 搜索chinese第一个就是 创建工作区新建一个文件夹来作为你的C项目地址（名称中最好不要有空格和中文） 用VSCode打开这个文件夹 如图新建一个名为.vscode的文件夹就行了 在.vscode文件夹里创建一个名为launch.json的文件 然后输入以下代码(以下配置皆为VSCode默认生成的模板) 1234567891011121314151617181920212223242526272829&#123; // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 &quot;version&quot;: &quot;0.2.0&quot;, &quot;configurations&quot;: [ &#123; &quot;name&quot;: &quot;gdb(lunch)&quot;, &quot;type&quot;: &quot;cppdbg&quot;, &quot;request&quot;: &quot;launch&quot;, &quot;program&quot;: &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;, &quot;args&quot;: [], &quot;stopAtEntry&quot;: false, &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;, &quot;environment&quot;: [], &quot;externalConsole&quot;: false, &quot;MIMode&quot;: &quot;gdb&quot;, &quot;miDebuggerPath&quot;: &quot;C:/mingw64/bin/gdb.exe&quot;, //这行地址改为gdb的地址 &quot;setupCommands&quot;: [ //如果你把mingw64解压到了D盘的根目录下 &#123; //那这里就写D:/mingw64/bin/gdb.exe &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;, &quot;text&quot;: &quot;-enable-pretty-printing&quot;, &quot;ignoreFailures&quot;: true &#125; ], &quot;preLaunchTask&quot;: &quot;gcc build&quot; &#125; ]&#125; 接着还是.vscode文件夹里创建一个名为tasks.json的文件然后输入以下代码(以下配置皆为VSCode默认生成的模板) 123456789101112131415161718192021222324&#123;// 有关 tasks.json 格式的文档，请参见 // https://go.microsoft.com/fwlink/?LinkId=733558 &quot;version&quot;: &quot;2.0.0&quot;, &quot;tasks&quot;: [ &#123; &quot;type&quot;: &quot;shell&quot;, &quot;label&quot;: &quot;gcc build&quot;, &quot;command&quot;: &quot;C:/mingw64/bin/gcc.exe&quot;, //这行的地址改为gcc的地址 &quot;args&quot;: [ &quot;-g&quot;, &quot;$&#123;file&#125;&quot;, &quot;-o&quot;, &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot; ], &quot;options&quot;: &#123; &quot;cwd&quot;: &quot;C:/mingw64/bin&quot; //这行的地址改为mingw64下的bin地址 &#125;, &quot;problemMatcher&quot;: [ &quot;$gcc&quot; ] &#125; ]&#125; 测试编译和调试功能新建一个.c文件并在里面输入一些代码 比如helloword 12345678910#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(void)&#123; int i; for (i = 0; i &lt; 10; i++) printf("%d\n", i); system("pause"); return 0;&#125; 编译调试 至此，教程结束！]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F05%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
  <entry>
    <title><![CDATA[C-Primer-Puls第七章编程练习答案]]></title>
    <url>%2F2019%2F05%2F19%2FC-Primer-Puls%E7%AC%AC%E4%B8%83%E7%AB%A0%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E7%AD%94%E6%A1%88%2F</url>
    <content type="text"><![CDATA[本章内容为《C Primer Plus第六版》第七章编程练习的答案 第一题1.编写一个程序读取输入，读到#字符停止，然后报告读取的空格数、 换行符数和所有其他字符的数量。 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;ctype.h&gt;int main(void)&#123; char ch; int n_word = 0; int n_space = 0; int n_hh = 1; while ((ch = getchar()) != '#') &#123; n_word += 1; if (ch == ' ') &#123; n_space += 1; continue; &#125; else if (ch == '\n') &#123; n_hh += 1; continue; &#125; &#125; printf("这段字符串中有%d个空格，%d个换行符，总共%d个字符", n_space, n_hh, n_word); return 0;&#125; 第二题2.编写一个程序读取输入，读到#字符停止。程序要打印每个输入的字符以及对应的ASCII码（十进制）。一行打印8个字符。建议 : 使用字符计数 和求模运算符（%）在每8个循环周期时打印一个换行符。 1234567891011121314151617#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(void) &#123; char c; int i = 0; while ((c = getchar()) != '#') &#123; if (c == '\n') continue; i++; printf("%c-%d ", c, c); if (i % 8 == 0) printf("\n"); &#125; return 0;&#125; 第三题3.编写一个程序，读取整数直到用户输入0。输入结束后，程序应报告 用户输入的偶数（不包括 0）个数、这些偶数的平均值、输入的奇数个数及 其奇数的平均值。 1234567891011121314151617181920212223242526272829303132333435363738#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#define zero 0int main(void)&#123; int num = 0; //接收指定值 int n_even = 0; //偶数的个数 int even_num = 0; //偶数的总和 int n_odd = 0; //奇数的个数 int odd_num = 0; //奇数的总和 //while ((num = getchar()) != 'o') //不能用getchar 因为它一次只会吃一个字符 while (scanf("%d", &amp;num), num != zero) &#123; if (num == '\n') continue; if (num % 2 == 0) &#123; n_even++; even_num += num; continue; //提升程序运行速度 &#125; else &#123; n_odd++; odd_num += num; &#125; &#125; //如果没有奇/偶数及数值 那就另作提示 if (n_even != 0) printf("偶数有%3d个 偶数的平均数为%3d\n", n_even, even_num / n_even); else printf("没有偶数\n"); if (n_odd != 0) printf("奇数有%3d个 奇数的平均数为%3d\n", n_odd, odd_num / n_odd); else printf("没有奇数\n"); return 0;&#125; 第四题4.使用if else语句编写一个程序读取输入，读到#停止。用感叹号替换句 号，用两个感叹号替换原来的感叹号，最后报告进行了多少次替换。 1234567891011121314151617181920212223242526#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(void)&#123; char ch; int once = 0; while ((ch = getchar()) != '#') &#123; if (ch == '.') &#123; putchar('!'); once++; continue; &#125; else if (ch == '!') &#123; putchar('!'); putchar('!'); once++; continue; &#125; putchar(ch); &#125; printf("替换了%d次", once); return 0;&#125; 第五题5.使用switch重写练习4。 123456789101112131415161718192021222324252627282930313233#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(void)&#123; char ch; int one = 0; int two = 0; while ((ch = getchar()) != '#') &#123; switch (ch) &#123; case '.': &#123; putchar('!'); one++; break; &#125; case '!': &#123; putchar('!'); putchar('!'); two++; break; &#125; default: putchar(ch); &#125; &#125; int once = one + two; printf("总共替换了%d次\n", once); printf("其中 . 符号替换了%d次 ！ 符号替换了%d次\n",one, two); return 0;&#125; 第六题6.编写程序读取输入，读到#停止，报告ei出现的次数。注意该程序要记录前一个字符和当前字符。用“Receive your eieio award”这样的输入来测试 12345678910111213141516#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;int main(void)&#123; char ch; char ar; //ar就是上一个值的载体 int fre = 0; while ((ch = getchar()) != '#') &#123; if (ch == 'i' &amp;&amp; ar == 'e') fre++; ar = ch; //ar不能被立即（覆）赋值 否则它根本无法保存上一个值 &#125; printf("%d", fre); return 0;&#125;]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C-Primer-Puls第六章编程练习答案]]></title>
    <url>%2F2019%2F05%2F18%2FC-Primer-Puls%E7%AC%AC%E5%85%AD%E7%AB%A0%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E7%AD%94%E6%A1%88%2F</url>
    <content type="text"><![CDATA[本章内容为《C Primer Plus第六版》第六章编程练习的答案 第一题1.编写一个程序，创建一个包含26个元素的数组，并在其中储存26个小写字母。然后打印数组的所有内容。 12345678910111213#include &lt;stdio.h&gt;int main(void)&#123; int index; //用index来遍历数组 char Letter; //用于给数组赋值 char array[26]; for (index = 0,Letter = 'a'; index &lt; 26; index++,Letter++) //for的测试条件也可以Letter &lt;= 'z'; 自己试下要理解，注意关系运算符 &#123; array[index] = Letter; printf(" %c", array[index]); //赋值后就输出了 &#125; return 0;&#125; 第二题2.使用嵌套循环，按下面的格式打印字符： $ $$ $$$ $$$$ $$$$$ 123456789101112#include &lt;stdio.h&gt; //变量名是真难起啊int main(void)&#123; int outer, inner; //外层和内层 因为一般题目就给两层，所以这样起名好看点 for (int outer = 0; outer &lt; 5; outer++) //书中讲过例题 还不明白的话在这句for前加一个断点一步一步来 &#123; for (int inner = 0; inner &lt;= outer; inner++) printf("$"); printf("\n"); &#125; return 0;&#125; 第三题3.使用嵌套循环，按下面的格式打印字母： F FE FED FEDC FEDCB FEDCBA注意：如果你的系统不使用ASCII或其他以数字顺序编码的代码，可以 把字符数组初始化为字母表中的字母：char lets[27] = “ABCDEFGHIJKLMNOPQRSTUVWXYZ”;然后用数组下标选择单独的字母，例如lets[0]是‘A’，等等。 12345678910111213#include &lt;stdio.h&gt;int main(void)&#123; char outer = 'F'; char inner = 'F'; for (outer = 'F'; outer &gt;= 'A'; outer--) &#123; for (inner = 'F'; inner &gt;= outer; inner--) printf("%c", inner); printf("\n"); &#125; return 0;&#125; 第四题4.使用嵌套循环，按下面的格式打印字母：A 65BC 66DEF 68GHIJ 71KLMNO 75PQRSTU 80如果你的系统不使用以数字顺序编码的代码，请参照练习3的方案解决。数组的值为A到Z 用循环来控制输出哪些元素 12345678910111213#include &lt;stdio.h&gt;int main(void)&#123; char index; //它要存储递增后的值，所以不能在第二层for中初始化 int outer, inner; for (index = 'A',outer = 1; outer &lt;= 6; outer++) &#123; for (inner = 1; inner &lt;= outer;inner++, index++) printf("%c", index); printf("\n"); &#125; return 0;&#125; 第五题5.编写一个程序，提示用户输入大写字母。使用嵌套循环以下面金字塔 型的格式打印字母： Ａ ABA ABCBA ABCDCBA ABCDEDCBA打印这样的图形，要根据用户输入的字母来决定。例如，上面的图形是 在用户输入E后的打印结果。提示：用外层循环处理行，每行使用3个内层循环，分别处理空格、以升序打印字母、以降序打印字母。如果系统不使用ASCII或其他以数字顺序 编码的代码，请参照练习3的解决方案。 12345678910111213141516171819202122#include &lt;stdio.h&gt;int main(void)&#123; char word; //接收指定值 int line; //控制升序打印字母的个数 放在外层中循环递增 意思是控制第一行的升序层打印一个字母 第二层。。。（与目标有些无伤大雅的出入）用断点跑一遍你就明白了 char space; //控制打印空格的个数 赋值在外层中 指定值减去'A'就是要打印的空格数量 int index; //在空格和升序中均被用来当作索引 char Ao; //升序 char Do; //降序 scanf("%c", &amp;word); for (line = 0, space = word - 'A'; Ao &lt;= word; Ao++, line++, space--) &#123; for (index = 0; index &lt; space; index++) //空格层 printf(" "); for (index = 1, Ao = 'A'; index &lt;= line; index++, Ao++)//升序层 搞明白为什么index要初始化为1 提示：index &lt;= line;和外层line = 0； printf("%c", Ao); for (Do = Ao; Do &gt;= 'A'; Do--) //降序层 Do取升序Ao的值 然后递减输出到A printf("%c", Do); printf("\n"); &#125; return 0;&#125; 第六题6.编写一个程序打印一个表格，每一行打印一个整数、该数的平方、该数的立方。要求用户输入表格的上下限。使用一个for循环。 123456789101112#include &lt;stdio.h&gt;int main(void)&#123; int Begin, End; printf("Begin = "); scanf("%d", &amp;Begin); printf("End = "); scanf("%d", &amp;End); for (; Begin &lt;= End; Begin++) printf("The square and cube of %5d is %5d and %5d\n", Begin, Begin * Begin, Begin * Begin * Begin); return 0;&#125; 第七题7.编写一个程序把一个单词读入一个字符数组中，然后倒序打印这个单 词。提示：strlen()函数（第4章介绍过）可用于计算数组最后一个字符的下标。 1234567891011#include &lt;stdio.h&gt;#include &lt;string.h&gt;int main(void)&#123; char word[100]; scanf("%s", word); //要报有好奇心来学习C 试试去掉 -1会怎样 int size = strlen(word) - 1; //stren函数从1开始计数,所以要减1 for (; size &gt;= 0; size--) printf("%c", word[size]); return 0;&#125; 第八题8.编写一个程序，要求用户输入两个浮点数，并打印两数之差除以两数 乘积的结果。在用户输入非数字之前，程序应循环处理用户输入的每对值。 12345678910111213#include &lt;stdio.h&gt; //注意审题int main(void)&#123; float one,two; printf("Enter a pair of numbers\n"); while (scanf("%f %f", &amp;one, &amp;two) == 2) &#123; printf("%g", (one - two) / (one * two)); printf("Enter a pair of numbers\n"); &#125; printf("Bye!\n"); return 0;&#125; 第九题9.修改练习8，使用一个函数返回计算的结果。 12345678910111213141516171819#include &lt;stdio.h&gt;float Operation(float one, float two);int main(void)&#123; float one,two; printf("Enter a pair of numbers\n"); while (scanf("%f %f", &amp;one, &amp;two) == 2) &#123; float Result = Operation(one,two); printf("%g\n", Result); printf("Enter a pair of numbers\n"); &#125; printf("Bye!\n"); return 0;&#125;float Operation(float one, float two)&#123; return (one - two) / (one * two);&#125; 第十题10.编写一个程序，要求用户输入一个上限整数和一个下限整数，计算 从上限到下限范围内所有整数的平方和，并显示计算结果。然后程序继续提 示用户输入上限和下限整数，并显示结果，直到用户输入的上限整数小于下 限整数为止。程序的运行示例如下：Enter lower and upper integer limits : 5 9The sums of the squares from 25 to 81 is 255Enter next set of limits : 3 25The sums of the squares from 9 to 625 is 5520Enter next set of limits : 5 5Done 123456789101112131415161718192021222324#include &lt;stdio.h&gt;int calculation(int, int); //声明函数原型int main(void)&#123; int lower_num, upper_num; printf("Enter lower and upper integer limits :"); scanf("%d %d", &amp;lower_num, &amp;upper_num); while (lower_num &lt; upper_num) &#123; printf("The sums of the squares from %d to %d is ", lower_num * lower_num, upper_num * upper_num); calculation(lower_num, upper_num); printf("Enter next set of limits :"); scanf("%d %d", &amp;lower_num, &amp;upper_num); &#125; printf("Done!"); return 0;&#125;int calculation(int lower_num, int upper_num)&#123; int result; for (result = 0; lower_num &lt;= upper_num; lower_num++) result += lower_num * lower_num; printf("%d\n", result);&#125; 第十一题11.编写一个程序，在数组中读入8个整数，然后按倒序打印这8个整数。 12345678910111213#include &lt;stdio.h&gt;#define SIZE 8int main(void)&#123; int index = 0; //两阶段 遍历数组赋值和遍历数组输出 int number[SIZE]; for (index = 0; index &lt; SIZE; index++) //数组是从0开始的 scanf("%d", &amp;number[index]); printf("\n"); for (index = SIZE - 1; index &gt;= 0; index--) printf("%d ", number[index]); return 0;&#125; 第十二题12.考虑下面两个无限序列：1.0 + 1.0/2.0 + 1.0/3.0 + 1.0/4.0 + …1.0 - 1.0/2.0 + 1.0/3.0 - 1.0/4.0 + …编写一个程序计算这两个无限序列的总和，直到到达某次数。提示：奇数个-1 相乘得-1，偶数个-1相乘得1。让用户交互地输入指定的次数，当用户输入0或负值时结束输入。查看运行100项、1000项、10000项后的总和，是否发现每个序列都收敛于某值？ 第十三题13.编写一个程序，创建一个包含8个元素的int类型数组，分别把数组元素设置为2的前8次幂。使用for循环设置数组元素的值，使用do while循环显示数组元素的值。 123456789101112131415#include &lt;stdio.h&gt;#define SIZE 8int main(void)&#123; int array[SIZE], index, num; //和第十一题没太大区别 for (index = 0, num = 1; index &lt; SIZE; index++, num *= 2) array[index] = num; index = 0; do &#123; printf("%d\n", array[index]); index++; &#125; while (index &lt; SIZE); return 0;&#125; 第十四题14.编写一个程序，创建两个包含8个元素的double类型数组，使用循环提示用户为第一个数组输入8 个值。第二个数组元素的值设置为第一个数组对应元素的累积之和。例如，第二个数组的第 4个元素的值是第一个数组前 4个元素之和，第二个数组的第5个元素的值是第一个数组前5个元素之和 （用嵌套循环可以完成，但是利用第二个数组的第5个元素是第二个数组的 第4个元素与第一个数组的第5个元素之和，只用一个循环就能完成任务，不需要使用嵌套循环）。最后，使用循环显示两个数组的内容，第一个数组显示成一行，第二个数组显示在第一个数组的下一行，而且每个元素都与第一个数组各元素相对应。 第十五题15.编写一个程序，读取一行输入，然后把输入的内容倒序打印出来。可以把输入储存在char类型的数组中，假设每行字符不超过255。回忆一下，根据%c转换说明，scanf()函数一次只能从输入中读取一个字符，而且在用户按下Enter键时scanf()函数会生成一个换行字符（\n）。 1234567891011121314#include &lt;stdio.h&gt;int main(void)&#123; char word[254]; //数组是从零开始的 word[0] int index = -1; do &#123; index++; //思考一下为什么递增一定要放在这一行 scanf("%c", &amp;word[index]); &#125; while (word[index] != '\n'); for (index -= 1; index &gt;= 0; index--) printf("%c", word[index]); return 0;&#125; 第十六题16.Daphne以10%的单利息投资了100美元（也就是说，每年投资获利相当于原始投资的10%）。Deirdre以 5%的复合利息投资了 100 美元（也就是说，利息是当前余额的 5%，包含之前的利息）。编写一个程序，计算需要多少年Deirdre的投资额才会超过Daphne，并显示那时两人的投资额。 第十七题17.Chuckie Lucky赢得了100万美元（税后），他把奖金存入年利率8%的账户。在每年的最后一天， Chuckie取出10万美元。编写一个程序，计算多少年后Chuckie会取完账户的钱？ 12345678910111213#include &lt;stdio.h&gt;int main(void)&#123; double dollar = 1000000; int year = 0; while (dollar &gt; 0) &#123; year++; dollar -= (100000 - dollar * 0.08); &#125; printf("第%2d年 Chuckie Lucky先生 把钱取完了", year); return 0;&#125; 第十八题18.Rabnud博士加入了一个社交圈。起初他有5个朋友。他注意到他的朋友数量以下面的方式增长。第1周少了1个朋友，剩下的朋友数量翻倍；第2 周少了2个朋友，剩下的朋友数量翻倍。一般而言，第N周少了N个朋友，剩下的朋友数量翻倍。编写一个程序，计算并显示Rabnud博士每周的朋友数量。该程序一直运行，直到超过邓巴数（Dunbar’s number）。邓巴数是粗略 估算一个人在社交圈中有稳定关系的成员的最大值，该值大约是150。 123456789#include &lt;stdio.h&gt;#define DB 150int main(void)&#123; int friends, index; //朋友数量和每周要减的朋友数量 for (friends = 5, index = 1; friends &lt;= DB; friends -= index, friends *= 2, index++) //初始朋友5个，第一周减一个朋友；朋友总数不能大于邓巴数；朋友数量减去这周要减的数量，剩下的朋友数量翻倍，每周要减的朋友数量加一。 printf("第%2d周Rabnud博士有%3d个朋友\n", index, friends); return 0;&#125;]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C-Primer-Puls第五章编程练习答案]]></title>
    <url>%2F2019%2F05%2F16%2FC-Primer-Puls%E7%AC%AC%E4%BA%94%E7%AB%A0%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E7%AD%94%E6%A1%88%2F</url>
    <content type="text"><![CDATA[本章内容为《C Primer Plus第六版》第五章编程练习的答案 第一题1.编写一个程序，把用分钟表示的时间转换成用小时和分钟表示的时间。使用#define或const创建一个表示60的符号常量或const变量。通过while 循环让用户重复输入值，直到用户输入小于或等于0的值才停止循环。 123456789101112131415#include &lt;stdio.h&gt;#define hour 60int main(void)&#123; int min; printf("min = (&lt;= 0 to quit)\n"); scanf("%d", &amp;min); while (min &gt; 0) &#123; printf("min = %dh%dmin\n", min / hour, min % hour); //%求余运算符 printf("min = (&lt;= 0 to quit)\n"); scanf("%d", &amp;min); &#125; return 0;&#125; 第二题2.编写一个程序，提示用户输入一个整数，然后打印从该数到比该数大 10的所有整数（例如，用户输入5，则打印5～15的所有整数，包括5和 15）。要求打印的各值之间用一个空格、制表符或换行符分开。 123456789101112131415#include &lt;stdio.h&gt;int main(void)&#123; int num, bigger; printf("number = "); scanf("%d", &amp;num); bigger = num + 10; while (num &lt;= bigger) &#123; printf("%d ", num); num++; &#125; return 0;&#125; 第三题3.编写一个程序，提示用户输入天数，然后将其转换成周数和天数。例如，用户输入18，则转换成2周4天。以下面的格式显示结果：18 days are 2 weeks, 4 days.通过while循环让用户重复输入天数，当用户输入一个非正值时（如0 或 - 20），循环结束。 123456789101112131415#include &lt;stdio.h&gt;#define week 7int main(void)&#123; int days; printf("天数 = (&lt;= 0 to quit)\n"); scanf("%d", &amp;days); while (days &gt; 0) &#123; printf("%d天 = %d周0%d天\n",days, days / week, days % week); printf("天数 = (&lt;= 0 to quit)\n"); scanf("%d", &amp;days); &#125; return 0;&#125; 第四题4.编写一个程序，提示用户输入一个身高（单位：厘米），并分别以厘米和英寸为单位显示该值，允许有小数部分。程序应该能让用户重复输入身 高，直到用户输入一个非正值。其输出示例如下： Enter a height in centimeters : 182 182.0 cm = 5 feet, 11.7 inches Enter a height in centimeters (&lt;= 0 to quit) : 168.7 168.0 cm = 5 feet, 6. 4 inches Enter a height in centimeters (&lt;= 0 to quit) : 0 bye 123456789101112131415161718#include &lt;stdio.h&gt; //1英尺 = 12英寸 1厘米 = 0.0328084英尺 1厘米 = 0.393701英寸int main(void)&#123; double cm, inches; int feet; printf("height = (cm)(&lt;= 0 to quit)"); scanf("%lf", &amp;cm); while (cm) &#123; feet = (int)(cm * 0.0328084); //英尺 = 显示转换int 厘米 x 英尺倍率 inches = (cm * 0.3937008) - (feet * 12); //除去英尺的英寸 = 身高 x 英寸倍率 - 英尺 x 英寸倍率 printf("%.lfcm = %dfeet%.1finches\n", cm, feet, inches); //除去英尺的英寸 = （总英寸） -（英尺所占的英寸） printf("height = (cm)(&lt;= 0 to quit)"); scanf("%lf", &amp;cm); &#125; printf("Bye!\n"); return 0;&#125; 第五题5.修改程序addemup.c（程序清单5.13），你可以认为addemup.c是计算20天里赚多少钱的程序（假设第1天赚$1、第2天赚$2、第3天赚$3，以此类 推）。修改程序，使其可以与用户交互，根据用户输入的数进行计算（即，用读入的一个变量来代替20）。 12345678910111213#include &lt;stdio.h&gt;int main(void)&#123; int count, sum, days; count = 0; sum = 0; printf("days = "); scanf("%d", &amp;days); //新建一个int型变量 再用scanf来接收指定值就好了 while (count++ &lt; days) sum = sum + count; printf("sum = %d\n", sum); return 0;&#125; 第六题6.修改编程练习5的程序，使其能计算整数的平方和（可以认为第1天赚 $1、第2天赚$4、第3天赚$9，以此类推，这看起来很不错）。C没有平方函数，但是可以用n * n来表示n的平方。 12345678910111213#include &lt;stdio.h&gt;int main(void)&#123; int count, sum, days; count = 0; sum = 0; printf("days = "); scanf("%d", &amp;days); while (count++ &lt; days) sum = (sum + count * count); //注意审题，题目说第二天赚4，没说第二天总钱数是4 printf("sum = %d\n", sum); return 0;&#125; 第七题7.编写一个程序，提示用户输入一个double类型的数，并打印该数的立方值。自己设计一个函数计算并打印立方值。main()函数要把用户输入的值传递给该函数。 123456789101112131415#include &lt;stdio.h&gt;int cube(double num); //声明函数原型int main(void)&#123; double num; printf("number = "); scanf("%lf", &amp;num); cube(num); //函数调用 return 0;&#125;int cube(double num) //该函数的参数为double型num变量&#123; //不同函数中同名变量并不非法 printf("%f\n", num * num * num); return 0; //读者在做到这题时可以试着让cube函数把结果返回给main函数 再由main函数输出&#125; //当然函数详解在第九章 第八题8.编写一个程序，显示求模运算的结果。把用户输入的第1个整数作为 求模运算符的第2个运算对象，该数在运算过程中保持不变。用户后面输入的数是第1个运算对象。当用户输入一个非正值时，程序结束。其输出示例 如下： This program computes moduli. Enter an integer to serve as the second operand: 256 Now enter the first operand : 438 438 % 256 is 182 Enter next number for first operand (&lt;= 0 to quit) : 1234567 1234567 % 256 is 135 Enter next number for first operand (&lt;= 0 to quit) : 0 Done 1234567891011121314151617#include &lt;stdio.h&gt;int main(void)&#123; int one, two; printf("two = "); scanf("%d", &amp;two); printf("one = "); scanf("%d", &amp;one); while (one &gt; 0) &#123; //用两个百分号来输出百分号 printf("%d %% %d = %d\n", one, two, one % two); printf("two = (&lt;= 0 to quit)"); scanf("%d", &amp;one); &#125; printf("Done\n"); return 0;&#125; 第九题9.编写一个程序，要求用户输入一个华氏温度。程序应读取double类型 的值作为温度值，并把该值作为参数传递给一个用户自定义的函数Temperatures()。该函数计算摄氏温度和开氏温度，并以小数点后面两位数字 的精度显示3种温度。要使用不同的温标来表示这3个温度值。下面是华氏温 度转摄氏温度的公式：摄氏温度 = 5.0 / 9.0 * (华氏温度 - 32.0)开氏温标常用于科学研究，0表示绝对零，代表最低的温度。下面是摄 氏温度转开氏温度的公式：开氏温度 = 摄氏温度 + 273.16Temperatures()函数中用const创建温度转换中使用的变量。在main()函数 中使用一个循环让用户重复输入温度，当用户输入 q 或其他非数字时，循环 结束。scanf()函数返回读取数据的数量，所以如果读取数字则返回1，如果 读取q则不返回1。可以使用 == 运算符将scanf()的返回值和1作比较，测试两值是否相等。 123456789101112131415161718192021#include &lt;stdio.h&gt;int Temperatures(double Fahrenheit); //声明函数原型int main(void)&#123; double Fahrenheit; printf("Fahrenheit = "); //scanf的返回值与成功读取的项数成正比 while (scanf("%lf", &amp;Fahrenheit) == 1) //这句意思为：如果（scanf的返回值 == 1）这个表达式成立 则结果为1； &#123; //while为真的具体条件是 紧跟while的关系表达式的结果为 除0以外的所有整数 Temperatures(Fahrenheit); //函数调用 printf("Fahrenheit = "); &#125; printf("Bye!\n"); return 0;&#125;int Temperatures(double Fahrenheit)&#123; const double Celsius = 5.0 / 9.0 * (Fahrenheit - 32.0); const double Kelvin = Celsius + 273.16; printf("%.2lf°F = %.2lf℃ = %.2lfK\n",Fahrenheit,Celsius,Kelvin); return 0;&#125;]]></content>
      <categories>
        <category>代码</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>答案</tag>
      </tags>
  </entry>
</search>
