<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C-Primer-Puls第十三章复习题目和编程练习题的答案</title>
    <url>/2020/03/09/C-Primer-Puls%E7%AC%AC%E5%8D%81%E4%B8%89%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第十三章复习题和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>下面的程序有什么问题？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *fp;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    fp = fopen(<span class="string">"gelatin"</span>);</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">30</span>; k++)</span><br><span class="line">        <span class="built_in">fputs</span>(fp, <span class="string">"Nanette eats gelatin."</span>);</span><br><span class="line">    fclose(<span class="string">"gelatin"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<a id="more"></a>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>下面的程序完成什么任务？（假设在命令行环境中运行）<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(argv[<span class="number">1</span>], <span class="string">"r"</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getc(fp)) != EOF)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(ch))</span><br><span class="line">            <span class="built_in">putchar</span>(ch);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li><p>假设程序中有下列语句：</p>
<pre><code>#include &lt;stdio.h&gt;
FILE *fp1, *fp2;
char ch;
fp1 = fopen(&quot;terky&quot;, &quot;r&quot;);
fp2 = fopen(&quot;jerky&quot;, &quot;w&quot;);
另外，假设成功打开了两个文件。补全下面函数调用中缺少的参数：
a.ch = getc();
b.fprintf(, &quot;%c\n&quot;, );
c.putc(, );
d.fclose(); /* 关闭terky文件 */</code></pre></li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个程序，不接受任何命令行参数或接受一个命令行参数。如果有一个参数，将其解释为文件名；如果没有参数，使用标准输入（stdin）作 为输入。假设输入完全是浮点数。该程序要计算和报告输入数字的算术平均值。</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>编写一个程序，接受两个命令行参数。第1个参数是字符，第2个参数是文件名。要求该程序只打印文件中包含给定字符的那些行。注意C程序根据’\n’识别文件中的行。假设所有行都不超过256个字符，你可能会想到用fgets()。</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>二进制文件和文本文件有何区别？二进制流和文本流有何区别？</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>1<br>a.分别用fprintf()和fwrite()储存8238201有何区别？<br>b.分别用putc()和fwrite()储存字符S有何区别？</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>下面语句的区别是什么？<br>printf(“Hello, %s\n”, name);<br>fprintf(stdout, “Hello, %s\n”, name);<br>fprintf(stderr, “Hello, %s\n”, name);</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>“a+”、”r+”和”w+”模式打开的文件都是可读写的。哪种模式更适合用 来更改文件中已有的内容？</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>修改程序清单13.1中的程序，要求提示用户输入文件名，并读取用户输入的信息，不使用命令行参数。</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>编写一个文件拷贝程序，该程序通过命令行获取原始文件名和拷贝文件名。尽量使用标准I/O和二进制模式。</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个文件拷贝程序，提示用户输入文本文件名，并以该文件名作为原始文件名和输出文件名。该程序要使用 ctype.h 中的 toupper()函数，在 写入到输出文件时把所有文本转换成大写。使用标准I/O和文本模式。</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个程序，按顺序在屏幕上显示命令行中列出的所有文件。使用argc控制循环。</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>修改程序清单13.5中的程序，用命令行界面代替交互式界面。</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>使用命令行参数的程序依赖于用户的内存如何正确地使用它们。重写程序清单 13.2 中的程序，不使用命令行参数，而是提示用户输入所需信息。</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个程序打开两个文件。可以使用命令行参数或提示用户输入文件名。<br>a.该程序以这样的顺序打印：打印第1个文件的第1行，第2个文件的第1行，第1个文件的第2行，第2个文件的第2行，以此类推，打印到行数较多文 件的最后一行。<br>b.修改该程序，把行号相同的行打印成一行。</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>编写一个程序，以一个字符和任意文件名作为命令行参数。如果字符后面没有参数，该程序读取标准输入；否则，程序依次打开每个文件并报告 每个文件中该字符出现的次数。文件名和字符本身也要一同报告。程序应包 含错误检查，以确定参数数量是否正确和是否能打开文件。如果无法打开文件，程序应报告这一情况，然后继续处理下一个文件。</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>修改程序清单 13.3 中的程序，从 1 开始，根据加入列表的顺序为每个单词编号。当程序下次运行时，确保新的单词编号接着上次的编号开始。</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>编写一个程序打开一个文本文件，通过交互方式获得文件名。通过一个循环，提示用户输入一个文件位置。然后该程序打印从该位置开始到下 一个换行符之前的内容。用户输入负数或非数值字符可以结束输入循环。</li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>编写一个程序，接受两个命令行参数。第1个参数是一个字符串，第2个参数是一个文件名。然后该程序查找该文件，打印文件中包含该字符串的所有行。因为该任务是面向行而不是面向字符的，所以要使用fgets()而不 是getc()。使用标准C库函数strstr()（11.5.7节简要介绍过）在每一行中查找 指定字符串。假设文件中的所有行都不超过255个字符。</li>
</ol>
<hr>
<h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>创建一个文本文件，内含20行，每行30个整数。这些整数都在0～9之间，用空格分开。该文件是用数字表示一张图片，0～9表示逐渐增加的灰 度。编写一个程序，把文件中的内容读入一个20×30的int数组中。一种把这 些数字转换为图片的粗略方法是：该程序使用数组中的值初始化一个20×31 的字符数组，用值0 对应空格字符，1 对应点字符，以此类推。数字越大表示字符所占的空间越大。例如，用#表示9。每行的最后一个字符（第31个） 是空字符，这样该数组包含了20个字符串。最后，程序显示最终的图片 （即，打印所有的字符串），并将结果储存在文本文件中。例如，下面是开始的数据：</li>
</ol>
<hr>
<h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>用变长数组（VLA）代替标准数组，完成编程练习12。</li>
</ol>
<hr>
<h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14">
<li>数字图像，尤其是从宇宙飞船发回的数字图像，可能会包含一些失真。为编程练习12添加消除失真的函数。该函数把每个值与它上下左右相邻的值作比较，如果该值与其周围相邻值的差都大于1，则用所有相邻值的平 均值（四舍五入为整数）代替该值。注意，与边界上的点相邻的点少于4 个，所以做特殊处理。</li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第十二章复习题目和编程练习题的答案</title>
    <url>/2020/02/26/C-Primer-Puls%E7%AC%AC%E5%8D%81%E4%BA%8C%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第十二章复习题和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>哪些类别的变量可以成为它所在函数的局部变量？</li>
</ol>
<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>哪些类别的变量在它所在程序的运行期一直存在？</li>
</ol>
<a id="more"></a>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>哪些类别的变量可以被多个文件使用？哪些类别的变量仅限于在一个文件中使用？</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>块作用域变量具有什么链接属性？</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>extern关键字有什么用途？</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>考虑下面两行代码，就输出的结果而言有何异同：<pre><code>int * p1 = (int *)malloc(100 * sizeof(int));
int * p1 = (int *)calloc(100, sizeof(int));</code></pre></li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>下面的变量对哪些函数可见？程序是否有误？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 文件 1 */</span></span><br><span class="line"><span class="keyword">int</span> daisy;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lily;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">petal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> daisy, lily;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 文件 2 */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> daisy;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> lily;</span><br><span class="line"><span class="keyword">int</span> rose;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rose;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">root</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>下面程序会打印什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> color = <span class="string">'B'</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">first</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">second</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">char</span> color;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"color in main() is % c\n "</span>, color);</span><br><span class="line">    first();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"color in main() is %c\n"</span>, color);</span><br><span class="line">    second();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"color in main() is %c\n "</span>, color);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">first</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> color;</span><br><span class="line">    color = <span class="string">'R'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"color in first() is %c\n "</span>, color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">second</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    color = <span class="string">'G'</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"color in second() is %c\n"</span>, color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>假设文件的开始处有如下声明：<pre><code>static int plink;
int value_ct(const int arr[], int value, int n);</code></pre>a.以上声明表明了程序员的什么意图？<br>b.用const int value和const int n分别替换int value和int n，是否对主调程序的值加强保护。</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>不使用全局变量，重写程序清单12.4。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> units = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"How many pounds to a firkin of butter?\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;units);</span><br><span class="line">    <span class="keyword">while</span> (units != <span class="number">56</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No luck, my friend. Try again.\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;units);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"You must have looked it up!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li><p>在美国，通常以英里/加仑来计算油耗；在欧洲，以升/100公里来计算。下面是程序的一部分，提示用户选择计算模式（美制或公制），然后接收数据并计算油耗。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-2b.c // 与 pe12-2a.c 一起编译</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pe12-2a.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mode;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter 0 for metric mode, 1 for US mode: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mode);</span><br><span class="line">    <span class="keyword">while</span> (mode &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        set_mode(mode);</span><br><span class="line">        get_info();</span><br><span class="line">        show_info();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter 0 for metric mode, 1 for US mode"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" (-1 to quit): "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>下面是一些输出示例：</p>
<pre><code>Enter 0 for metric mode, 1 for US mode: 0
Enter distance traveled in kilometers: 600
Enter fuel consumed in liters: 78.8
Fuel consumption is 13.13 liters per 100 km.
Enter 0 for metric mode, 1 for US mode (-1 to quit): 1
Enter distance traveled in miles: 434
Enter fuel consumed in gallons: 12.7
Fuel consumption is 34.2 miles per gallon.
Enter 0 for metric mode, 1 for US mode (-1 to quit): 3
Invalid mode specified. Mode 1(US) used.
Enter distance traveled in miles: 388
Enter fuel consumed in gallons: 15.3
Fuel consumption is 25.4 miles per gallon.
Enter 0 for metric mode, 1 for US mode (-1 to quit): -1
Done.</code></pre><p>如果用户输入了不正确的模式，程序向用户给出提示消息并使用上一次输入的正确模式。请提供pe12-2a.h头文件和pe12-2a.c源文件。源代码文件应定义3个具有文件作用域、内部链接的变量。一个表示模式、一个表示距离、一个表示消耗的燃料。get_info()函数根据用户输入的模式提示用户输入相应数据，并将其储存到文件作用域变量中。show_info()函数根据设置的模式计算并显示油耗。可以假设用户输入的都是数值数据。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-2b.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pe12-2a.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mode;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter 0 for metric mode, 1 for US mode: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mode);</span><br><span class="line">    <span class="keyword">while</span> (mode &gt;= <span class="number">0</span>)           <span class="comment">//输入零或正整数   -1退出</span></span><br><span class="line">    &#123;</span><br><span class="line">        set_mode(mode);</span><br><span class="line">        get_info();</span><br><span class="line">        show_info();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter 0 for metric mode, 1 for US mode"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" (-1 to quit): "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pe12-2a.h"</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> pattern = <span class="number">0</span>;         <span class="comment">//模式</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> last_pattern = <span class="number">1</span>;    <span class="comment">//默认上一次输入的正确模式为 0</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> distance = <span class="number">0</span>;     <span class="comment">//行驶距离</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> fuelconsumed = <span class="number">0</span>; <span class="comment">//消耗的燃料</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_mode</span><span class="params">(<span class="keyword">int</span> mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> pattern;</span><br><span class="line">    pattern = mode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> pattern;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> distance;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> fuelconsumed;</span><br><span class="line">    <span class="keyword">if</span> (pattern != <span class="number">0</span> &amp;&amp; pattern != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pattern = last_pattern;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Invalid mode specified. Mode %d used.\n"</span>, last_pattern);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pattern) <span class="comment">//如果模式为 1</span></span><br><span class="line">    &#123;</span><br><span class="line">        last_pattern = pattern;     <span class="comment">//如果当前模式正确则</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter distance traveled in miles:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter fuel consumed in gallons:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!(pattern)) <span class="comment">//如果模式为 0</span></span><br><span class="line">    &#123;</span><br><span class="line">        last_pattern = pattern;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter distance traveled in kilometers:"</span>); <span class="comment">//换行</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter fuel consumed in liters:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> pattern;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> distance;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> fuelconsumed; <span class="comment">//要确保到si函数时  模式必须为 1 or 0</span></span><br><span class="line">    <span class="keyword">if</span> (pattern)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Fuel consumption is %.1lf miles per gallon.\n"</span>, distance / fuelconsumed);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Fuel consumption is %.2lf liters per 100 km.\n"</span>, fuelconsumed / distance * <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_mode</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>重新设计编程练习2，要求只使用自动变量。该程序提供的用户界面不变，即提示用户输入模式等。但是，函数调用要作相应变化。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-2b.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pe12-2a.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mode;</span><br><span class="line">    <span class="keyword">int</span> last_mode = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">double</span> distance = <span class="number">0</span>;     <span class="comment">//行驶距离</span></span><br><span class="line">    <span class="keyword">double</span> fuelconsumed = <span class="number">0</span>; <span class="comment">//消耗的燃料</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter 0 for metric mode, 1 for US mode: "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mode);</span><br><span class="line">    <span class="keyword">while</span> (mode &gt;= <span class="number">0</span>) <span class="comment">//输入零或正整数   -1退出</span></span><br><span class="line">    &#123;</span><br><span class="line">        get_info(mode, &amp;last_mode, &amp;distance, &amp;fuelconsumed);</span><br><span class="line">        show_info(mode, distance, fuelconsumed);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter 0 for metric mode, 1 for US mode"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" (-1 to quit): "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pe12-2a.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">(<span class="keyword">int</span> mode, <span class="keyword">int</span> *last_mode, <span class="keyword">double</span> *distance, <span class="keyword">double</span> *fuelconsumed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">0</span> &amp;&amp; mode != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mode = *last_mode;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Invalid mode specified. Mode %d used.\n"</span>, *last_mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mode) <span class="comment">//如果模式为 1</span></span><br><span class="line">    &#123;</span><br><span class="line">        *last_mode = mode; <span class="comment">//如果当前模式正确则</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter distance traveled in miles:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter fuel consumed in gallons:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!(mode)) <span class="comment">//如果模式为 0</span></span><br><span class="line">    &#123;</span><br><span class="line">        *last_mode = mode;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter distance traveled in kilometers:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Enter fuel consumed in liters:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">(<span class="keyword">int</span> mode, <span class="keyword">double</span> distance, <span class="keyword">double</span> fuelconsumed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mode)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Fuel consumption is %.1lf miles per gallon.\n"</span>, distance / fuelconsumed);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Fuel consumption is %.2lf liters per 100 km.\n"</span>, fuelconsumed / distance * <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>在一个循环中编写并测试一个函数，该函数返回它被调用的次数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;      <span class="comment">//文件作用域的变量自动初始化为 0</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">'q'</span>)  <span class="comment">//字符串首字母不为q则</span></span><br><span class="line">    &#123;</span><br><span class="line">        fun();</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> count;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>编写一个程序，生成100个1～10范围内的随机数，并以降序排列（可以把第11章的排序算法稍加改动，便可用于整数排序，这里仅对整数排序）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> random[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">        random[i] = (rand() % <span class="number">10</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (random[i] &gt; random[j])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = random[i];</span><br><span class="line">                random[i] = random[j];</span><br><span class="line">                random[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, random[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写一个程序，生成1000个1～10范围内的随机数。不用保存或打印这些数字，仅打印每个数出现的次数。用 10 个不同的种子值运行，生成的数字出现的次数是否相同？可以使用本章自定义的函数或ANSIC的rand()和 srand()函数，它们的格式相同。这是一个测试特定随机数生成器随机性的方法。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>      <span class="comment">//次数不相同   都是100左右</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> seed[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>, a4 = <span class="number">0</span>, a5 = <span class="number">0</span>, a6 = <span class="number">0</span>, a7 = <span class="number">0</span>, a8 = <span class="number">0</span>, a9 = <span class="number">0</span>, a10 = <span class="number">0</span>;</span><br><span class="line">        seed[i] = rand();</span><br><span class="line">        srand(seed[i]);         <span class="comment">//以默认种子为 1 rand()生成10个种子以供使用</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">1000</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (rand() % <span class="number">10</span> + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                a1++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                a2++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                a3++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                a4++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                a5++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                a6++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                a7++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                a8++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                a9++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                a10++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"| 1:%3d | 2:%3d | 3:%3d | 4:%3d | 5:%3d | 6:%3d | 7:%3d | 8:%3d | 9:%3d | 10:%3d |\n"</span>, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个程序，按照程序清单12.13输出示例后面讨论的内容，修改该程序。使其输出类似：<pre><code>Enter the number of sets; enter q to stop : 18
How many sides and how many dice? 6 3
Here are 18 sets of 3 6-sided throws.
12 10 6 9 8 14 8 15 9 14 12 17 11 7 10 13 8 14
How many sets? Enter q to stop: q</code></pre><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* manydice.c -- 多次掷骰子的模拟程序 */</span></span><br><span class="line"><span class="comment">/* 与 diceroll.c 一起编译*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;   /* 为库函数 srand() 提供原型 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;     /* 为 time() 提供原型 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"diceroll.h"</span> <span class="comment">/* 为roll_n_dice()提供原型，为roll_count变量提供声明 */</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>          <span class="comment">//去除了那个外部变量</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> dice, roll, sides, status, num;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="number">0</span>)); <span class="comment">/* 随机种子 */</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Enter the number of sets; enter q to stop :"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"How many sides and how many dice?\n"</span>);</span><br><span class="line">        <span class="keyword">while</span> ((status = (<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;sides, &amp;dice))) != <span class="number">2</span> &amp;&amp;sides == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"You should have entered an integer."</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" Let's begin again.\n"</span>);</span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">/* 处理错误的输入 */</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"How many sides and how many dice?\n"</span>);</span><br><span class="line">            <span class="keyword">continue</span>; <span class="comment">/* 进入循环的下一轮迭代 */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Here are %d sets of %d %d-sided throws.\n"</span>, num, dice, sides);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            roll = roll_n_dice(dice, sides);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, roll);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\nHow many sets? Enter q to stop: \n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"GOOD FORTUNE TO YOU!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* diceroll.c -- 掷骰子模拟程序 */</span></span><br><span class="line"><span class="comment">/* 与 mandydice.c 一起编译 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"diceroll.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;          /* 提供库函数 rand()的原型 */</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">rollem</span><span class="params">(<span class="keyword">int</span> sides)</span> <span class="comment">/* 该函数属于该文件私有 */</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> roll;                       <span class="comment">//接收随机数的最大值    并记录总共筛了几次 且一个骰子筛一次</span></span><br><span class="line">    roll = rand() % sides + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> roll;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">roll_n_dice</span><span class="params">(<span class="keyword">int</span> dice, <span class="keyword">int</span> sides)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (sides &lt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Need at least 2 sides.\n "</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dice &lt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Need at least 1 die.\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (d = <span class="number">0</span>; d &lt; dice; d++)      <span class="comment">//设两个骰子，每个骰子6个面 total值为两个骰子的所得总值</span></span><br><span class="line">        total += rollem(sides);</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// diceroll.h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> roll_count;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">roll_n_dice</span><span class="params">(<span class="keyword">int</span> dice, <span class="keyword">int</span> sides)</span></span>;</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li><p>下面是程序的一部分：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// pe12-8.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">make_array</span><span class="params">(<span class="keyword">int</span> elem, <span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> ar[], <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *pa;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter the number of elements: "</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;size) == <span class="number">1</span> &amp;&amp; size &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter the initialization value: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;value);</span><br><span class="line">        pa = make_array(size, value);</span><br><span class="line">        <span class="keyword">if</span> (pa)</span><br><span class="line">        &#123;</span><br><span class="line">            show_array(pa, size);</span><br><span class="line">            <span class="built_in">free</span>(pa);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter the number of elements (&lt;1 to quit): "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>提供make_array()和show_array()函数的定义，完成该程序。make_array()函数接受两个参数，第1个参数是int类型数组的元素个数，第2个参数是要赋给每个元素的值。该函数调用malloc()创建一个大小合适的数组，将其每个元素设置为指定的值，并返回一个指向该数组的指针。show_array()函数显示数组的内容，一行显示8个数。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">make_array</span><span class="params">(<span class="keyword">int</span> elem, <span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> ar[], <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *pa;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter the number of elements: "</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;size) == <span class="number">1</span> &amp;&amp; size &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter the initialization value: "</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;value);</span><br><span class="line">        pa = make_array(size, value);</span><br><span class="line">        <span class="keyword">if</span> (pa)</span><br><span class="line">        &#123;</span><br><span class="line">            show_array(pa, size);</span><br><span class="line">            <span class="built_in">free</span>(pa);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter the number of elements (&lt;1 to quit): "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">make_array</span><span class="params">(<span class="keyword">int</span> elem, <span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *pt = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(elem * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; elem; i++)</span><br><span class="line">        pt[i] = val;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span> *)pt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> ar[], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++, j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, ar[i]);</span><br><span class="line">        <span class="keyword">if</span> (j % <span class="number">8</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>编写一个符合以下描述的函数。首先，询问用户需要输入多少个单词。然后，接收用户输入的单词，并显示出来，使用malloc()并回答第1个问题（即要输入多少个单词），创建一个动态数组，该数组内含相应的指向char的指针（注意，由于数组的每个元素都是指向char的指针，所以用于储存malloc()返回值的指针应该是一个指向指针的指针，且它所指向的指针指向char）。在读取字符串时，该程序应该把单词读入一个临时的char数组， 使用malloc()分配足够的存储空间来储存单词，并把地址存入该指针数组 （该数组中每个元素都是指向 char 的指针）。然后，从临时数组中把单词拷贝到动态分配的存储空间中。因此，有一个字符指针数组，每个指针都指向一个对象，该对象的大小正好能容纳被储存的特定单词。下面是该程序的一个运行示例：<pre><code>How many words do you wish to enter? 5
Enter 5 words now:
I enjoyed doing this exerise
Here are your words:
I
enjoyed
doing
this
exercise</code></pre><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; //malloc 的原型</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> size 10</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num; <span class="comment">//单词数量</span></span><br><span class="line">    <span class="keyword">char</span>(*pt)[size];</span><br><span class="line">    <span class="keyword">char</span> temp[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"How many words do you wish to enter?"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    getchar();</span><br><span class="line">    pt = (<span class="keyword">int</span>(*)[size])<span class="built_in">malloc</span>(num * size * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    <span class="keyword">if</span> (pt == <span class="literal">NULL</span>) <span class="comment">//如果 malloc 申请内存失败</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"Memory allocation failed. Goodbye."</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter %d words now:\n"</span>, num);</span><br><span class="line">    s_gets(temp, <span class="number">100</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, l = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; size; j++, l++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp[l] == <span class="string">' '</span> || temp[l] == <span class="string">'\0'</span>) <span class="comment">// l是用来统计 temp的总共走向的  i是一维   j是二维   l是字符走向</span></span><br><span class="line">            &#123;</span><br><span class="line">                l++;</span><br><span class="line">                pt[i][j] = <span class="string">'\0'</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pt[i][j] = temp[l];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j == size)       <span class="comment">//如果用户输入的字符数量超过了9个</span></span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            pt[i][size - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"Here are your words:"</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; pt[i] &amp;&amp; i &lt; num; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, pt[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">'\n'</span> &amp;&amp; st[i] != <span class="string">'\0'</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">'\n'</span>)</span><br><span class="line">            st[i] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第十一章复习题目和编程练习题的答案</title>
    <url>/2020/01/28/C-Primer-Puls%E7%AC%AC%E5%8D%81%E4%B8%80%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第十一章复习题和编程练习题的答案<br>从第十一章开始所有的c语言编程练习题答案代码格式化格式都将为<br>C/C++ for Visual Studio Code扩展提供的Visual Studio格式方式<br>扩展仓库地址：<a href="https://github.com/microsoft/vscode-cpptools" target="_blank" rel="noopener">https://github.com/microsoft/vscode-cpptools</a></p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>下面字符串的声明有什么问题？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> name[] = &#123;<span class="string">'F'</span>, <span class="string">'e'</span>, <span class="string">'s'</span>,<span class="string">'s'</span> &#125;;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<a id="more"></a>
<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>下面的程序会打印什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> note[] = <span class="string">"See you at the snack bar."</span>;</span><br><span class="line">    <span class="keyword">char</span> *ptr;</span><br><span class="line">    ptr = note;</span><br><span class="line">    <span class="built_in">puts</span>(ptr);</span><br><span class="line">    <span class="built_in">puts</span>(++ptr);</span><br><span class="line">    note[<span class="number">7</span>] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">puts</span>(note);</span><br><span class="line">    <span class="built_in">puts</span>(++ptr);    <span class="comment">//注意下这行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>下面的程序会打印什么？<pre><code>#include&lt;stdio.h&gt;
#include&lt;string.h&gt;
int main(void)
{
    char food[] = &quot;Yummy&quot;;
    char *ptr;
    ptr = food + strlen(food);  //strlen()函数的返回值为int型成功记录字符的数量
    while (--ptr &gt;= food)
        puts(ptr);
    return 0;
}</code></pre></li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>下面的程序会打印什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> goldwyn[<span class="number">40</span>] = <span class="string">"art of it all "</span>;</span><br><span class="line">    <span class="keyword">char</span> samuel[<span class="number">40</span>] = <span class="string">"I read p"</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *quote = <span class="string">"the way through."</span>;</span><br><span class="line">    <span class="built_in">strcat</span>(goldwyn, quote);</span><br><span class="line">    <span class="built_in">strcat</span>(samuel, goldwyn);</span><br><span class="line">    <span class="built_in">puts</span>(samuel);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li><p>下面的练习涉及字符串、循环、指针和递增指针。首先，假设定义了下面的函数：</p>
<pre><code>#include &lt;stdio.h&gt;
    char *
    pr(char *str)
{
    char *pc;
    pc = str;
    while (*pc)
        putchar(*pc++);
    do
    {
        putchar(*--pc);
    } while (pc - str);
    return (pc);
}</code></pre><p>考虑下面的函数调用： x = pr(“Ho Ho Ho!”);<br>a.将打印什么？<br>b.x是什么类型？<br>c.x的值是什么？<br>d.表达式<em>–pc是什么意思？与–*pc有何不同？<br>e.如果用</em>–pc替换–*pc，会打印什么？<br>f.两个while循环用来测试什么？<br>g.如果pr()函数的参数是空字符串，会怎样？<br>h.必须在主调函数中做什么，才能让pr()函数正常运行？</p>
</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>假设有如下声明：<br>char sign = ‘$’;<br>sign占用多少字节的内存？’$’占用多少字节的内存？”$”占用多少字节的内存？</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>下面的程序会打印出什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 <span class="meta-string">"How are ya, sweetie? "</span></span></span><br><span class="line"><span class="keyword">char</span> M2[<span class="number">40</span>] = <span class="string">"Beatthe clock."</span>;</span><br><span class="line"><span class="keyword">char</span> *M3 = <span class="string">"chat"</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> words[<span class="number">80</span>];</span><br><span class="line">    <span class="built_in">printf</span>(M1);</span><br><span class="line">    <span class="built_in">puts</span>(M1);</span><br><span class="line">    <span class="built_in">puts</span>(M2);</span><br><span class="line">    <span class="built_in">puts</span>(M2 + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(words, M2);</span><br><span class="line">    <span class="built_in">strcat</span>(words, <span class="string">" Win a toy."</span>);</span><br><span class="line">    <span class="built_in">puts</span>(words);</span><br><span class="line">    words[<span class="number">4</span>] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="built_in">puts</span>(words);</span><br><span class="line">    <span class="keyword">while</span> (*M3)</span><br><span class="line">        <span class="built_in">puts</span>(M3++);</span><br><span class="line">    <span class="built_in">puts</span>(--M3);</span><br><span class="line">    <span class="built_in">puts</span>(--M3);</span><br><span class="line">    M3 = M1;</span><br><span class="line">    <span class="built_in">puts</span>(M3);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>下面的程序会打印出什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str1[] = <span class="string">"gawsie"</span>;</span><br><span class="line">    <span class="keyword">char</span> str2[] = <span class="string">"bletonism"</span>;</span><br><span class="line">    <span class="keyword">char</span> *ps;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ps = str1; *ps != <span class="string">'\0'</span>; ps++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*ps == <span class="string">'a'</span> || *ps == <span class="string">'e'</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(*ps);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            (*ps)--;</span><br><span class="line">        <span class="built_in">putchar</span>(*ps);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="keyword">while</span> (str2[i] != <span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, i % <span class="number">3</span> ? str2[i] : <span class="string">'*'</span>);</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>本章定义的s_gets()函数，用指针表示法代替数组表示法便可减少一个变量i。请改写该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span>   <span class="comment">//原型</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">'\n'</span> &amp;&amp; st[i] != <span class="string">'\0'</span>)  <span class="comment">//指针表示法的一大特性就是可以使用递增运算符</span></span><br><span class="line">            i++;                                <span class="comment">//指针加一及将数值赋给解引用后的指针</span></span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">'\n'</span>)</span><br><span class="line">            st[i] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>strlen()函数接受一个指向字符串的指针作为参数，并返回该字符串的长度。请编写一个这样的函数。<br>//空格也算字符</li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>本章定义的s_gets()函数，可以用strchr()函数代替其中的while循环来查找换行符。请改写该函数。<br>//还有另一个叫做strrchar()的函数  中间多了一个r  函数返回指定字符最后一次出现的位置</li>
</ol>
<hr>
<h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>设计一个函数，接受一个指向字符串的指针，返回指向该字符串第1个空格字符的指针，或如果未找到空格字符，则返回空指针。</li>
</ol>
<hr>
<h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>重写程序清单11.21，使用ctype.h头文件中的函数，以便无论用户选择大写还是小写，该程序都能正确识别答案。<br>//作者在答案里居然改了常量答案  //我的方案是全部字符串小写 然后在调用函数让第一个再大写 将这些步骤封装成函数 在s_gets函数后执行</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>设计并测试一个函数，从输入中获取下n个字符（包括空白、制表符、换行符），把结果储存在一个数组里，它的地址被传递作为一个参数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 20</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//独立一行的^z才是EOF</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[SIZE];</span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str, SIZE - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        str[i] = getchar();</span><br><span class="line">        <span class="keyword">if</span> (str[i] == EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            str[i] = <span class="string">'\0'</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    str[i] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>修改并编程练习1的函数，在n个字符后停止，或在读到第1个空白、制表符或换行符时停止，哪个先遇到哪个停止。不能只使用scanf()。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 20</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[SIZE];</span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str, SIZE - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((str[i] = getchar()) == EOF || <span class="built_in">isspace</span>(str[i]))</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            i++;</span><br><span class="line">    &#125;</span><br><span class="line">    str[i] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>设计并测试一个函数，从一行输入中把一个单词读入一个数组中，并丢弃输入行中的其余字符。该函数应该跳过第1个非空白字符前面的所有空白。将一个单词定义为没有空白、制表符或换行符的字符序列。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i] = getchar())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> O = <span class="built_in">isspace</span>(str[i]);</span><br><span class="line">        <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">0</span>)        <span class="comment">//如果当前字符为空格 且t=0  t另有作用</span></span><br><span class="line">            <span class="keyword">continue</span>;           <span class="comment">//则返回while重新接收字符 这样就保证了跳过第一个非空白字符前面的所有空白</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == EOF) <span class="comment">//</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">1</span>)   <span class="comment">//如果当前字符为空格 且t=1则跳出循环</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(str[i] != <span class="string">'\n'</span>)      <span class="comment">//这里再做一个清除工作</span></span><br><span class="line">                str[i] = getchar();</span><br><span class="line">            <span class="keyword">break</span>;              <span class="comment">//假如这里字符的确为空格但t不等于则说明这个空格是第一个非空白字符前面的空白</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            i++;                <span class="comment">//如果当前字符不为空格 则将索引指向下一个元素</span></span><br><span class="line">            t = <span class="number">1</span>;              <span class="comment">//且t=1 用以标明已经开始接收不间断字符</span></span><br><span class="line">        &#125;                       <span class="comment">//如果再遇到标准空格 那么上面那个elseif就会起作用了</span></span><br><span class="line">    &#125;</span><br><span class="line">    str[i] = <span class="string">'\0'</span>;              <span class="comment">//同样不保留换行符</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>设计并测试一个函数，它类似编程练习3的描述，只不过它接受第2个参数指明可读取的最大字符数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;size);</span><br><span class="line">    <span class="keyword">char</span> str[size];             <span class="comment">//变长数组</span></span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str, size - <span class="number">1</span>); <span class="comment">//最后一个位置留给空字符所以size要减一</span></span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((i &lt; n) &amp;&amp; (str[i] = getchar()))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> O = <span class="built_in">isspace</span>(str[i]);</span><br><span class="line">        <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == EOF)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (str[i] != <span class="string">'\n'</span>)</span><br><span class="line">                str[i] = getchar();</span><br><span class="line">            str[i] = <span class="string">'\0'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            t = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        str[i] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>设计并测试一个函数，搜索第1个函数形参指定的字符串，在其中查找第2个函数形参指定的字符首次出现的位置。如果成功，该函数返指向该字符的指针，如果在字符串中未找到指定字符，则返回空指针（该函数的功能与 strchr()函数相同）。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">findchr</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//假设用户是正常人</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%s %c"</span>, str, &amp;ch) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *pt = findchr(str, ch);</span><br><span class="line">        <span class="built_in">putchar</span>(*pt);                <span class="comment">//pt 指向的字符</span></span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%p"</span>, pt);            <span class="comment">//pt 指向的字符的地址</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">findchr</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str != <span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*str == ch)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写一个名为is_within()的函数，接受一个字符和一个指向字符串的指针作为两个函数形参。如果指定字符在字符串中，该函数返回一个非零值 （即为真）。否则，返回0（即为假）。在一个完整的程序中测试该函数， 使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>; <span class="comment">//获取指定数量的字符 且将回车符替换为空字符</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_within</span><span class="params">(<span class="keyword">char</span>, <span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (s_gets(str, <span class="number">20</span>) &amp;&amp; str[<span class="number">0</span>] != <span class="string">'\0'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ch = getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, is_within(ch, str));</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>) <span class="comment">//清空缓冲区</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_within</span><span class="params">(<span class="keyword">char</span> ch, <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*str == ch)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">'\n'</span> &amp;&amp; st[i] != <span class="string">'\0'</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">'\n'</span>)</span><br><span class="line">            st[i] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>strncpy(s1, s2, n)函数把s2中的n个字符拷贝至s1中，截断s2，或者有必要的话在末尾添加空字符。如果s2的长度是n或多于n，目标字符串不能以空字符结尾。该函数返回s1。自己编写一个这样的函数，名为mystrncpy()。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  //如果按照作者第二句来做会出一些混乱的错误</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; //且题目第二句好像并不符合原strncpy()函数的作用</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 20</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">mystrncpy</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>; <span class="comment">//获取指定数量的字符 不带换行符</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[SIZE];</span><br><span class="line">    <span class="keyword">char</span> s2[SIZE];</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (fgets(s2, SIZE, <span class="built_in">stdin</span>) &amp;&amp; s2[<span class="number">0</span>] != <span class="string">'\n'</span>) <span class="comment">//注意下不同的情况当然要做不一样的判断</span></span><br><span class="line">    &#123;                                               <span class="comment">//fgets()是接收换行符的</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"你想复制多少个字符"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">        getchar(); <span class="comment">//去除scanf()留下的换行符</span></span><br><span class="line">        <span class="keyword">char</span> *funback = mystrncpy(s1, s2, n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"fb = %s\n"</span>, funback);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"s1 = %s\n"</span>, s1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入下一段字符串\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"done"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">mystrncpy</span><span class="params">(<span class="keyword">char</span> *s1, <span class="keyword">char</span> *s2, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        s1[i] = s2[i];</span><br><span class="line">    <span class="keyword">return</span> s1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">'\n'</span> &amp;&amp; st[i] != <span class="string">'\0'</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">'\n'</span>)</span><br><span class="line">            st[i] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>编写一个名为string_in()的函数，接受两个指向字符串的指针作为参数。如果第2个字符串中包含第1个字符串，该函数将返回第1个字符串开始的地址。例如，string_in(“hats”, “at”)将返回hats中a的地址。否则，该函数返回空指针。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">string_in</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[<span class="number">20</span>], s2[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"s1"</span>);</span><br><span class="line">    <span class="keyword">while</span> (fgets(s1, <span class="number">20</span>, <span class="built_in">stdin</span>) &amp;&amp; s1[<span class="number">0</span>] != <span class="string">'\n'</span>) <span class="comment">//两个检测 不为EOF和换行符 因为fgets()函数的返回值</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"s2"</span>);</span><br><span class="line">        fgets(s2, <span class="number">20</span>, <span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">char</span> **funback = string_in(s1, s2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"指针指向的字符%c\n指针指向字符的地址%X\n"</span>, *funback, funback);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"s1"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"done"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">string_in</span><span class="params">(<span class="keyword">char</span> *s1, <span class="keyword">char</span> *s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s2) - <span class="number">1</span>;       <span class="comment">//求s2最大有效值索引</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; s1[i] != <span class="string">'\0'</span>; i++) <span class="comment">//外层只管当前索引得值不为空字符  这样就把整个s1给遍历了一遍</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *pt = &amp;s1[i];          <span class="comment">//记录当前索引值</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; s1[i + j] == s2[j]; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j == len)           <span class="comment">//如果当前索引值是s2最后一个有效值</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">char</span> *)pt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>编写一个函数，把字符串中的内容用其反序字符串代替。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reversal</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (fgets(str, <span class="number">20</span>, <span class="built_in">stdin</span>) &amp;&amp; str[<span class="number">0</span>] != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        reversal(str);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reversal</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);      <span class="comment">//还有搞前后temp替换的</span></span><br><span class="line">    <span class="keyword">char</span> temp[len + <span class="number">1</span>];</span><br><span class="line">    temp[len] = <span class="string">'\0'</span>;</span><br><span class="line">    <span class="keyword">while</span> (len)</span><br><span class="line">        temp[i++] = str[--len];</span><br><span class="line">    <span class="built_in">strcpy</span>(str, temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>编写一个函数接受一个字符串作为参数，并删除字符串中的空格。在一个程序中测试该函数，使用循环读取输入行，直到用户输入一行空行。 该程序应该应用该函数只每个输入的字符串，并显示处理后的字符串。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drop_space</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (fgets(str, <span class="number">20</span>, <span class="built_in">stdin</span>) &amp;&amp; str[<span class="number">0</span>] != <span class="string">'\n'</span> &amp;&amp; str[<span class="number">0</span>] != <span class="string">' '</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        drop_space(str);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drop_space</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>; str[i] != <span class="string">'\0'</span>; i++)     <span class="comment">//遍历</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] != <span class="string">' '</span>)          <span class="comment">//如果当前索引值不为空格</span></span><br><span class="line">        &#123;</span><br><span class="line">            str[j] = str[i];        <span class="comment">//就把当前索引值赋值给 从 0 另外计数的原指针</span></span><br><span class="line">            <span class="keyword">if</span> (i != j)             <span class="comment">//这个判断说明之前遇到空格了 所以要把i的索引值变为空字符</span></span><br><span class="line">                str[i] = <span class="string">'\0'</span>;      <span class="comment">//可能会有点迷  完整的跑一边逐句吧</span></span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十一题-1"><a href="#第十一题-1" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>编写一个函数，读入10个字符串或者读到EOF时停止。该程序为用户提供一个有5个选项的菜单：打印源字符串列表、以ASCII中的顺序打印字符串、按长度递增顺序打印字符串、按字符串中第1个单词的长度打印字符串、退出。菜单可以循环显示，除非用户选择退出选项。当然，该程序要能真正完成菜单中各选项的功能。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 11</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getten</span><span class="params">(<span class="keyword">char</span> *)</span></span>;          <span class="comment">//获取十个字符</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putstr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;    <span class="comment">//打印源字符串列表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">oba</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;       <span class="comment">//以ASCII中的顺序打印字符串    order by ascii</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">triangle</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;  <span class="comment">//按长度递增顺序打印字符串      直角三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">firstword</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>; <span class="comment">//按字符串中第1个单词的长度打印字符串 打印第一个单词</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[SIZE];</span><br><span class="line">    <span class="keyword">char</span> *menu = <span class="string">"a. 打印源字符串列表           b. 以ASCII中的顺序打印字符串\nc. 按长度递增顺序打印字符串   d. 按字符串中第1个单词的长度打印字符串\nq. 退出"</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    getten(str);</span><br><span class="line">    <span class="built_in">puts</span>(menu);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'q'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">            putstr(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'b'</span>:</span><br><span class="line">            oba(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'c'</span>:</span><br><span class="line">            triangle(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">            firstword(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"输入错误\n"</span>);</span><br><span class="line">            <span class="built_in">puts</span>(menu);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">firstword</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; str[i] != <span class="string">' '</span> &amp;&amp; str[i] != <span class="string">'\0'</span>; i++)</span><br><span class="line">        <span class="built_in">putchar</span>(str[i]);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">triangle</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; str[i] != <span class="string">'\0'</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">            <span class="built_in">putchar</span>(str[j]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">oba</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">char</span> temp;                      <span class="comment">//暂存</span></span><br><span class="line">    <span class="keyword">char</span> pt[SIZE];</span><br><span class="line">    <span class="built_in">strncpy</span>(pt, str, <span class="number">10</span>);           <span class="comment">//做了一个副本</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; pt[i]; i++)         <span class="comment">//cpp做过一个示例  和它一样的流程</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; pt[j] &amp;&amp; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pt[i] &lt; pt[j])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = pt[i];</span><br><span class="line">                pt[i] = pt[j];</span><br><span class="line">                pt[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(pt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putstr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(*str);</span><br><span class="line">        str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getten</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (SIZE - <span class="number">1</span>); i++)    <span class="comment">//数组从零计数</span></span><br><span class="line">    &#123;</span><br><span class="line">        str[i] = getchar();</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'\n'</span> || str[i] == EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            str[i] = <span class="string">'\0'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i == (SIZE - <span class="number">1</span>))        <span class="comment">//如果为真，说明用户输入字符数量超过了10个或正好十个</span></span><br><span class="line">    &#123;                           <span class="comment">//因为上面for的判断 所以我们只需要检测变量i就够了</span></span><br><span class="line">        str[SIZE] = <span class="string">'\0'</span>;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>) <span class="comment">//test</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十二题-1"><a href="#第十二题-1" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>编写一个程序，读取输入，直至读到 EOF，报告读入的单词数、大写字母数、小写字母数、标点符号数和数字字符数。使用ctype.h头文件中的函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>, word = <span class="number">1</span>, upper = <span class="number">0</span>, lower = <span class="number">0</span>, punct = <span class="number">0</span>, digit = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((str[i] = getchar()) &amp;&amp; str[i] != EOF) <span class="comment">//当然这样很不安全</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isspace</span>(str[<span class="number">0</span>]))      <span class="comment">//如果开头是空白字符则</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">        str[i - <span class="number">1</span>] = <span class="string">'\0'</span>; <span class="comment">//这个位置是换行符 然后我把它换为空字符</span></span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(str[i]))            <span class="comment">//依次为统计大写，小写，标点符号，数字，单词数量</span></span><br><span class="line">            upper++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">islower</span>(str[i]))</span><br><span class="line">            lower++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">ispunct</span>(str[i]))</span><br><span class="line">            punct++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isdigit</span>(str[i]))</span><br><span class="line">            digit++;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">isspace</span>(str[i]) &amp;&amp; t == <span class="number">1</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            word++;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            t = <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"读入单词数有%d个\n"</span></span><br><span class="line">           <span class="string">"大写字母数有%d个\n"</span></span><br><span class="line">           <span class="string">"小写字母数有%d个\n"</span></span><br><span class="line">           <span class="string">"标点符号数有%d个\n"</span></span><br><span class="line">           <span class="string">"数字字符数有%d个\n"</span>,</span><br><span class="line">           word, upper, lower, punct, digit);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十三题-1"><a href="#第十三题-1" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>编写一个程序，反序显示命令行参数的单词。例如，命令行参数是see you later，该程序应打印later you see。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = argc - <span class="number">1</span>; i != <span class="number">0</span>; i--) <span class="comment">//argc记录总共有多少个字符串 因为[0]元素是内定的程序磁盘地址</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s "</span>, argv[i]);         <span class="comment">//这里减一 然后反向遍历这个指向数组的指针</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                           <span class="comment">//另外双引号可以把多个单词括起来形成一个参数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14">
<li>编写一个通过命令行运行的程序计算幂。第1个命令行参数是double类型的数，作为幂的底数，第2个参数是整数，作为幂的指数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">double</span> num = atof(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span> exponent = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">double</span> result = num;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; exponent; i++)</span><br><span class="line">        result *= num;</span><br><span class="line">    <span class="keyword">if</span> (exponent == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%f"</span>, num / num);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%f"</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十五题"><a href="#第十五题" class="headerlink" title="第十五题"></a>第十五题</h3><ol start="15">
<li>使用字符分类函数实现atoi()函数。如果输入的字符串不是纯数字，该函数返回0。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">catoi</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">int</span> i = myatoi(str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myatoi</span><span class="params">(<span class="keyword">char</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(p);</span><br><span class="line">    <span class="keyword">int</span> i, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(p[i]))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>                           <span class="comment">//自动转换</span></span><br><span class="line">            n = n * <span class="number">10</span> + (p[i] - <span class="string">'0'</span>); <span class="comment">// n =   1 * 10 + (50 - 48)</span></span><br><span class="line">    &#125;                                  <span class="comment">// n =  12 * 10 + (51 - 48)</span></span><br><span class="line">    <span class="keyword">return</span> n;                          <span class="comment">// n = 123 * 10 + (52 - 48)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十六题"><a href="#第十六题" class="headerlink" title="第十六题"></a>第十六题</h3><ol start="16">
<li>编写一个程序读取输入，直至读到文件结尾，然后把字符串打印出来。该程序识别和实现下面的命令行参数：<br>-p  按原样打印<br>-u  把输入全部转换成大写<br>-l  把输入全部转换成小写<br>如果没有命令行参数，则让程序像是使用了-p参数那样运行。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getstr</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span>    <span class="comment">//题外话 python语言没有switch语句</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">30</span>] = <span class="string">"HELLOWORLD"</span>;</span><br><span class="line">    <span class="keyword">char</span> *pt;</span><br><span class="line">    getstr(str);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"-p"</span>) == <span class="number">0</span>)         <span class="comment">//整个swithch语句</span></span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"-u"</span>) == <span class="number">0</span>)    <span class="comment">//这里没用switch是因为case后面的语句可能不支持两个字符</span></span><br><span class="line">    &#123;                                       <span class="comment">//时间问题所以我没去尝试</span></span><br><span class="line">        <span class="keyword">for</span> (pt = str; *pt; pt++)</span><br><span class="line">            *pt = <span class="built_in">toupper</span>(*pt);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"-l"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (pt = str; *pt; pt++)</span><br><span class="line">            *pt = <span class="built_in">tolower</span>(*pt);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(str); <span class="comment">//这个就是default选项</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getstr</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((str[i] = getchar()) &amp;&amp; str[i] != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isspace</span>(str[<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">        str[i - <span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>自定义头文件库</title>
    <url>/2020/01/27/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%B4%E6%96%87%E4%BB%B6%E5%BA%93/</url>
    <content><![CDATA[<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="comment">//本自定义头文件库包括以下函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SDTC</span><span class="params">(<span class="keyword">long</span>, <span class="keyword">long</span>)</span></span>;          <span class="comment">//SetDataToClip         设置指定数据到剪切板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SCPTC</span><span class="params">(<span class="keyword">void</span>)</span></span>;               <span class="comment">//SetCursorPosToClip    设置鼠标坐标到剪切板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CAP</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;         <span class="comment">//ClickAppointPos       鼠标左键点击传入的坐标值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IAS</span><span class="params">(<span class="keyword">char</span> *str)</span></span>;            <span class="comment">//InputAppointString    按下指定字符串包含的按键</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SCPTC</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LONG zx = <span class="number">-1</span>;</span><br><span class="line">    LONG zy = <span class="number">-1</span>;</span><br><span class="line">    POINT ptB = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LPPOINT xy = &amp;ptB;                  <span class="comment">//位置变量</span></span><br><span class="line">        GetCursorPos(xy);                   <span class="comment">//获取鼠标当前位置</span></span><br><span class="line">        <span class="keyword">if</span> ((zx != xy-&gt;x) || (zy != xy-&gt;y)) <span class="comment">//如果鼠标移动，（即当前的坐标改变则打印出坐标）打印出做坐标。</span></span><br><span class="line">        &#123;</span><br><span class="line">            system(<span class="string">"CLS"</span>); <span class="comment">//不要一列输出 在鼠标移动后就进行一个清屏</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"x=%d,y=%d\n"</span>, xy-&gt;x, xy-&gt;y);</span><br><span class="line">            zx = xy-&gt;x;</span><br><span class="line">            zy = xy-&gt;y; <span class="comment">//检测鼠标左键的状态  如果鼠标左键被按下</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (GetKeyState(<span class="number">0x20</span>) &lt; <span class="number">0</span> || GetKeyState(<span class="number">0x01</span>) &lt; <span class="number">0</span>) <span class="comment">//如果空格或者鼠标左键被按下 就调用这个函数</span></span><br><span class="line">            SetDataToClip(zx, zy);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetDataToClip</span><span class="params">(<span class="keyword">long</span> x, <span class="keyword">long</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!OpenClipboard(<span class="literal">NULL</span>) || !EmptyClipboard()) <span class="comment">// 打开剪贴板</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"打开或清空剪切板出错！/n"</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    HGLOBAL hMen;</span><br><span class="line">    <span class="keyword">char</span> cz[<span class="number">20</span>]; <span class="comment">//直接使用sprintf()就能用了</span></span><br><span class="line">    <span class="built_in">sprintf</span>(cz, <span class="string">"%d, %d"</span>, x, y);</span><br><span class="line">    TCHAR strText[<span class="number">256</span>]; <span class="comment">//这一步用函数可能更稳一些</span></span><br><span class="line">    <span class="built_in">strcpy</span>(strText, cz);</span><br><span class="line">    hMen = GlobalAlloc(GMEM_MOVEABLE, ((<span class="built_in">strlen</span>(strText) + <span class="number">1</span>) * <span class="keyword">sizeof</span>(TCHAR))); <span class="comment">// 分配全局内存</span></span><br><span class="line">    <span class="keyword">if</span> (!hMen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"分配全局内存出错！/n"</span>);</span><br><span class="line">        CloseClipboard(); <span class="comment">// 关闭剪切板</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 把数据拷贝考全局内存中</span></span><br><span class="line">    LPSTR lpStr = (LPSTR)GlobalLock(hMen);                       <span class="comment">// 锁住内存区</span></span><br><span class="line">    <span class="built_in">memcpy</span>(lpStr, strText, ((<span class="built_in">strlen</span>(strText)) * <span class="keyword">sizeof</span>(TCHAR))); <span class="comment">// 内存复制</span></span><br><span class="line">    lpStr[<span class="built_in">strlen</span>(strText)] = (TCHAR)<span class="number">0</span>;                           <span class="comment">// 字符结束符</span></span><br><span class="line">    GlobalUnlock(hMen);                                          <span class="comment">// 释放锁</span></span><br><span class="line">    SetClipboardData(CF_TEXT, hMen);                             <span class="comment">// 把内存中的数据放到剪切板上</span></span><br><span class="line">    CloseClipboard();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputAppointString</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">	Sleep(<span class="number">500</span>);</span><br><span class="line">	<span class="keyword">while</span> (str[i] != <span class="string">'\0'</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> target = str[i];			<span class="comment">//数组中得字符转换成int型的数值 然后传给keybd_event()函数</span></span><br><span class="line">		Sleep(<span class="number">100</span>);</span><br><span class="line">		keybd_event(target, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">		keybd_event(target, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">		i++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"字符串%s输入成功\n"</span>, str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClickAppointPos</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	SetCursorPos(x, y);							   <span class="comment">//移动鼠标到指定坐标值</span></span><br><span class="line">	mouse_event(MOUSEEVENTF_LEFTDOWN, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//左键按下</span></span><br><span class="line">	mouse_event(MOUSEEVENTF_LEFTUP, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);   <span class="comment">//左键松开</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"坐标值%d,%d点击成功\n"</span>, x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enter</span><span class="params">(<span class="keyword">int</span> i)</span>       <span class="comment">//修一下  再加一个sleep函数的参数   要高级一些的  也就是可以自定义是否选择设置这个sleep参数</span></span></span><br><span class="line"><span class="function"></span>&#123;                       <span class="comment">//在高级一些 自定义函数的参数数量 可以一次调用多个参数</span></span><br><span class="line">	keybd_event(i, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//按下win键</span></span><br><span class="line">	keybd_event(i, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>); <span class="comment">//松开</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言中指针和数组关系统计</title>
    <url>/2020/01/02/C%E8%AF%AD%E8%A8%80%E6%8C%87%E9%92%88%E5%92%8C%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<p>由于指针和数组的关系过于繁杂 所以写一篇统计对比来巩固且用于日后参考</p>
<h2 id="指针和数组"><a href="#指针和数组" class="headerlink" title="指针和数组"></a>指针和数组</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> va  =  <span class="number">10</span>;        <span class="comment">//声明一个int型变量va，且初始化其值为10；</span></span><br><span class="line"><span class="keyword">int</span> *pt = &amp;va;        <span class="comment">//声明一个int型指针pt，指向变量va的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,  va);    <span class="comment">//变量va的数值 10</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>, *pt);    <span class="comment">//解引用指针pt后的数值 10</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%p"</span>,  pt);    <span class="comment">//指针pt的数值        例：61fe1c</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%p"</span>, &amp;va);    <span class="comment">//变量va的物理地址    例：61fe1c</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%x"</span>, &amp;pt);    <span class="comment">//十六进制指针pt的物理地址    例：61fe10</span></span><br></pre></td></tr></table></figure>

<h2 id="数组基本"><a href="#数组基本" class="headerlink" title="数组基本"></a>数组基本</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">7</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;   <span class="comment">//声明一个int型数组array，项数为7，初始化元素为</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">7</span>] = &#123;<span class="number">0</span>, <span class="number">1</span>, [<span class="number">3</span>] = <span class="number">2</span>, [<span class="number">4</span>] = <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;   <span class="comment">//C99增加的一个特性 用于初始化指定的数组元素    当然如果操作不当会出现一些小问题 这里就不解释了</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">4</span>][<span class="number">4</span>] =</span><br><span class="line">&#123;</span><br><span class="line">    &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">2</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="number">3</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">&#125;;                              <span class="comment">//二维数组声明</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++)     <span class="comment">//打印一维数组的一种方法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">array</span>[i]);</span><br><span class="line"><span class="comment">//打印二维数组则需要嵌套一个for</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">array</span>[i][j]);</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<h2 id="指针和多维数组"><a href="#指针和多维数组" class="headerlink" title="指针和多维数组"></a>指针和多维数组</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">4</span>][<span class="number">4</span>] =</span><br><span class="line">    &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">     &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">     &#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;,</span><br><span class="line">     &#123;<span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//array是这个数组首元素的地址</span></span><br><span class="line"><span class="comment">//所以array = &amp;array[0]</span></span><br><span class="line"><span class="comment">//而array[0]又是array[0][0]的首元素的地址</span></span><br><span class="line"><span class="comment">//所以array[0] = &amp;array[0][0]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//因为</span></span><br><span class="line"><span class="comment">//array[1] == *(array + 1)      //相同数值</span></span><br><span class="line"><span class="comment">//&amp;array[1] == array + 1        //相同地址      也就是指针形式</span></span><br><span class="line"><span class="comment">//所以可有以下代码行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//指针形式</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">array</span>);                        <span class="comment">//二维数组首元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">array</span> + <span class="number">1</span>);                    <span class="comment">//二维数组第二个元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, *(<span class="built_in">array</span> + <span class="number">1</span>));                 <span class="comment">//二维数组第二个元素首元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, *(<span class="built_in">array</span> + <span class="number">1</span>) + <span class="number">1</span>);             <span class="comment">//二维数组第二个元素的第二个元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, *(*(<span class="built_in">array</span> + <span class="number">1</span>) + <span class="number">1</span>));          <span class="comment">//二维数组第二个元素的第二个元素的数值</span></span><br><span class="line"><span class="comment">//数组形式</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, &amp;<span class="built_in">array</span>[<span class="number">0</span>]);                    <span class="comment">//二维数组首元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, &amp;<span class="built_in">array</span>[<span class="number">1</span>]);                    <span class="comment">//二维数组第二个元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, &amp;<span class="built_in">array</span>[<span class="number">1</span>][<span class="number">0</span>]);                 <span class="comment">//二维数组第二个元素首元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, &amp;<span class="built_in">array</span>[<span class="number">1</span>][<span class="number">1</span>]);                 <span class="comment">//二维数组第二个元素的第二个元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">array</span>[<span class="number">1</span>][<span class="number">1</span>]);                  <span class="comment">//二维数组第二个元素的第二个元素的数值</span></span><br><span class="line"><span class="comment">//半指针半数组形式  就举俩例子吧  说明有这个写法 用多了估计会走火入魔</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, &amp;*(<span class="built_in">array</span>[<span class="number">1</span>] + <span class="number">1</span>));             <span class="comment">//二维数组第二个元素的第二个元素的地址</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>, *(<span class="built_in">array</span>[<span class="number">1</span>] + <span class="number">1</span>));              <span class="comment">//二维数组第二个元素的第二个元素的数值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//第十章的编程练习答案里我把三种形式各用了一遍 可以看一下都有些什么样的优势(当然包括半指针和半数组形式)</span></span><br></pre></td></tr></table></figure>

<h2 id="指针数组"><a href="#指针数组" class="headerlink" title="指针数组"></a>指针数组</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> *pt[<span class="number">4</span>];</span><br><span class="line"><span class="comment">//pt是一个内含四个指针元素的数组，每个元素都指向int的指针</span></span><br><span class="line"><span class="comment">//用于指向四个数值 使用以下示例</span></span><br><span class="line"><span class="keyword">char</span> * pt[<span class="number">4</span>] = &#123;</span><br><span class="line">    <span class="string">"Hello,World!"</span>,</span><br><span class="line">    <span class="string">"Three,Body!"</span>,</span><br><span class="line">    <span class="string">"I'm,Hunger"</span>,</span><br><span class="line">    <span class="string">"Candy,Cola"</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, pt[i]);</span><br></pre></td></tr></table></figure>

<h2 id="数组指针-指向多维数组的指针-·"><a href="#数组指针-指向多维数组的指针-·" class="headerlink" title="数组指针(指向多维数组的指针)·"></a>数组指针(指向多维数组的指针)·</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> (* pt)[<span class="number">4</span>];</span><br><span class="line"><span class="comment">//pt指向一个内含四个int类型数值的数组</span></span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">4</span>][<span class="number">4</span>] =</span><br><span class="line">        &#123;&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;,</span><br><span class="line">         &#123;<span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>&#125;,</span><br><span class="line">         &#123;<span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;,</span><br><span class="line">         &#123;<span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>, <span class="number">16</span>&#125;&#125;;</span><br><span class="line">    pt = &amp;<span class="built_in">array</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, pt[<span class="number">0</span>][<span class="number">0</span>]); <span class="comment">//然后就可以使用指针和多维数组里的那些操作了</span></span><br></pre></td></tr></table></figure>

<h2 id="指向指针的指针"><a href="#指向指针的指针" class="headerlink" title="指向指针的指针"></a>指向指针的指针</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  //http://c.biancheng.net/view/2016.html</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> *p1 = &amp;a;</span><br><span class="line">    <span class="keyword">int</span> **p2 = &amp;p1;</span><br><span class="line">    <span class="keyword">int</span> ***p3 = &amp;p2;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d, %d, %d, %d\n"</span>, a, *p1, **p2, ***p3);    <span class="comment">//如何得到a的值</span></span><br><span class="line">    <span class="comment">// 100, 100, 100, 100</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" &amp;a = %#X, p1 = %#X, *p2 = %#X, **p3 = %#X\n"</span>, &amp;a, p1, *p2, **p3);  <span class="comment">//如何得到a的地址</span></span><br><span class="line">    <span class="comment">//&amp;a = 0X28FF44, p1 = 0X28FF44, *p2 = 0X28FF44, **p3 = 0X28FF44</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"&amp;p2 = %#X, p3 = %#X\n"</span>, &amp;p2, p3);           <span class="comment">//如何得到二级p2的地址</span></span><br><span class="line">    <span class="comment">// &amp;p2 = 0X28FF3C, p3 = 0X28FF3C</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"&amp;p1 = %#X, p2 = %#X, *p3 = %#X\n"</span>, &amp;p1, p2, *p3);   <span class="comment">//如何得到指针p1的地址</span></span><br><span class="line">    <span class="comment">// &amp;p1 = 0X28FF40, p2 = 0X28FF40, *p3 = 0X28FF40</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="void指针、NULL指针和NUL"><a href="#void指针、NULL指针和NUL" class="headerlink" title="void指针、NULL指针和NUL"></a>void指针、NULL指针和NUL</h2><figure class="highlight"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span>指针    <span class="comment">//由于void没有特性的类型，因此它可以指向任何类型的数据</span></span><br><span class="line">因为现在我用不到 所以就先不记了</span><br><span class="line"></span><br><span class="line"><span class="literal">NULL</span>指针在stdio.h中被定义为    <span class="meta">#<span class="meta-keyword">define</span> NULL ((void *)0)</span></span><br><span class="line">(<span class="keyword">void</span> *)<span class="number">0</span> 把数值<span class="number">0</span>显式转换为<span class="keyword">void</span> * 类型</span><br><span class="line"></span><br><span class="line">NUL是ASCII中的第一个字符的名称　被定义为'/0'</span><br><span class="line">而数字0对应十进制48  所以不要把NUL和NULL搞混　也不要把'/0'和0搞混</span><br></pre></td></tr></table></figure>

<h2 id="函数、数组和指针"><a href="#函数、数组和指针" class="headerlink" title="函数、数组和指针"></a>函数、数组和指针</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROWS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COLS 4</span></span><br><span class="line"><span class="comment">//声明数组形参原型  两种类型等效 但只有指针形式可以使用递增</span></span><br><span class="line"><span class="comment">//一维数组操作函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put1</span><span class="params">(<span class="keyword">int</span>  *pt, <span class="keyword">int</span> n)</span></span>;  <span class="comment">//指针形式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put2</span><span class="params">(<span class="keyword">int</span>  *  , <span class="keyword">int</span>  )</span></span>;  <span class="comment">//指针形式 省略形参</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put3</span><span class="params">(<span class="keyword">int</span> pt[], <span class="keyword">int</span> n)</span></span>;  <span class="comment">//数组形式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put4</span><span class="params">(<span class="keyword">int</span>   [], <span class="keyword">int</span>  )</span></span>;  <span class="comment">//数组形式 省略形参    //把要操作的数组名地址作为第一个参数，然后是这个数组的长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//二维数组操作函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put5</span><span class="params">(<span class="keyword">int</span> (*pt)[COLS], <span class="keyword">int</span> rows)</span></span>;       <span class="comment">//半指针半数组形式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put6</span><span class="params">(<span class="keyword">int</span> (*  )[COLS], <span class="keyword">int</span>     )</span></span>;       <span class="comment">//半指针半数组形式 省略形参</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put7</span><span class="params">(<span class="keyword">int</span>  pt[][COLS], <span class="keyword">int</span> rows)</span></span>;       <span class="comment">//数组形式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put8</span><span class="params">(<span class="keyword">int</span>    [][COLS], <span class="keyword">int</span>     )</span></span>;       <span class="comment">//数组形式 省略形参     //把要操作的数组名作为第一个参数，然后是这个数组维度数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//带变长数组形参的二维数组操作函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">puta</span><span class="params">(<span class="keyword">int</span> rows, <span class="keyword">int</span> cols, <span class="keyword">int</span> ar[rows][cols])</span></span>;   <span class="comment">//数组形式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putb</span><span class="params">(<span class="keyword">int</span>     , <span class="keyword">int</span> cols, <span class="keyword">int</span>   [    ][cols])</span></span>;   <span class="comment">//数组形式 省略形参    //多维数组的声明必须具有除第一个维度以外的所有维度的边界</span></span><br></pre></td></tr></table></figure>

<h2 id="指针函数和函数指针"><a href="#指针函数和函数指针" class="headerlink" title="指针函数和函数指针"></a>指针函数和函数指针</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">指针函数</span><br><span class="line">    像<span class="built_in">strcpy</span>()函数，<span class="built_in">strcat</span>()函数，<span class="built_in">strcmp</span>()函数，这些都是指针函数用来返回一个指针 注意：不要返回局部变量</span><br><span class="line"></span><br><span class="line">函数指针</span><br></pre></td></tr></table></figure>

<h2 id="指针操作-295"><a href="#指针操作-295" class="headerlink" title="指针操作 295"></a>指针操作 295</h2><h2 id="参数中带函数的函数"><a href="#参数中带函数的函数" class="headerlink" title="参数中带函数的函数"></a>参数中带函数的函数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">def add(x, y, f):           //abs是一个求绝对值的函数</span><br><span class="line">    return f(x) + f(y)</span><br><span class="line">print(add(-5, 6, abs))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第十章复习题目和编程练习题的答案</title>
    <url>/2019/10/03/C-Primer-Puls%E7%AC%AC%E5%8D%81%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第十章复习题和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>下面的程序将打印什么内容？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ref[] = &#123;<span class="number">8</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *ptr;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>, ptr = ref; index &lt; <span class="number">4</span>; index++, ptr++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, ref[index], *ptr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>在复习题1中，ref有多少个元素？</li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>在复习题1中，ref的地址是什么？ref + 1是什么意思？++ref指向什么？</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li><p>在下面的代码中，*ptr和*(ptr + 2)的值分别是什么？</p>
<pre><code>a.
int *ptr;
int torf[2][2] = {12, 14, 16};
ptr = torf[0];
b.
int * ptr;
int fort[2][2] = { {12}, {14,16} };
ptr = fort[0];</code></pre></li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li><p>在下面的代码中，**ptr和**(ptr + 1)的值分别是什么？</p>
<pre><code>a. int (*ptr)[2];
int torf[2][2] = {12, 14, 16};
ptr = torf;
b. int (*ptr)[2];
int fort[2][2] = { {12}, {14,16} };
ptr = fort;</code></pre></li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>假设有下面的声明：<pre><code>int grid[30][100];
a.用1种写法表示grid[22][56]
b.用2种写法表示grid[22][0]
c.用3种写法表示grid[0][0]</code></pre></li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>正确声明以下各变量：<pre><code>a.digits是一个内含10个int类型值的数组
b.rates是一个内含6个float类型值的数组
c.mat是一个内含3个元素的数组，每个元素都是内含5个整数的数组
d.psa是一个内含20个元素的数组，每个元素都是指向int的指针
e.pstr是一个指向数组的指针，该数组内含20个char类型的值</code></pre></li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>完成以下要求:<pre><code>a.声明一个内含6个int类型值的数组，并初始化各元素为1、2、4、8、16、32
b.用数组表示法表示a声明的数组的第3个元素（其值为4)
c.假设编译器支持C99/C11标准，声明一个内含100个int类型值的数组，并初始化最后一个元素为-1，其他元素不考虑
d.假设编译器支持C99/C11标准，声明一个内含100个int类型值的数组，并初始化下标为5、10、11、12、3的元素为101，其他元素不考虑</code></pre></li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>内含10个元素的数组下标范围是什么？</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>假设有下面的声明：<pre><code>float rootbeer[10], things[10][5], *pf, value = 2.2;
int i = 3;
判断以下各项是否有效：
a.rootbeer[2] = value;
b.scanf(&quot;%f&quot;, &amp;rootbeer);
c.rootbeer = value;
d.printf(&quot;%f&quot;, rootbeer);
e.things[4][4] = rootbeer[3];
f.things[5] = rootbeer;
g.pf = value;
h.pf = rootbeer;</code></pre></li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>声明一个800×600的int类型数组。</li>
</ol>
<hr>
<h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>下面声明了3个数组：<pre><code>double trots[20];
short clops[10][30];
long shots[5][10][15];
a.分别以传统方式和以变长数组为参数的方式编写处理trots数组的void函数原型和函数调用
b.分别以传统方式和以变长数组为参数的方式编写处理clops数组的void函数原型和函数调用
c.分别以传统方式和以变长数组为参数的方式编写处理shots数组的void函数原型和函数调用</code></pre></li>
</ol>
<hr>
<h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>下面有两个函数原型：<pre><code>void show(const double ar[], int n);// n是数组元素的个数
void show2(const double ar2[][3], int n);// n是二维数组的行数
a.编写一个函数调用，把一个内含8、3、9和2的复合字面量传递给show()函数。
b.编写一个函数调用，把一个2行3列的复合字面量（8、3、9作为第1行，5、4、1作为第2行）传递给show2()函数。</code></pre></li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>修改程序清单10.7的rain.c程序，用指针进行计算（仍然要声明并初始化数组）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONTHS 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YEARS 5</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> rain[YEARS][MONTHS] =</span><br><span class="line">        &#123;&#123;<span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">3.0</span>, <span class="number">2.0</span>, <span class="number">1.2</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">2.4</span>, <span class="number">3.5</span>, <span class="number">6.6</span>&#125;,</span><br><span class="line">         &#123;<span class="number">8.5</span>, <span class="number">8.2</span>, <span class="number">1.2</span>, <span class="number">1.6</span>, <span class="number">2.4</span>, <span class="number">0.0</span>, <span class="number">5.2</span>, <span class="number">0.9</span>, <span class="number">0.3</span>, <span class="number">0.9</span>, <span class="number">1.4</span>, <span class="number">7.3</span>&#125;,</span><br><span class="line">         &#123;<span class="number">9.1</span>, <span class="number">8.5</span>, <span class="number">6.7</span>, <span class="number">4.3</span>, <span class="number">2.1</span>, <span class="number">0.8</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">1.1</span>, <span class="number">2.3</span>, <span class="number">6.1</span>, <span class="number">8.4</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.2</span>, <span class="number">9.9</span>, <span class="number">8.4</span>, <span class="number">3.3</span>, <span class="number">1.2</span>, <span class="number">0.8</span>, <span class="number">0.4</span>, <span class="number">0.0</span>, <span class="number">0.6</span>, <span class="number">1.7</span>, <span class="number">4.3</span>, <span class="number">6.2</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.6</span>, <span class="number">5.6</span>, <span class="number">3.8</span>, <span class="number">2.8</span>, <span class="number">3.8</span>, <span class="number">0.2</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.3</span>, <span class="number">2.6</span>, <span class="number">5.2</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">int</span> year, month;</span><br><span class="line">    <span class="keyword">float</span> subtot, total;</span><br><span class="line">    <span class="keyword">float</span> (* ptr)[MONTHS] = rain;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" YEAR  RAINFALL (inches)\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (year = <span class="number">0</span>, total = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (month = <span class="number">0</span>, subtot = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">            <span class="comment">//subtot += rain[year][month];</span></span><br><span class="line">            subtot += ptr[year][month];</span><br><span class="line">            <span class="comment">//subtot += *(ptr[year] + month);</span></span><br><span class="line">            <span class="comment">//subtot += *(*(ptr + year) + month);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%5d %15.1f\n"</span>, <span class="number">2010</span> + year, subtot);</span><br><span class="line">        total += subtot;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\nThe yearly average is %.1f inches.\n\n"</span>, total / YEARS);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"MONTHLY AVERAGES:\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" Jan Feb Mar Apr May Jun Jul Aug Sep Oct "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" Nov Dec\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (month = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (year = <span class="number">0</span>, subtot = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">            <span class="comment">//subtot += rain[year][month];</span></span><br><span class="line">            <span class="comment">//subtot += ptr[year][month];</span></span><br><span class="line">            <span class="comment">//subtot += *(ptr[year] + month);</span></span><br><span class="line">            subtot += *(*(ptr + year) + month);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%4.1f "</span>, subtot / YEARS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li><p>编写一个程序，初始化一个double类型的数组，然后把该数组的内容拷贝至3个其他数组中（在main()中声明这4个数组）。使用带数组表示法的函数进行第1份拷贝。使用带指针表示法和指针递增的函数进行第2份拷贝。把目标数组名、源数组名和待拷贝的元素个数作为前两个函数的参数。第3个函数以目标数组名、源数组名和指向源数组最后一个元素后面的元素的指针。也就是说，给定以下声明，则函数调用如下所示：</p>
<pre><code>double source[5] = {1.1, 2.2, 3.3, 4.4, 5.5};
double target1[5];
double target2[5];
double target3[5];
copy_arr(target1, source, 5);
copy_ptr(target2, source, 5);
copy_ptrs(target3,source, source + 5);</code></pre><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptrs</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> source[<span class="number">5</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> target1[<span class="number">5</span>], target2[<span class="number">5</span>], target3[<span class="number">5</span>];</span><br><span class="line">    copy_arr(target1, source, <span class="number">5</span>);</span><br><span class="line">    copy_ptr(target2, source, <span class="number">5</span>);</span><br><span class="line">    copy_ptrs(target3, source, source + <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> target[], <span class="keyword">double</span> source[], <span class="keyword">int</span> num)</span>    <span class="comment">//数组表示法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        target[index] = source[index];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>, target[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">int</span> num)</span>  <span class="comment">//指针递增</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *pt = target;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(pt++) = *(source++);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>, *(target + index));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptrs</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">double</span> *num)</span> <span class="comment">//指针指向数组最后一个元素的后面    //指针加法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *pt = source;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; pt &lt; num; pt++, index++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(target + index) = *(source + index);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>, target[index]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个函数，返回储存在int类型数组中的最大值，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">10</span>] =</span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, max(<span class="built_in">array</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pt[index] &gt; max)</span><br><span class="line">            max = pt[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个函数，返回储存在double类型数组中最大值的下标，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">index_max</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>] =</span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">2.2</span>, <span class="number">5.5</span>, <span class="number">8.8</span>, <span class="number">4.4</span>, <span class="number">9.9</span>, <span class="number">7.7</span>, <span class="number">3.3</span>, <span class="number">1.1</span>, <span class="number">6.6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, index_max(<span class="built_in">array</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">index_max</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index, max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">1</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pt[index] &gt; pt[max])</span><br><span class="line">            max = index;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>编写一个函数，返回储存在double类型数组中最大值和最小值的差值，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dv</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>] =</span><br><span class="line">        &#123;<span class="number">10</span>, <span class="number">2.2</span>, <span class="number">5.5</span>, <span class="number">8.8</span>, <span class="number">4.4</span>, <span class="number">9.9</span>, <span class="number">7.7</span>, <span class="number">3.3</span>, <span class="number">1.1</span>, <span class="number">6.6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.1lf"</span>, Dv(<span class="built_in">array</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dv</span><span class="params">(<span class="keyword">double</span> *<span class="built_in">array</span>, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> max = <span class="built_in">array</span>[<span class="number">0</span>], min = <span class="built_in">array</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">array</span>[index] &gt; max)</span><br><span class="line">            max = <span class="built_in">array</span>[index];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">array</span>[index] &lt; min)</span><br><span class="line">            min = <span class="built_in">array</span>[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (max - min);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写一个函数，把double类型数组中的数据倒序排列，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RO</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RT</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>, <span class="number">6.6</span>, <span class="number">7.7</span>, <span class="number">8.8</span>, <span class="number">9.9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">    RO(<span class="built_in">array</span>, <span class="number">10</span>);</span><br><span class="line">    RT(<span class="built_in">array</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; <span class="number">10</span>; index++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>, <span class="built_in">array</span>[index]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RO</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>, xedni = num - <span class="number">1</span>; xedni &gt;= <span class="number">0</span>; index++, xedni--)</span><br><span class="line">        <span class="built_in">array</span>[index] = pt[xedni];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">        pt[index] = <span class="built_in">array</span>[index];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RT</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> LT;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>, xedni = num - <span class="number">1</span>; xedni &gt;= num / <span class="number">2</span>; index++, xedni--)</span><br><span class="line">    &#123;</span><br><span class="line">        LT = pt[xedni];</span><br><span class="line">        pt[xedni] = pt[index];</span><br><span class="line">        pt[index] = LT;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个程序，初始化一个double类型的二维数组，使用编程练习2中的一个拷贝函数把该数组中的数据拷贝至另一个二维数组中（因为二维数组是数组的数组，所以可以使用处理一维数组的拷贝函数来处理数组中的每个子数组）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> source[<span class="number">5</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> target1[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">    copy_arr(target1, source, <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; <span class="number">5</span>; index++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>, *(*(target1 + <span class="number">0</span>) + index));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> target[], <span class="keyword">double</span> source[], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        target[index] = source[index];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>, target[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>使用编程练习2中的拷贝函数，把一个内含7个元素的数组中第3～第5个元素拷贝至内含3个元素的数组中。该函数本身不需要修改，只需要选择合适的实际参数（实际参数不需要是数组名和数组大小，只需要是数组元素的地址和待处理元素的个数）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">int</span> num)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">7</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>, <span class="number">6.6</span>, <span class="number">7.7</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> target[<span class="number">3</span>];</span><br><span class="line">    copy_ptr(target, <span class="built_in">array</span> + <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *pt = target;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(pt++) = *(source++);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.1lf "</span>, *(target + index));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>编写一个程序，初始化一个double类型的3×5二维数组，使用一个处理变长数组的函数将其拷贝至另一个二维数组中。还要编写一个以变长数组为形参的函数以显示两个数组的内容。这两个函数应该能处理任意N×M数组 （如果编译器不支持变长数组，就使用传统C函数处理N×5的数组）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_VLA</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*], <span class="keyword">double</span>[*][*])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put_VLA</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">5</span>] =</span><br><span class="line">        &#123;&#123;<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>&#125;,</span><br><span class="line">         &#123;<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>&#125;,</span><br><span class="line">         &#123;<span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">double</span> target[<span class="number">3</span>][<span class="number">5</span>];</span><br><span class="line">    copy_VLA(<span class="number">3</span>, <span class="number">5</span>, <span class="built_in">array</span>, target);</span><br><span class="line">    put_VLA(<span class="number">3</span>, <span class="number">5</span>, <span class="built_in">array</span>);</span><br><span class="line">    put_VLA(<span class="number">3</span>, <span class="number">5</span>, target);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_VLA</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j], <span class="keyword">double</span> target[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; j; l++)</span><br><span class="line">            target[k][l] = pt[k][l];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put_VLA</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; j; l++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%.lf "</span>, pt[k][l]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>编写一个函数，把两个数组中相对应的元素相加，然后把结果储存到第3个数组中。也就是说，如果数组1中包含的值是2、4、5、8，数组2中包含的值是1、0、4、6，那么该函数把3、4、9、14赋给第3个数组。函数接受3个数组名和一个数组大小。在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">array_add</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> array1[<span class="number">9</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> array2[<span class="number">9</span>] = &#123;<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> array3[<span class="number">9</span>];</span><br><span class="line">    array_add(array1, array2, array3, <span class="number">9</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">array_add</span><span class="params">(<span class="keyword">double</span> *array1, <span class="keyword">double</span> *array2, <span class="keyword">double</span> *array3, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        array3[index] = array1[index] + array2[index];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.lf "</span>, array3[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十一题-1"><a href="#第十一题-1" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>编写一个程序，声明一个int类型的3×5二维数组，并用合适的值初始化它。该程序打印数组中的值，然后各值翻倍（即是原值的2倍），并显示出各元素的新值。编写一个函数显示数组的内容，再编写一个函数把各元素的值翻倍。这两个函数都以函数名和行数作为参数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">t_times</span><span class="params">(<span class="keyword">int</span> (*)[<span class="number">5</span>], <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span> (*)[<span class="number">5</span>], <span class="keyword">int</span>)</span></span>; <span class="comment">//二维数组省略形参指针名</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">5</span>] =</span><br><span class="line">        &#123;&#123;<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>&#125;,</span><br><span class="line">         &#123;<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>&#125;,</span><br><span class="line">         &#123;<span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>&#125;&#125;;</span><br><span class="line">    putarray(<span class="built_in">array</span>, <span class="number">3</span>);</span><br><span class="line">    t_times(<span class="built_in">array</span>, <span class="number">3</span>);</span><br><span class="line">    putarray(<span class="built_in">array</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">t_times</span><span class="params">(<span class="keyword">int</span> (*pt)[<span class="number">5</span>], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            pt[i][j] = pt[i][j] * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span> (*pt)[<span class="number">5</span>], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d "</span>, *(*(pt + i) + j));</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十二题-1"><a href="#第十二题-1" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>重写程序清单10.7的rain.c程序，把main()中的主要任务都改成用函数来完成。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONTHS 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YEARS 5</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">M_sum</span><span class="params">(<span class="keyword">float</span> (*)[MONTHS], <span class="keyword">int</span>)</span></span>;    <span class="comment">//五年中每月的降水量总和</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">M_average</span><span class="params">(<span class="keyword">float</span> (*)[MONTHS], <span class="keyword">int</span>)</span></span>; <span class="comment">//五年中每月的降水量平均值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> rain[YEARS][MONTHS] =</span><br><span class="line">        &#123;&#123;<span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">3.0</span>, <span class="number">2.0</span>, <span class="number">1.2</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">2.4</span>, <span class="number">3.5</span>, <span class="number">6.6</span>&#125;,</span><br><span class="line">         &#123;<span class="number">8.5</span>, <span class="number">8.2</span>, <span class="number">1.2</span>, <span class="number">1.6</span>, <span class="number">2.4</span>, <span class="number">0.0</span>, <span class="number">5.2</span>, <span class="number">0.9</span>, <span class="number">0.3</span>, <span class="number">0.9</span>, <span class="number">1.4</span>, <span class="number">7.3</span>&#125;,</span><br><span class="line">         &#123;<span class="number">9.1</span>, <span class="number">8.5</span>, <span class="number">6.7</span>, <span class="number">4.3</span>, <span class="number">2.1</span>, <span class="number">0.8</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">1.1</span>, <span class="number">2.3</span>, <span class="number">6.1</span>, <span class="number">8.4</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.2</span>, <span class="number">9.9</span>, <span class="number">8.4</span>, <span class="number">3.3</span>, <span class="number">1.2</span>, <span class="number">0.8</span>, <span class="number">0.4</span>, <span class="number">0.0</span>, <span class="number">0.6</span>, <span class="number">1.7</span>, <span class="number">4.3</span>, <span class="number">6.2</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.6</span>, <span class="number">5.6</span>, <span class="number">3.8</span>, <span class="number">2.8</span>, <span class="number">3.8</span>, <span class="number">0.2</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.3</span>, <span class="number">2.6</span>, <span class="number">5.2</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">float</span> total = M_sum(rain, YEARS);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\nThe yearly average is %.1f inches.\n\n"</span>, total / YEARS); <span class="comment">//五年的降水量平均值</span></span><br><span class="line">    M_average(rain, YEARS);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">M_sum</span><span class="params">(<span class="keyword">float</span> (*rain)[MONTHS], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year, month;</span><br><span class="line">    <span class="keyword">float</span> subtot, total;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" YEAR  RAINFALL (inches)\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (year = <span class="number">0</span>, total = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (month = <span class="number">0</span>, subtot = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">            subtot += rain[year][month];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%5d %15.1f\n"</span>, <span class="number">2010</span> + year, subtot);</span><br><span class="line">        total += subtot;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">M_average</span><span class="params">(<span class="keyword">float</span> (*rain)[MONTHS], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year, month;</span><br><span class="line">    <span class="keyword">float</span> subtot, total;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"MONTHLY AVERAGES:\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" Jan Feb Mar Apr May  Jun Jul Aug Sep Oct "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" Nov Dec\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (month = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (year = <span class="number">0</span>, subtot = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">            subtot += rain[year][month];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%4.1f "</span>, subtot / YEARS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十三题-1"><a href="#第十三题-1" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>编写一个程序，提示用户输入3组数，每组数包含5个double类型的数（假设用户都正确地响应，不会输入非数值数据）。该程序应完成下列任务。<br>a.把用户输入的数据储存在3×5的数组中<br>b.计算每组（5个）数据的平均值<br>c.计算所有数据的平均值<br>d.找出这15个数据中的最大值<br>e.打印结果每个任务都要用单独的函数来完成（使用传统C处理数组的方式）。完成任务b，要编写一个计算并返回一维数组平均值的函数，利用循环调用该函数3次。对于处理其他任务的函数，应该把整个数组作为参数，完成任务c和d的函数应把结果返回主调函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIM 3</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">double</span> *)</span></span>;            <span class="comment">//赋值数组                  //使用SLEN和LIM的积来判断总共需要多少次循环 而非for嵌套 14题为for嵌套</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;         <span class="comment">//输出数组各行的平均值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">double</span> (*)[SLEN], <span class="keyword">int</span>)</span></span>;    <span class="comment">//输出数组</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">double</span> (*)[SLEN], <span class="keyword">int</span>)</span></span>; <span class="comment">//所有数值的平均值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">double</span> (*)[SLEN], <span class="keyword">int</span>)</span></span>;   <span class="comment">//所有数值的最大值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[LIM][SLEN] =</span><br><span class="line">        &#123;&#123;<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>, <span class="number">0.4</span>, <span class="number">0.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">1.1</span>, <span class="number">1.2</span>, <span class="number">1.3</span>, <span class="number">1.4</span>, <span class="number">1.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">2.1</span>, <span class="number">2.2</span>, <span class="number">2.3</span>, <span class="number">2.4</span>, <span class="number">2.5</span>&#125;&#125;;</span><br><span class="line">    getarray(<span class="built_in">array</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    putarray(<span class="built_in">array</span>, LIM);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; LIM; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"数组第%d行五个元素的平均值为%.3lf\n"</span>, i, ave_group(&amp;<span class="built_in">array</span>[i], SLEN));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数组中所有数值的平均值为%lf\n"</span>, ave_total(<span class="built_in">array</span>, LIM));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数组中所有数值的最大值为%lf\n"</span>, max_all(<span class="built_in">array</span>, LIM));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">double</span> (*pt)[SLEN], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> max = pt[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">double</span> *ptr = *pt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; SLEN; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (*ptr++ &gt; max)</span><br><span class="line">                max = *ptr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">double</span> (*pt)[SLEN], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; SLEN; j++)</span><br><span class="line">            total += pt[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total / (LIM * SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">        total += pt[i];</span><br><span class="line">    <span class="keyword">return</span> (total / SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">double</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数组的第%d个元素的值为"</span>, index++);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;*(pt)))</span><br><span class="line">    &#123;</span><br><span class="line">        *pt++;</span><br><span class="line">        <span class="keyword">if</span> (index &gt; LIM * SLEN)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n数组的第%d个元素的值为"</span>, index++);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">double</span> (*<span class="built_in">array</span>)[SLEN], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; SLEN; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%-10.2lf "</span>, <span class="built_in">array</span>[i][j]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14">
<li>以变长数组作为函数形参，完成编程练习13。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIM 3</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">double</span>[*])</span></span>;            <span class="comment">//给数组赋值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>;    <span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span> ar[*][*])</span></span>; <span class="comment">//各行平均值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>; <span class="comment">//所有数值平局值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>;   <span class="comment">//所有数值的最大值</span></span><br><span class="line"><span class="comment">//double ave_grou2(int i, int j, double *(*(pt + i) + j));        //这句无效  都是数组形参 如果是指针形参该怎么声明 且 省略形参指针名</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[LIM][SLEN] =</span><br><span class="line">        &#123;&#123;<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>, <span class="number">0.4</span>, <span class="number">0.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">1.1</span>, <span class="number">1.2</span>, <span class="number">1.3</span>, <span class="number">1.4</span>, <span class="number">1.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">2.1</span>, <span class="number">2.2</span>, <span class="number">2.3</span>, <span class="number">2.4</span>, <span class="number">2.5</span>&#125;&#125;;</span><br><span class="line">    getarray(LIM, <span class="built_in">array</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    putarray(LIM, SLEN, <span class="built_in">array</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; LIM; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"数组第%d行五个元素的平均值为%.3lf\n"</span>, i, ave_group(i, SLEN, <span class="built_in">array</span>));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数组中所有数值的平均值为%lf\n"</span>, ave_total(LIM, SLEN, <span class="built_in">array</span>));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"数组中所有数值的最大值为%lf\n"</span>, max_all(LIM, SLEN, <span class="built_in">array</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; j; k++)</span><br><span class="line">        total += pt[i][k];</span><br><span class="line">    <span class="keyword">return</span> (total / SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> q = <span class="number">0</span>; q &lt; i; q++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; j; b++)</span><br><span class="line">            total += pt[q][b];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total / (LIM * SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> q = <span class="number">0</span>; q &lt; i; q++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; j; b++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%-10.2lf "</span>, pt[q][b]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">double</span> pt[num])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; SLEN; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"数组的第%d个元素的值为"</span>, index++);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;*(pt));</span><br><span class="line">            *pt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> max = pt[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; i; n++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; j; m++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pt[n][m] &gt; max)</span><br><span class="line">                max = pt[n][m];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第八章复习题目和编程练习题的答案</title>
    <url>/2019/09/03/C-Primer-Puls%E7%AC%AC%E5%85%AB%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第八章复习题和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>putchar(getchar())是一个有效表达式，它实现什么功能?getchar(putchar())是否也是有效表达式？</li>
</ol>
<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>下面的语句分别完成什么任务？<pre><code>a.putchar(&apos;H&apos;);
b.putchar(&apos;\007&apos;);
c.putchar(&apos;\n&apos;);
d.putchar(&apos;\b&apos;);</code></pre></li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>假设有一个名为 count 的可执行程序，用于统计输入的字符数。设计一个使用 count 程序统计essay文件中字符数的命令行，并把统计结果保存在 essayct文件中。</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>给定复习题3中的程序和文件，下面哪一条是有效的命令？<pre><code>a.essayct &lt; essay
b.count essay
c.essay &gt;count</code></pre></li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>EOF是什么？</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>对于给定的输出（ch是int类型，而且是缓冲输入），下面各程序段的输出分别是什么？<pre><code>a.输入如下：
If you quit, I will.[enter]
程序段如下：
while ((ch = getchar())!= &apos;i&apos;)
        putchar(ch);
b.输入如下：
Harhar[enter]
程序段如下：
while ((ch = getchar()) != &apos;\n&apos;)
{
        putchar(ch++);
        putchar(++ch);
}</code></pre></li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>C如何处理不同计算机系统中的不同文件和换行约定？</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>在使用缓冲输入的系统中，把数值和字符混合输入会遇到什么潜在的问题？</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>设计一个程序，统计在读到文件结尾之前读取的字符数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> word = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">        word++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, word - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>编写一个程序，在遇到 EOF 之前，把输入作为字符流读取。程序要打印每个输入的字符及其相应的ASCII十进制值。注意，在ASCII序列中，空格字符前面的字符都是非打印字符，要特殊处理这些字符。如果非打印字符 是换行符或制表符，则分别打印\n或\t。否则，使用控制字符表示法。例如,ASCII的1是Ctrl+A，可显示为^A。注意，A的ASCII值是Ctrl+A的值加上 64。其他非打印字符也有类似的关系。除每次遇到换行符打印新的一行之外，每行打印10对值。（注意：不同的操作系统其控制字符可能不同。）<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//还有一些BUG  换行符和制表符一块输出时会乱</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> ch;</span><br><span class="line">	<span class="keyword">int</span> index = <span class="number">0</span>, CR = <span class="number">0</span>, SP = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (ch == <span class="string">'\n'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			index = <span class="number">0</span>;</span><br><span class="line">			CR++;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'\t'</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			SP++;</span><br><span class="line">			<span class="keyword">continue</span>; <span class="comment">//统计制表符和换行符的个数 在else里统一输出</span></span><br><span class="line">		&#125;				<span class="comment">//一个换行我直接忽略掉了 从两个开始输出</span></span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= CR; i++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"\\n "</span>);</span><br><span class="line">				index++;</span><br><span class="line">				<span class="keyword">if</span> ((index % <span class="number">10</span>) == <span class="number">0</span>)</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= SP; j++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">"\\t "</span>);</span><br><span class="line">				index++;</span><br><span class="line">				<span class="keyword">if</span> ((index % <span class="number">10</span>) == <span class="number">0</span>)</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			CR = <span class="number">0</span>;</span><br><span class="line">			SP = <span class="number">0</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%c-%d "</span>, ch, ch);</span><br><span class="line">			index++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> ((index % <span class="number">10</span>) == <span class="number">0</span>)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个程序，在遇到 EOF 之前，把输入作为字符流读取。该程序要报告输入中的大写字母和小写字母的个数。假设大小写字母数值是连续的。或者使用ctype.h库中合适的分类函数更方便。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> _upper = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> _lower = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(ch))    <span class="comment">//if (ch &gt;= 'A' &amp;&amp; ch &lt;= 'Z');</span></span><br><span class="line">            _upper++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">islower</span>(ch))   <span class="comment">//if (ch &gt;= 'a' &amp;&amp; ch &lt;= 'z');</span></span><br><span class="line">            _lower++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_upper)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, _upper);</span><br><span class="line">    <span class="keyword">if</span> (_lower)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, _lower);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个程序，在遇到EOF之前，把输入作为字符流读取。该程序要报告平均每个单词的字母数。不要把空白统计为单词的字母。实际上，标点符号也不应该统计，但是现在暂时不同考虑这么多（如果你比较在意这点，考虑使用ctype.h系列中的ispunct()函数）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> character = <span class="number">0</span>, word = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ca = <span class="number">0</span>, wr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch != <span class="string">' '</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">islower</span>(ch) || <span class="built_in">isupper</span>(ch))</span><br><span class="line">            &#123;</span><br><span class="line">                character++;</span><br><span class="line">                ca++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        word++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"第%d个单词有%d个字母\n"</span>, word, character);</span><br><span class="line">        character = <span class="number">0</span>;</span><br><span class="line">        wr++;</span><br><span class="line">        if (ch == '\032')</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"平均每个单词的字母数为%d\n"</span>, ca / wr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>修改程序清单8.4的猜数字程序，使用更智能的猜测策略。例如，程序最初猜50，询问用户是猜大了、猜小了还是猜对了。如果猜小了，那么下一次猜测的值应是50和100中值，也就是75。如果这次猜大了，那么下一次猜测的值应是50和75的中值，等等。使用二分查找（binary search）策略，如果用户没有欺骗程序，那么程序很快就会猜到正确的答案。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> guess, start = <span class="number">1</span>, end = <span class="number">100</span>, ch;    <span class="comment">//bug太多</span></span><br><span class="line">    guess = (start + end) / <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"选择一个 1 到 100 之间的整数\n结果为 %d\n如果大于结果请输入 &gt; ，反之\n如果结果结果正确请输入 ！ \n"</span>, guess);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'!'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'&gt;'</span>)</span><br><span class="line">            end = guess;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'&lt;'</span>)</span><br><span class="line">            start = guess;</span><br><span class="line">        guess = (start + end) / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"结果为%d？\n"</span>, guess);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"结果为%d\n"</span>, guess);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>修改程序清单8.8中的get_first()函数，让该函数返回读取的第1个非空白字符，并在一个简单的程序中测试。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">char get_first(void)	//程序清单8.8</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int ch;</span></span><br><span class="line"><span class="comment">    ch = getchar();</span></span><br><span class="line"><span class="comment">    while (getchar() != '\n')</span></span><br><span class="line"><span class="comment">        continue;</span></span><br><span class="line"><span class="comment">    return ch;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">get_first</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    ch = get_first();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"第一个非空白字符为%c"</span>, ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">get_first</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'\n'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((ch == <span class="string">' '</span>) || (ch == <span class="string">'\t'</span>))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> ch;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li><p>修改第7章的编程练习8，用字符代替数字标记菜单的选项。用q代替5作为结束输入的标记。</p>
<pre><code>参考第八题</code></pre></li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>编写一个程序，显示一个提供加法、减法、乘法、除法的菜单。获得用户选择的选项后，程序提示用户输入两个数字，然后执行用户刚才选择的操作。该程序只接受菜单提供的选项。程序使用float类型的变量储存用户输入的数字，如果用户输入失败，则允许再次输入。进行除法运算时，如果用户输入0作为第2个数（除数），程序应提示用户重新输入一个新值。该程序的一个运行示例如下：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">function</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">space</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> answer = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> num1 = <span class="number">0</span>, num2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入运算符 + - * / （输入q以退出）"</span>);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'q'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'+'</span>:</span><br><span class="line">            answer = function(<span class="string">'+'</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'-'</span>:</span><br><span class="line">            answer = function(<span class="string">'-'</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'*'</span>:</span><br><span class="line">            answer = function(<span class="string">'*'</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'/'</span>:</span><br><span class="line">            answer = function(<span class="string">'/'</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"输入错误\n请输入运算符 + - * / (输入q以退出)\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"结果为%.2lf"</span>, answer);</span><br><span class="line">        space();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">function</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> num1, num2;</span><br><span class="line">    <span class="keyword">double</span> result;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"当前为 %c 运算请输入两个数字"</span>, ch);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%f%f"</span>, &amp;num1, &amp;num2) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'/'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (num2 == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"除数不能为零 请重新输入\n"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"当前为 %c 运算请输入两个数字"</span>, ch);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">'+'</span>)</span><br><span class="line">        result = num1 + num2;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'-'</span>)</span><br><span class="line">        result = num1 - num2;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'*'</span>)</span><br><span class="line">        result = num1 * num2;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        result = num1 / num2;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">space</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n请输入运算符 + - * / (输入q以退出)"</span>);</span><br><span class="line">    <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第四章复习题目和编程练习题目</title>
    <url>/2019/08/31/C-Primer-Puls%E7%AC%AC%E5%9B%9B%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第四章复习题和编程练习题</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>再次运行程序清单 4.1，但是在要求输入名时，请输入名和姓（根据英文书写习惯，名和姓中间有一个空格），看看会发生什么情况？为什么？<br>程序清单4.1：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;     // 提供strlen()函数的原型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DENSITY 62.4    <span class="comment">// 人体密度（单位：磅/立方英尺）</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> weight, volume;</span><br><span class="line">    <span class="keyword">int</span> size, letters;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">40</span>];      <span class="comment">// name是一个可容纳40个字符的数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hi! What's your first name?\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s, what's your weight in pounds?\n"</span>, name);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%f"</span>, &amp;weight);</span><br><span class="line">    size = <span class="keyword">sizeof</span> name;</span><br><span class="line">    letters = <span class="built_in">strlen</span>(name);</span><br><span class="line">    volume = weight / DENSITY;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Well, %s, your volume is %2.2f cubic feet.\n"</span>, name, volume);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Also, your first name has %d letters,\n"</span>, letters);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"and we have %d bytes to store it.\n"</span>, size);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>假设下列示例都是完整程序中的一部分，它们打印的结果分别是什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a.<span class="built_in">printf</span>(<span class="string">"He sold the painting for $%2.2f.\n"</span>, <span class="number">2.345e2</span>);</span><br><span class="line">b.printf("%c%c%c\n", 'H', 105, '\41');</span><br><span class="line">c.<span class="meta">#<span class="meta-keyword">define</span> Q <span class="meta-string">"His Hamlet was funny without being vulgar."</span>printf(<span class="meta-string">"%s\nhas %dcharacters.\n"</span>, Q, strlen(Q));</span></span><br><span class="line">d.<span class="built_in">printf</span>(<span class="string">"Is %2.2e the same as %2.2f?\n"</span>, <span class="number">1201.0</span>, <span class="number">1201.0</span>);</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>在第2题的c中，要输出包含双引号的字符串Q，应如何修改？</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>找出下面程序中的错误。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">define B booboo</span><br><span class="line">define X <span class="number">10</span></span><br><span class="line">main(<span class="keyword">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">char</span> name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter your first name."</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"All right, %c, what's your age?\n"</span>, name);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%f"</span>, age);</span><br><span class="line">    xp = age + X;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"That's a %s! You must be at least %d.\n"</span>, B, xp);</span><br><span class="line">    rerun <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li><p>假设一个程序的开头是这样：</p>
<pre><code>#define BOOK &quot;War and Peace&quot;
int main(void)
{
    float cost =12.99;
    float percent = 80.0;</code></pre><p>请构造一个使用BOOK、cost和percent的printf()语句，打印以下内容：</p>
<pre><code>This copy of &quot;War and Peace&quot; sells for $12.99.
That is 80% of list.</code></pre></li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>打印下列各项内容要分别使用什么转换说明？<br>a.一个字段宽度与位数相同的十进制整数<br>b.一个形如8A、字段宽度为4的十六进制整数<br>c.一个形如232.346、字段宽度为10的浮点数<br>d.一个形如2.33e+002、字段宽度为12的浮点数<br>e.一个字段宽度为30、左对齐的字符串</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>打印下面各项内容要分别使用什么转换说明？<br>a.字段宽度为15的unsigned long类型的整数<br>b.一个形如0x8a、字段宽度为4的十六进制整数<br>c.一个形如2.33E+02、字段宽度为12、左对齐的浮点数<br>d.一个形如+232.346、字段宽度为10的浮点数<br>e.一个字段宽度为8的字符串的前8个字符</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>打印下面各项内容要分别使用什么转换说明？<br>a.一个字段宽度为6、最少有4位数字的十进制整数<br>b.一个在参数列表中给定字段宽度的八进制整数<br>c.一个字段宽度为2的字符<br>d.一个形如+3.13、字段宽度等于数字中字符数的浮点数<br>e.一个字段宽度为7、左对齐字符串中的前5个字符</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>分别写出读取下列各输入行的scanf()语句，并声明语句中用到变量和数组。<br>a.101<br>b.22.32 8.34E−09<br>c.linguini<br>d.catch 22 e.catch 22 （但是跳过catch）</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>什么是空白？</li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>下面的语句有什么问题？如何修正？<pre><code>printf(&quot;The double type is %z bytes..\n&quot;, sizeof(double));</code></pre></li>
</ol>
<hr>
<h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li><p>假设要在程序中用圆括号代替花括号，以下方法是否可行？</p>
<pre><code>#define ( {
#define ) }</code></pre></li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>编写一个程序，提示用户输入名和姓，然后以“名,姓”的格式打印出来。</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>编写一个程序，提示用户输入名和姓，并执行一下操作：<br>a.打印名和姓，包括双引号；<br>b.在宽度为20的字段右端打印名和姓，包括双引号；<br>c.在宽度为20的字段左端打印名和姓，包括双引号；<br>d.在比姓名宽度宽3的字段中打印名和姓。</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个程序，读取一个浮点数，首先以小数点记数法打印，然后以指数记数法打印。用下面的格式进行输出（系统不同，指数记数法显示的位 数可能不同）：<br>a.输入21.3或2.1e+001；<br>b.输入+21.290或2.129E+001；</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个程序，提示用户输入身高（单位：英寸）和姓名，然后以下面的格式显示用户刚输入的信息：<br>Dabney, you are 6.208 feet tall<br>使用float类型，并用/作为除号。如果你愿意，可以要求用户以厘米为单位输入身高，并以米为单位显示出来。</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>编写一个程序，提示用户输入以兆位每秒（Mb/s）为单位的下载速度和以兆字节（MB）为单位的文件大小。程序中应计算文件的下载时间。注 意，这里1字节等于8位。使用float类型，并用/作为除号。该程序要以下面 的格式打印 3 个变量的值（下载速度、文件大小和下载时间），显示小数点后面两位数字： At 18.12 megabits per second, a file of 2.20 megabytes downloads in 0.97 seconds.</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写一个程序，先提示用户输入名，然后提示用户输入姓。在一行打印用户输入的名和姓，下一行分别打印名和姓的字母数。字母数要与相应名和姓的结尾对齐，如下所示：<pre><code>Melissa  Honeybee
      7         8</code></pre>接下来，再打印相同的信息，但是字母个数与相应名和姓的开头对齐，如下所示：<pre><code>Melissa  Honeybee
7        8</code></pre></li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个程序，将一个double类型的变量设置为1.0/3.0，一个float类型的变量设置为1.0/3.0。分别显示两次计算的结果各3次：一次显示小数点 后面6位数字；一次显示小数点后面12位数字；一次显示小数点后面16位数 字。程序中要包含float.h头文件，并显示FLT_DIG和DBL_DIG的值。1.0/3.0 的值与这些值一致吗？</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>编写一个程序，提示用户输入旅行的里程和消耗的汽油量。然后计算并显示消耗每加仑汽油行驶的英里数，显示小数点后面一位数字。接下来， 使用1加仑大约3.785升，1英里大约为1.609千米，把单位是英里/加仑的值转 换为升/100公里（欧洲通用的燃料消耗表示法），并显示结果，显示小数点 后面 1 位数字。注意，美国采用的方案测量消耗单位燃料的行程（值越大越 好），而欧洲则采用单位距离消耗的燃料测量方案（值越低越好）。使用 #define 创建符号常量或使用 const 限定符创建变量来表示两个转换系数。</li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第九章复习题目和编程练习题的答案</title>
    <url>/2019/08/24/C-Primer-Puls%E7%AC%AC%E4%B9%9D%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第九章复习题和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>实际参数和形式参数的区别是什么？</li>
</ol>
<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>根据下面各函数的描述，分别编写它们的ANSI C函数头。注意，只需写出函数头，不用写函数体。<br> a.donut()接受一个int类型的参数，打印若干（参数指定数目）个0<br> b.gear()接受两个int类型的参数，返回int类型的值<br> c.guess()不接受参数，返回一个int类型的值<br> d.stuff_it()接受一个double类型的值和double类型变量的地址，把第1个值储存在指定位置</li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>根据下面各函数的描述，分别编写它们的ANSI C函数头。注意，只需写出函数头，不用写函数体。<br> a.n_to_char()接受一个int类型的参数，返回一个char类型的值<br> b.digit()接受一个double类型的参数和一个int类型的参数，返回一个int类型的值<br> c.which()接受两个可储存double类型变量的地址，返回一个double类型的地址<br> d.random()不接受参数，返回一个int类型的值</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="4">
<li>设计一个函数，返回两整数之和。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1 = <span class="number">10</span>, num2 = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, add(num1, num2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>如果把复习题4改成返回两个double类型的值之和，应如何修改函数？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num1 = <span class="number">10</span>, num2 = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lf"</span>, add(num1, num2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> num1, <span class="keyword">double</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>设计一个名为alter()的函数，接受两个int类型的变量x和y，把它们的值分别改成两个变量之和以及两变量之差。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">alter</span><span class="params">(<span class="keyword">int</span> *, <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">10</span>, y = <span class="number">10</span>;</span><br><span class="line">    alter(&amp;x, &amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d %d"</span>, x, y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">alter</span><span class="params">(<span class="keyword">int</span> * x, <span class="keyword">int</span> * y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *x = *x + *y;</span><br><span class="line">    *y = *x - *y * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>下面的函数定义是否正确？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">salami</span><span class="params">(num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num, count;</span><br><span class="line">    <span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= num;num++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" O salami mio!\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>编写一个函数，返回3个整数参数中的最大值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">6</span>, y = <span class="number">66</span>, z = <span class="number">666</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, max(x, y, z));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; y &amp;&amp; x &gt; z)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (y &gt; x &amp;&amp; y &gt; z)</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>给定下面的输出：<pre><code>Please choose one of thefollowing:
    1) copy files       2) move files
    2) remove files     4) quit
Enter the number of your choice:</code></pre>a.编写一个函数，显示一份有4个选项的菜单，提示用户进行选择（输出如上所示）。<br>b.编写一个函数，接受两个int类型的参数分别表示上限和下限。该函数从用户的输入中读取整数。如果整数超出规定上下限，函数再次打印菜单（使用a部分的函数）提示用户输入，然后获取一个新值。如果用户输入的整数在规定范围内，该函数则把该整数返回主调函数。如果用户输入一个非 整数字符，该函数应返回4。<br>c.使用本题a和b部分的函数编写一个最小型的程序。最小型的意思是，该程序不需要实现菜单中各选项的功能，只需显示这些选项并获取有效的响应即可。</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>设计一个函数min(x, y)，返回两个double类型值的较小值。在一个简单的驱动程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">min</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x = <span class="number">3.14</span>, y = <span class="number">3.1415926</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"min = %lf"</span>, min(x, y));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">min</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= y)</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>设计一个函数chline(ch, i, j)，打印指定的字符j行i列。在一个简单的驱动程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chline</span><span class="params">(<span class="keyword">char</span>, <span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c%d%d"</span>, &amp;ch, &amp;i, &amp;j);</span><br><span class="line">    chline(ch, i, j);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chline</span><span class="params">(<span class="keyword">char</span> ch, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p = <span class="number">0</span>; p &lt; i; p++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; j; b++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-2"><a href="#第三题-2" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个函数，接受3个参数：一个字符和两个整数。字符参数是待打印的字符，第1个整数指定一行中打印字符的次数，第2个整数指定打印指定字符的行数。编写一个调用该函数的程序。</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>两数的调和平均数这样计算：先得到两数的倒数，然后计算两个倒数的平均值，最后取计算结果的倒数。编写一个函数，接受两个double类型的参数，返回这两个参数的调和平均数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">average</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num1, num2, result;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf %lf"</span>, &amp;num1, &amp;num2);</span><br><span class="line">    result = average(num1, num2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lf"</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">average</span><span class="params">(<span class="keyword">double</span> num1, <span class="keyword">double</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    num1 = <span class="number">1</span> / num1;</span><br><span class="line">    num2 = <span class="number">1</span> / num2;</span><br><span class="line">    <span class="keyword">double</span> result = (num1 + num2) / <span class="number">2</span>;</span><br><span class="line">    result = <span class="number">1</span> / result;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>编写并测试一个函数larger_of()，该函数把两个double类型变量的值替换为较大的值。例如，larger_of(x, y)会把x和y中较大的值重新赋给两个变量。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">larger_of</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> q = <span class="number">666</span>, p = <span class="number">999</span>;</span><br><span class="line">    larger_of(&amp;q, &amp;p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lf\n%lf"</span>, q, p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">larger_of</span><span class="params">(<span class="keyword">double</span> *d, <span class="keyword">double</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (*d &gt; *b)</span><br><span class="line">        *b = *d;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        *d = *b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写并测试一个函数，该函数以3个double变量的地址作为参数，把最小值放入第1个变量，中间值放入第2个变量，最大值放入第3个变量。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">double</span> a, b, c;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lf%lf%lf"</span>, &amp;a, &amp;b, &amp;c) == <span class="number">3</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		match(&amp;a, &amp;b, &amp;c);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%.lf	%.lf	%.lf\n"</span>, a, b, c);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">(<span class="keyword">double</span> * a, <span class="keyword">double</span> * b, <span class="keyword">double</span> * c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">double</span> a1 = *a, b1 = *b, c1 = *c;</span><br><span class="line">	<span class="keyword">if</span> (*a &gt; *b &amp;&amp; *a &gt; *c)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (*c &gt; *b)</span><br><span class="line">		&#123;</span><br><span class="line">			*c = a1;</span><br><span class="line">			*b = c1;</span><br><span class="line">			*a = b1;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			*c = a1;</span><br><span class="line">			*b = b1;</span><br><span class="line">			*a = c1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (*b &gt; *a &amp;&amp; *b &gt; *c)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(*c &gt; *a)</span><br><span class="line">		&#123;</span><br><span class="line">			*c = b1;</span><br><span class="line">			*b = c1;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			*c = b1;</span><br><span class="line">			*b = a1;</span><br><span class="line">			*a = c1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (*c &gt; *b &amp;&amp; *c &gt; *a)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(*a &gt; *b)</span><br><span class="line">		&#123;</span><br><span class="line">			*b = a1;</span><br><span class="line">			*a = b1;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个函数，从标准输入中读取字符，直到遇到文件结尾。程序要报告每个字符是否是字母。如果是，还要报告该字母在字母表中的数值位置。例如，c和C在字母表中的位置都是3。合并一个函数，以一个字符作为参数，如果该字符是一个字母则返回一个数值位置，否则返回-1。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">character</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	character();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">character</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> ch;</span><br><span class="line">	<span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">islower</span>(ch))</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%c在字母表中的位置是%d\n"</span>, ch, ch - <span class="number">96</span>);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isupper</span>(ch))</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">"%c在字母表中的位置是%d\n"</span>, ch, ch - <span class="number">64</span>);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>第6章的程序清单6.20中，power()函数返回一个double类型数的正整数次幂。改进该函数，使其能正确计算负幂。另外，函数要处理0的任何次幂都为0，任何数的0次幂都为1（函数应报告0的0次幂未定义，因此把该值处理为1）。要使用一个循环，并在程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; //转为递归 9</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> n, <span class="keyword">int</span> p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x, xpow;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">exp</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入底数和指数 输入‘q’以使程序退出\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lf%d"</span>, &amp;x, &amp;<span class="built_in">exp</span>) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        xpow = power(x, <span class="built_in">exp</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.3g的%d次幂为%.5g\n"</span>, x, <span class="built_in">exp</span>, xpow);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入底数和指数 输入‘q’以使程序退出\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"bye!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> n, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">pow</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= p; i++)</span><br><span class="line">        <span class="built_in">pow</span> *= n;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">pow</span> &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> -<span class="built_in">pow</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>使用递归函数重写编程练习8。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x, xpow;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">exp</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入底数和指数 输入‘q’以使程序退出\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lf%d"</span>, &amp;x, &amp;<span class="built_in">exp</span>) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> x_index = x;</span><br><span class="line">        xpow = power(x, <span class="built_in">exp</span>, <span class="number">1</span>, x_index);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.3g的%d次幂为%.5g\n"</span>, x, <span class="built_in">exp</span>, xpow);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入底数和指数 输入‘q’以使程序退出\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"bye!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> <span class="built_in">exp</span>, <span class="keyword">int</span> n, <span class="keyword">double</span> x_index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">exp</span> == <span class="number">0</span>)   <span class="comment">//零次幂处理</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    ++n;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="built_in">exp</span>) <span class="comment">//递归处理</span></span><br><span class="line">        x = power(x *= x_index, <span class="built_in">exp</span>, n, x_index);</span><br><span class="line">    <span class="keyword">if</span> (x_index &lt; <span class="number">0</span>) <span class="comment">//负数处理</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>为了让程序清单9.8中的to_binary()函数更通用，编写一个to_base_n()函数接受两个在2～10范围内的参数，然后以第2个参数中指定的进制打印第1个参数的数值。例如，to_base_n(129，8)显示的结果为201，也就是129的八进制数。在一个完整的程序中测试该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_base_n</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> jz)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, jz;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入一个数字和这个数字将要转换的进制\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>, &amp;n, &amp;jz) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d的%d进制为\n"</span>, n, jz);</span><br><span class="line">        to_base_n(n, jz);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入一个数字和这个数字将要转换的进制\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_base_n</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> jz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= jz)</span><br><span class="line">    &#123;</span><br><span class="line">        to_base_n(n / jz, jz);</span><br><span class="line">        <span class="keyword">int</span> ys = n % jz;</span><br><span class="line">        <span class="keyword">if</span> (jz == <span class="number">16</span>) <span class="comment">//十六进制优化 确定为十六进制才进行转换</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ys &gt; <span class="number">9</span> &amp;&amp; ys &lt; <span class="number">16</span>) <span class="comment">//确定余数为十六进制的10到15才进行转换</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%c"</span>, ys + (<span class="string">'A'</span> - <span class="number">10</span>));</span><br><span class="line">                <span class="comment">//printf("%c", ys + ('F' - 15));</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, ys);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d"</span>, n);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>编写并测试Fibonacci()函数，该函数用循环代替递归计算斐波那契数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">unsigned</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">long</span> j = Fibonacci(num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lu\n"</span>, j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">unsigned</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> i = <span class="number">1</span>, j = <span class="number">1</span>, index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">3</span>; index &lt;= n; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        i += j;      <span class="comment">//本来想写成这样的 https://blog.csdn.net/qq_36324796/article/details/78993870</span></span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">if</span> (index &gt; n)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        j += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> i; <span class="comment">//质数返回</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> j; <span class="comment">//偶数返回</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第三章复习题目和编程练习题目</title>
    <url>/2019/08/22/C-Primer-Puls%E7%AC%AC%E4%B8%89%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第三章复习题和编程练习题</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>指出下面各种数据使用的合适数据类型（有些可使用多种数据类型）：<br>a.East Simpleton的人口<br>b.DVD影碟的价格<br>c.本章出现次数最多的字母<br>d.本章出现次数最多的字母次数</li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>在什么情况下要用long类型的变量代替int类型的变量？</li>
</ol>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>使用哪些可移植的数据类型可以获得32位有符号整数？选择的理由是什么？</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>指出下列常量的类型和含义（如果有的话）：<br>a.’\b’<br>b.1066<br>c.99.44<br>d.0XAA<br>e.2.0e30</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>Dottie Cawm编写了一个程序，请找出程序中的错误。<pre><code>include &lt;stdio.h&gt;
main (
float g; h;
floatg = e21;
tax = rate*g;
)</code></pre></li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>写出下列常量在声明中使用的数据类型和在printf()中对应的转换说明：<table>
<thead>
<tr>
<th>常量</th>
<th>类型</th>
<th>转换说明（%转换字符）</th>
</tr>
</thead>
<tbody><tr>
<td>12</td>
<td></td>
<td></td>
</tr>
<tr>
<td>0X3</td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘c’</td>
<td></td>
<td></td>
</tr>
<tr>
<td>2.34E07</td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘\040’</td>
<td></td>
<td></td>
</tr>
<tr>
<td>7.0</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6L</td>
<td></td>
<td></td>
</tr>
<tr>
<td>6.0f</td>
<td></td>
<td></td>
</tr>
<tr>
<td>0x5.b6p12</td>
<td></td>
<td></td>
</tr>
</tbody></table>
</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>写出下列常量在声明中使用的数据类型和在printf()中对应的转换说明 （假设int为16位）：<table>
<thead>
<tr>
<th>常量</th>
<th>类型</th>
<th>转换说明（%转换字符）</th>
</tr>
</thead>
<tbody><tr>
<td>012</td>
<td></td>
<td></td>
</tr>
<tr>
<td>2.9e05L</td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘s’</td>
<td></td>
<td></td>
</tr>
<tr>
<td>100000</td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘\n’</td>
<td></td>
<td></td>
</tr>
<tr>
<td>20.0f</td>
<td></td>
<td></td>
</tr>
<tr>
<td>0x44</td>
<td></td>
<td></td>
</tr>
<tr>
<td>-40</td>
<td></td>
<td></td>
</tr>
</tbody></table>
</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>假设程序的开头有下列声明：<pre><code>int imate = 2;
long shot = 53456;
char grade = &apos;A&apos;;
float log = 2.71828;</code></pre>把下面printf()语句中的转换字符补充完整：<pre><code>printf(&quot;The odds against the %__ were %__ to 1.\n&quot;, imate, shot);
printf(&quot;A score of %__ is not an %__ grade.\n&quot;, log, grade);</code></pre></li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>假设ch是char类型的变量。分别使用转义序列、十进制值、八进制字符常量和十六进制字符常量把回车字符赋给ch（假设使用ASCII编码值）。</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>修正下面的程序（在C中，/表示除以）。<pre><code>void main(int)  /this program is perfect /
{
cows, legs integer;
printf(&quot;How many cow legs did you count?\n); scanf(&quot;%c&quot;,legs);
cows = legs / 4; printf(&quot;That
implies there are %f cows.\n&quot;, cows)
}</code></pre></li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>指出下列转义序列的含义：<pre><code>a.\n
b.\\
c.\&quot;
d.\t</code></pre></li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li><p>通过试验（即编写带有此类问题的程序）观察系统如何处理整数上溢、浮点数上溢和浮点数下溢的情况。</p>
<hr>
</li>
</ol>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>编写一个程序，要求提示输入一个ASCII码值（如，66），然后打印输入的字符。</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个程序，发出一声警报，然后打印下面的文本：<pre><code>Startled by the sudden sound,
Sally shouted, &quot;By the Great Pumpkin, what was that!&quot;</code></pre></li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个程序，读取一个浮点数，先打印成小数点形式，再打印成指数形式。然后，如果系统支持，再打印成p记数法（即十六进制记数法）。 按以下格式输出（实际显示的指数位数因系统而异）：<pre><code>Enter a floating-point value: 64.25
fixed-point notation: 64.250000
exponential notation: 6.425000e+01
p notation: 0x1.01p+6</code></pre></li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>一年大约有3.156×107秒。编写一个程序，提示用户输入年龄，然后显示该年龄对应的秒数。</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>1个水分子的质量约为3.0×10−23克。1夸脱水大约是950克。编写一个程序，提示用户输入水的夸脱数，并显示水分子的数量。</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>1英寸相当于2.54厘米。编写一个程序，提示用户输入身高（/英寸），然后以厘米为单位显示身高。</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>在美国的体积测量系统中，1品脱等于2杯，1杯等于8盎司，1盎司等于2大汤勺，1大汤勺等于3茶勺。编写一个程序，提示用户输入杯数，并以品脱、盎司、汤勺、茶勺为单位显示等价容量。思考对于该程序，为何使用 浮点类型比整数类型更合适？</li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第二章复习题目和编程练习题目</title>
    <url>/2019/08/22/C-Primer-Puls%E7%AC%AC%E4%BA%8C%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9B%AE/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第二章复习题和编程练习题</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>C语言的基本模块是什么？</li>
</ol>
<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>什么是语法错误？写出一个英语例子和C语言例子。</li>
</ol>
<a id="more"></a>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>什么是语义错误？写出一个英语例子和C语言例子。</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>Indiana Sloth编写了下面的程序，并征求你的意见。请帮助他评定。<pre><code>include studio.h
int main{void} /* 该程序打印一年有多少周 /*
(
    int s s := 56;
    print(There are s weeks in a year.);
    return 0;</code></pre></li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>假设下面的4个例子都是完整程序中的一部分，它们都输出什么结果？<pre><code>a. printf(&quot;Baa Baa Black Sheep.&quot;);
printf(&quot;Have you any wool?\n&quot;);
b. printf(&quot;Begone!\nO creature of lard!\n&quot;);
c.printf(&quot;What?\nNo/nfish?\n&quot;);
d.int num;
num = 2;
printf(&quot;%d + %d = %d&quot;, num, num, num + num);</code></pre></li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>在main、int、function、char、=中，哪些是C语言的关键字？</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>如何以下面的格式输出变量words和lines的值（这里，3020和350代表两个变量的值）？<br>There were 3020 words and 350 lines.</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li><p>考虑下面的程序：</p>
<pre><code>#include &lt;stdio.h&gt;
int main(void)
{
    int a, b;
    a = 5;
    b = 2; /* 第7行 */
    b = a; /* 第8行 */
    a = b; /* 第9行 */
    printf(&quot;%d %d\n&quot;, b, a);
    return 0;
}</code></pre><p>请问，在执行完第7、第8、第9行后，程序的状态分别是什么？</p>
<hr>
</li>
</ol>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>考虑下面的程序：<pre><code>#include &lt;stdio.h&gt;
int main(void)
{
int x, y;
x = 10;
y = 5;/* 第7行 */
y = x + y; /*第8行*/
x = x*y;/*第9行*/
printf(&quot;%d %d\n&quot;, x, y); return 0;
}</code></pre>请问，在执行完第7、第8、第9行后，程序的状态分别是什么？</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>编写一个程序，调用一次printf()函数，把你的姓名打印在一行。再调用一次printf()函数，把你的姓名分别打印在两行。然后，再调用两次printf()函数，把你的姓名打印在一行。输出应如下所示（当然要把示例的内容换成你的姓名）：<pre><code>Gustav Mahler   &lt;-第 1 次打印的内容
Gustav          &lt;-第 2 次打印的内容
Mahler          &lt;-仍是第 2 次打印的内容
Gustav Mahler   &lt;-第 3 次和第 4 次打印的内容</code></pre></li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>编写一个程序，打印你的姓名和地址。</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个程序把你的年龄转换成天数，并显示这两个值。这里不用考虑闰年的问题。</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个程序，生成以下输出：<pre><code>For he&apos;s a jolly good fellow!
For he&apos;s a jolly good fellow!
For he&apos;s a jolly good fellow!
Which nobody can deny!</code></pre>除了 main()函数以外，该程序还要调用两个自定义函数：一个名为jolly()，用于打印前 3 条消息，调用一次打印一条；另一个函数名为 deny()，打印最后一条消息。</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>编写一个程序，生成以下输出：<pre><code>Brazil, Russia, India, China
India, China,
Brazil, Russia</code></pre>除了main()以外，该程序还要调用两个自定义函数：一个名为br()，调<br>用一次打印一次“Brazil, Russia”；另一个名为ic()，调用一次打印一次“India, China”。其他内容在main()函数中完成。</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写一个程序，创建一个整型变量toes，并将toes设置为10。程序中还要计算toes的两倍和toes的平方。该程序应打印3个值，并分别描述以示区分。</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>许多研究表明，微笑益处多多。编写一个程序，生成以下格式的输出：<pre><code>Smile!Smile!Smile!
Smile!Smile!
Smile!</code></pre>该程序要定义一个函数，该函数被调用一次打印一次“Smile!”，根据程序的需要使用该函数。</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>在C语言中，函数可以调用另一个函数。编写一个程序，调用一个名为one_three()的函数。该函数在一行打印单词“one”，再调用第2个函数two()，然后在另一行打印单词“three”。two()函数在一行显示单词“two”。 main()函数在调用 one_three()函数前要打印短语“startingnow:”，并在调用完毕后显示短语“done!”。因此，该程序的输出应如下所示：<pre><code>starting now:
one
two
three
done!</code></pre></li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
      </tags>
  </entry>
  <entry>
    <title>如何用MinGW-x64在VSCode编译和调试C/C++</title>
    <url>/2019/08/07/Mingw-w64%E4%B8%8B%E7%9A%84Vscode/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>我的环境如下：<br>平台：Windows10 x64<br><a href="http://mingw-w64.org/doku.php" target="_blank" rel="noopener">Mingw-w64</a>版本：x86_64-8.1.0-posix-seh-rt_v6-rev0<br><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VSCode</a>版本：1.36.1 x64<br>由于Mingw-w64在线安装需要梯子，所以这里推荐大家安装由SOURCEFORGE托管的Mingw-w64绿色安装包<br>下载地址为：<a href="https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/" target="_blank" rel="noopener">https://sourceforge.net/projects/mingw-w64/files/mingw-w64/mingw-w64-release/</a><br><img src="https://s2.ax1x.com/2019/08/07/eIUlVI.png" alt="下载示图"></p>
<p>我把我的工作区压缩包和Mingw-w64压缩包放到了下面这个链接</p>
<p><a href="https://www.lanzous.com/b859892" target="_blank" rel="noopener">https://www.lanzous.com/b859892</a></p>
<hr>
<a id="more"></a>

<h1 id="Mingw-w64"><a href="#Mingw-w64" class="headerlink" title="Mingw-w64"></a>Mingw-w64</h1><h2 id="安装Mingw-w64"><a href="#安装Mingw-w64" class="headerlink" title="安装Mingw-w64"></a>安装Mingw-w64</h2><p>在SOURCEFORGE里下载完压缩包之后直接把里面的内容解压出来就能用了<br><img src="https://s2.ax1x.com/2019/08/07/eIdsvF.png" alt="解压示图"><br>这里我解压到了C盘的根目录下 你们随意</p>
<hr>
<h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p><img src="https://s2.ax1x.com/2019/08/07/eIgKs0.png" alt="配置示图"><br>右击计算机-属性-高级系统设置-环境变量-Path（系统变量）-新建-输入你的mingw64下的bin文件夹地址</p>
<hr>
<h2 id="检测环境变量是否配置成功"><a href="#检测环境变量是否配置成功" class="headerlink" title="检测环境变量是否配置成功"></a>检测环境变量是否配置成功</h2><p><img src="https://s2.ax1x.com/2019/08/07/eIWqld.png" alt="检测示图"></p>
<hr>
<h1 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h1><h2 id="安装VScode"><a href="#安装VScode" class="headerlink" title="安装VScode"></a>安装VScode</h2><hr>
<h2 id="安装C-C-扩展"><a href="#安装C-C-扩展" class="headerlink" title="安装C/C++扩展"></a>安装C/C++扩展</h2><p><img src="https://s2.ax1x.com/2019/08/07/eIoUlF.png" alt="安装扩展示图"><br>也可以安装下中文包 搜索chinese第一个就是</p>
<hr>
<h2 id="创建工作区"><a href="#创建工作区" class="headerlink" title="创建工作区"></a>创建工作区</h2><h3 id="新建一个文件夹来作为你的C项目地址（名称中最好不要有空格和中文）"><a href="#新建一个文件夹来作为你的C项目地址（名称中最好不要有空格和中文）" class="headerlink" title="新建一个文件夹来作为你的C项目地址（名称中最好不要有空格和中文）"></a>新建一个文件夹来作为你的C项目地址（名称中最好不要有空格和中文）</h3><hr>
<h3 id="用VSCode打开这个文件夹"><a href="#用VSCode打开这个文件夹" class="headerlink" title="用VSCode打开这个文件夹"></a>用VSCode打开这个文件夹</h3><hr>
<h3 id="如图新建一个名为-vscode的文件夹就行了"><a href="#如图新建一个名为-vscode的文件夹就行了" class="headerlink" title="如图新建一个名为.vscode的文件夹就行了"></a>如图新建一个名为.vscode的文件夹就行了<img src="https://s2.ax1x.com/2019/08/07/eI7xJ0.png" alt="创建示图"></h3><hr>
<h3 id="在-vscode文件夹里创建一个名为launch-json的文件"><a href="#在-vscode文件夹里创建一个名为launch-json的文件" class="headerlink" title="在.vscode文件夹里创建一个名为launch.json的文件"></a>在.vscode文件夹里创建一个名为<a href="https://github.com/microsoft/vscode-cpptools/blob/master/launch.md" target="_blank" rel="noopener">launch.json</a>的文件</h3><p> 然后输入以下代码(以下配置皆为VSCode默认生成的模板)<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    // 使用 IntelliSense 了解相关属性。</span><br><span class="line">    // 悬停以查看现有属性的描述。</span><br><span class="line">    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;gdb(lunch)&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;cppdbg&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;,</span><br><span class="line">            &quot;args&quot;: [],</span><br><span class="line">            &quot;stopAtEntry&quot;: false,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</span><br><span class="line">            &quot;environment&quot;: [],</span><br><span class="line">            &quot;externalConsole&quot;: false,</span><br><span class="line">            &quot;MIMode&quot;: &quot;gdb&quot;,</span><br><span class="line">            &quot;miDebuggerPath&quot;: &quot;C:/mingw64/bin/gdb.exe&quot;, //这行地址改为gdb的地址</span><br><span class="line">            &quot;setupCommands&quot;: [                          //如果你把mingw64解压到了D盘的根目录下</span><br><span class="line">                &#123;                                       //那这里就写D:/mingw64/bin/gdb.exe</span><br><span class="line">                    &quot;description&quot;: &quot;Enable pretty-printing for gdb&quot;,</span><br><span class="line">                    &quot;text&quot;: &quot;-enable-pretty-printing&quot;,</span><br><span class="line">                    &quot;ignoreFailures&quot;: true</span><br><span class="line">                &#125;</span><br><span class="line">            ],</span><br><span class="line">            &quot;preLaunchTask&quot;: &quot;gcc build&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><img src="https://s2.ax1x.com/2019/08/07/eoS25D.png" alt="launch.json"></p>
<hr>
<h3 id="接着还是-vscode文件夹里创建一个名为tasks-json的文件"><a href="#接着还是-vscode文件夹里创建一个名为tasks-json的文件" class="headerlink" title="接着还是.vscode文件夹里创建一个名为tasks.json的文件"></a>接着还是.vscode文件夹里创建一个名为<a href="https://code.visualstudio.com/docs/editor/tasks#vscode" target="_blank" rel="noopener">tasks.json</a>的文件</h3><p>然后输入以下代码(以下配置皆为VSCode默认生成的模板)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">// 有关 tasks.json 格式的文档，请参见</span><br><span class="line">    // https://go.microsoft.com/fwlink/?LinkId=733558</span><br><span class="line">    &quot;version&quot;: &quot;2.0.0&quot;,</span><br><span class="line">    &quot;tasks&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;type&quot;: &quot;shell&quot;,</span><br><span class="line">            &quot;label&quot;: &quot;gcc build&quot;,</span><br><span class="line">            &quot;command&quot;: &quot;C:/mingw64/bin/gcc.exe&quot;,    //这行的地址改为gcc的地址</span><br><span class="line">            &quot;args&quot;: [</span><br><span class="line">                &quot;-g&quot;,</span><br><span class="line">                &quot;$&#123;file&#125;&quot;,</span><br><span class="line">                &quot;-o&quot;,</span><br><span class="line">                &quot;$&#123;fileDirname&#125;\\$&#123;fileBasenameNoExtension&#125;.exe&quot;</span><br><span class="line">            ],</span><br><span class="line">            &quot;options&quot;: &#123;</span><br><span class="line">                &quot;cwd&quot;: &quot;C:/mingw64/bin&quot;     //这行的地址改为mingw64下的bin地址</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;problemMatcher&quot;: [</span><br><span class="line">                &quot;$gcc&quot;</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://s2.ax1x.com/2019/08/07/eoSgUO.png" alt="tasks.json"></p>
<hr>
<h1 id="测试编译和调试功能"><a href="#测试编译和调试功能" class="headerlink" title="测试编译和调试功能"></a>测试编译和调试功能</h1><p>新建一个.c文件并在里面输入一些代码 比如helloword</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, i);</span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>编译<br><img src="https://s2.ax1x.com/2019/08/07/eo9oAf.png" alt="编译示图"><br>调试<br><img src="https://s2.ax1x.com/2019/08/07/eo974S.png" alt="调试示图"></p>
<hr>
<h1 id="至此，教程结束！"><a href="#至此，教程结束！" class="headerlink" title="至此，教程结束！"></a>至此，教程结束！</h1>]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第七章复习题目和编程练习题的答案</title>
    <url>/2019/05/19/C-Primer-Puls%E7%AC%AC%E4%B8%83%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第七章复习题目和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>判断下列表达式是true还是false。<br>a 100 &gt; 3 &amp;&amp; ‘a’&gt;’c’<br>b 100 &gt; 3 || ‘a’&gt;’c’<br>c !(100&gt;3)</li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>根据下列描述的条件，分别构造一个表达式：<br>a umber等于或大于90，但是小于100<br>b h不是字符q或k<br>c umber在1～9之间（包括1和9），但不是5<br>d umber不在1～9之间</li>
</ol>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>下面的程序关系表达式过于复杂，而且还有些错误，请简化并改正。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> weight, height;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d , weight, height);</span></span><br><span class="line"><span class="string">    if (weight &lt; 100 &amp;&amp; height &gt; 64)</span></span><br><span class="line"><span class="string">    if (height &gt;= 72)</span></span><br><span class="line"><span class="string">    printf("</span>You are very tall <span class="keyword">for</span> your weight.\n<span class="string">");</span></span><br><span class="line"><span class="string">    else if (height &lt; 72 &amp;&amp;&gt; 64)</span></span><br><span class="line"><span class="string">    printf("</span>You are tall <span class="keyword">for</span> your weight.\n<span class="string">");</span></span><br><span class="line"><span class="string">    else if (weight &gt; 300 &amp;&amp; !(weight &lt;= 300)&amp;&amp; height &lt; 48)</span></span><br><span class="line"><span class="string">    if (!(height &gt;= 48))</span></span><br><span class="line"><span class="string">    printf("</span> You are quite <span class="keyword">short</span> <span class="keyword">for</span> your weight.\n<span class="string">");</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">    printf("</span>Your weight is ideal.\n<span class="string">");</span></span><br><span class="line"><span class="string">    return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>下列个表达式的值是多少？<pre><code>a.5 &gt; 2
b.3 + 4 &gt; 2 &amp;&amp; 3 &lt; 2
c.x &gt;= y || y &gt; x
d.d = 5 + ( 6 &gt; 2 )
e.&apos;X&apos; &gt; &apos;T&apos; ? 10 : 5
f.x &gt; y ? y &gt; x : x &gt; y</code></pre></li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>下面的程序将打印什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">for</span> (num = <span class="number">1</span>; num &lt;= <span class="number">11</span>; num++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'$'</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'*'</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'#'</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'%'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>下面的程序将打印什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"fat "</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"hat "</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"cat "</span>);</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Oh no!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'\n'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>下面的程序有哪些错误？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> lc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> uc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> oc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">'a'</span> &lt;= ch &gt;= <span class="string">'z'</span>)</span><br><span class="line">            lc++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!(ch &lt; <span class="string">'A'</span>) || !(ch &gt; <span class="string">'Z'</span>)</span><br><span class="line">            uc++;</span><br><span class="line">            oc++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(%d lowercase, %d uppercase, %d other, lc, uc, oc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>下面的程序将打印什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">while</span> (age++ &lt;= <span class="number">65</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((age % <span class="number">20</span>) == <span class="number">0</span>) <span class="comment">/* age是否能被20整除？ */</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"You are %d.Here is a raise.\n"</span>, age);</span><br><span class="line">        <span class="keyword">if</span> (age = <span class="number">65</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"You are %d.Here is your gold watch.\n"</span>, age);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>给定下面的输入时，以下程序将打印什么？<br>q c h b<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Step 1\n"</span>);</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'c'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'b'</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'h'</span>)</span><br><span class="line">            <span class="keyword">goto</span> laststep;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Step 2\n"</span>);</span><br><span class="line">    laststep:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Step 3\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>重写复习题9，但这次不能使用continue和goto语句。</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>编写一个程序读取输入，读到#字符停止，然后报告读取的空格数、换行符数和所有其他字符的数量。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> word = <span class="number">0</span>，space = <span class="number">0</span>, LF = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        word += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">' '</span>)</span><br><span class="line">            space += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'\n'</span>)</span><br><span class="line">            LF += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"这段字符串中有%d个空格，%d个换行符，总共%d个字符"</span>, space, LF, word);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>编写一个程序读取输入，读到#字符停止。程序要打印每个输入的字符以及对应的ASCII码（十进制）。<br>一行打印8个字符。建议 : 使用字符计数 和求模运算符（%）在每8个循环周期时打印一个换行符。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != <span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'\n'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c-%d "</span>, c, c);</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">8</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个程序，读取整数直到用户输入0。<br>输入结束后，程序应报告 用户输入的偶数（不包括 0）个数、这些偶数的平均值、输入的奇数个数及其奇数的平均值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;      <span class="comment">//接收指定值</span></span><br><span class="line">    <span class="keyword">int</span> n_even = <span class="number">0</span>;   <span class="comment">//偶数的个数</span></span><br><span class="line">    <span class="keyword">int</span> even_num = <span class="number">0</span>; <span class="comment">//偶数的总和</span></span><br><span class="line">    <span class="keyword">int</span> n_odd = <span class="number">0</span>;    <span class="comment">//奇数的个数</span></span><br><span class="line">    <span class="keyword">int</span> odd_num = <span class="number">0</span>;  <span class="comment">//奇数的总和</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num), num != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            n_even++;</span><br><span class="line">            even_num += num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            n_odd++;</span><br><span class="line">            odd_num += num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果没有奇/偶数及数值 那就另作提示</span></span><br><span class="line">    <span class="keyword">if</span> (n_even != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"偶数有%3d个 偶数的平均数为%3d\n"</span>, n_even, even_num / n_even);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"没有偶数\n"</span>);</span><br><span class="line">    <span class="keyword">if</span> (n_odd != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"奇数有%3d个 奇数的平均数为%3d\n"</span>, n_odd, odd_num / n_odd);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"没有奇数\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>使用if else语句编写一个程序读取输入，读到#停止。<br>用感叹号替换句号，用两个感叹号替换原来的感叹号，最后报告进行了多少次替换。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> once = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'.'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'!'</span>);</span><br><span class="line">            once++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'!'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'!'</span>);</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'!'</span>);</span><br><span class="line">            once++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">putchar</span>(ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"替换了%d次"</span>, once);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>使用switch重写练习4。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> one = <span class="number">0</span>, two = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'.'</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'!'</span>);</span><br><span class="line">            one++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'!'</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'!'</span>);</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">'!'</span>);</span><br><span class="line">            two++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">putchar</span>(ch);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> once = one + two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"总共替换了%d次\n"</span>, once);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"其中 . 符号替换了%d次 ！ 符号替换了%d次\n"</span>, one, two);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写程序读取输入，读到#停止，报告ei出现的次数。<br>注意该程序要记录前一个字符和当前字符。用“Receive your eieio award”这样的输入来测试<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> fre = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'#'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">'e'</span> &amp;&amp; getchar() == <span class="string">'i'</span>)</span><br><span class="line">            fre++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>, fre);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个程序，提示用户输入一周工作的小时数，然后打印工资总额、税金和净收入。做如下假设：<br>a.基本工资 = 10.00美元/小时<br>b.加班（超过40小时） = 1.5倍的时间<br>c.税率： 前300美元为15% 续150美元为20%<br>余下的为25%<br>用#define定义符号常量。不用在意是否符合当前的税法。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m_hour 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> t_over 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> h_over 1.5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m_fourty (m_hour * t_over)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m1 300                                       <span class="comment">//第一个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m2 450                                       <span class="comment">//第二个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trf 0.15                                        <span class="comment">//前300美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trs 0.20                                        <span class="comment">//续150美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trt 0.25                                        <span class="comment">//余下的美元费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f_taxation (tr_m1 * trf)                        <span class="comment">//300美元的税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> s_taxation (f_taxation + trs * (tr_m2 - tr_m1)) <span class="comment">//450美元的税费</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> hour, m_all;               <span class="comment">//工作时间和工资总额  一周168小时</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"一周工作的小时数 = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;hour);</span><br><span class="line">    <span class="keyword">if</span> (hour &gt; <span class="number">40</span>)</span><br><span class="line">        m_all = m_fourty + m_hour * (h_over * (hour - t_over));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        m_all = hour * m_hour;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"工资总额 = %5.2lf\n税金     = %5.2lf\n净收入   = %5.2lf\n"</span>, m_all, taxation(m_all), m_all - taxation(m_all));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span> m_all)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ta;     <span class="comment">//税金</span></span><br><span class="line">    <span class="keyword">if</span>(m_all &lt;= tr_m1)      <span class="comment">//300美元以内的税费</span></span><br><span class="line">    ta = m_all * trf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m1) <span class="comment">//450美元以内的税费</span></span><br><span class="line">    ta = f_taxation + trs * (m_all - tr_m1);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m2) <span class="comment">//超过450美元的税费</span></span><br><span class="line">    ta = s_taxation + trt * (m_all - tr_m2);</span><br><span class="line">    <span class="keyword">return</span> ta;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>修改练习7的假设a，让程序可以给出一个供选择的工资等级菜单。使用switch完成工资等级选择。运行程序后，显示的菜单应该类似这样：<pre><code>*****************************************************************
Enter the number corresponding to the desired pay rate or action:
1) $8.75/hr     2) $9.33/hr
2) $10.00/hr    4) $11.20/hr
5) quit
*****************************************************************</code></pre>如果选择 1～4 其中的一个数字，程序应该询问用户工作的小时数。程序要通过循环运行，除非用户输入 5。如果输入 1～5 以外的数字，程序应 提醒用户输入正确的选项，然后再重复显示菜单提示用户输入。使用#define 创建符号常量表示各工资等级和税率。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> t_over 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> h_over 1.5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m1 300                                       <span class="comment">//第一个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m2 450                                       <span class="comment">//第二个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trf 0.15                                        <span class="comment">//前300美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trs 0.20                                        <span class="comment">//续150美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trt 0.25                                        <span class="comment">//余下的美元费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f_taxation (tr_m1 * trf)                        <span class="comment">//300美元的税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> s_taxation (f_taxation + trs * (tr_m2 - tr_m1)) <span class="comment">//450美元的税费</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">M_all</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">mof</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> m_all, m_hour;</span><br><span class="line">    <span class="keyword">int</span> target;</span><br><span class="line">    menu();</span><br><span class="line">    <span class="keyword">while</span> ((target = getchar()) != <span class="string">'5'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (target == <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">switch</span> (target)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">            m_hour = <span class="number">8.75</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">            m_hour = <span class="number">9.33</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">            m_hour = <span class="number">10.00</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">            m_hour = <span class="number">11.20</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请输入1-5之间的数字"</span>);</span><br><span class="line">            menu();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        m_all = M_all(m_hour);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"工资总额 = %5.2lf\n税金     = %5.2lf\n净收入   = %5.2lf\n"</span>, m_all, taxation(m_all), m_all - taxation(m_all));</span><br><span class="line">        menu();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n*****************************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter the number corresponding to the desired pay rate or action:\n1) $8.75/hr     2) $9.33/hr\n3) $10.00/hr    4) $11.20/hr\n5) quit\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"*****************************************************************\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">M_all</span><span class="params">(<span class="keyword">double</span> m_hour)</span> <span class="comment">//计算工资总额</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> hour;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"请输入工作小时数"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;hour);</span><br><span class="line">    <span class="keyword">double</span> m_all, m_fourty;</span><br><span class="line">    m_fourty = (m_hour * t_over);</span><br><span class="line">    <span class="keyword">if</span> (hour &gt; t_over)</span><br><span class="line">        m_all = m_fourty + m_hour * (h_over * (hour - t_over));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        m_all = hour * m_hour;</span><br><span class="line">    <span class="keyword">return</span> m_all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span> m_all)</span> <span class="comment">//计算税费</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ta;          <span class="comment">//税金</span></span><br><span class="line">    <span class="keyword">if</span> (m_all &lt;= tr_m1) <span class="comment">//300美元以内的税费</span></span><br><span class="line">        ta = m_all * trf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m1) <span class="comment">//450美元以内的税费</span></span><br><span class="line">        ta = f_taxation + trs * (m_all - tr_m1);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m2) <span class="comment">//超过450美元的税费</span></span><br><span class="line">        ta = s_taxation + trt * (m_all - tr_m2);</span><br><span class="line">    <span class="keyword">return</span> ta;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>编写一个程序，只接受正整数输入，然后显示所有小于或等于该数的素数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num, i, j, result, a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d  "</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>1988年的美国联邦税收计划是近代最简单的税收方案。它分为4个类别，每个类别有两个等级。<br>下面是该税收计划的摘要（美元数为应征税的收入）：<br>|类别|税金|<br>|单身|17850美元按15%计，超出部分按28%计|<br>|户主|23900美元按15%计，超出部分按28%计|<br>|已婚，共有|29750美元按15%计，超出部分按28%计|<br>|已婚，离异|14875美元按15%计，超出部分按28%计|<br>例如，一位工资为20000美元的单身纳税人，应缴纳税费0.15×17850+0.28×（20000−17850）美元。编写一个程序，让用户指定缴纳税金的种类和应纳税收入，然后计算税金。程序应通过循环让用户可以多次输入。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SINTRT 17850          <span class="comment">//单身的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SINTRM (SINTRT * TRO) <span class="comment">//单身的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOHTRT 23900          <span class="comment">//户主的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOHTRM (HOHTRT * TRO) <span class="comment">//户主的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MARTRT 29750          <span class="comment">//已婚的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MARTRM (MARTRT * TRO) <span class="comment">//已婚的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIVTRT 14875          <span class="comment">//离异的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIVTRM (DIVTRT * TRO) <span class="comment">//离异的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRO 0.15              <span class="comment">//一级税率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRT 0.28              <span class="comment">//二级税率</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">result</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">banner</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">double</span> T_target, M_target;</span><br><span class="line">    banner();</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">'5'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'1'</span>:</span><br><span class="line">            T_target = SINTRT;</span><br><span class="line">            M_target = SINTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'2'</span>:</span><br><span class="line">            T_target = HOHTRT;</span><br><span class="line">            M_target = HOHTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'3'</span>:</span><br><span class="line">            T_target = MARTRT;</span><br><span class="line">            M_target = MARTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">3</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'4'</span>:</span><br><span class="line">            T_target = DIVTRT;</span><br><span class="line">            M_target = DIVTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">4</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请重新输入"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        banner();</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">result</span><span class="params">(<span class="keyword">double</span> T_target, <span class="keyword">double</span> M_target, <span class="keyword">double</span> tip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> DR = <span class="number">0</span>, result;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"类别：%.lf\n请输入美元(输入q以退出到种类选择)\n"</span>, tip);</span><br><span class="line">    <span class="keyword">while</span> ((<span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;DR)) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (DR &lt;= T_target)</span><br><span class="line">            result = DR * TRO;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result = M_target + (DR - T_target) * TRT;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.2lf美元的税费\n"</span>, result);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"类别：%.lf\n请输入美元(输入q以退出到种类选择)\n"</span>, tip);</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">banner</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"************************************************************\n"</span></span><br><span class="line">           <span class="string">"请输入一个对应的字符以使程序进入下一步\n"</span></span><br><span class="line">           <span class="string">"1)单身        2)户主\n3)已婚，共有  4)已婚，离异\n5)退出\n"</span></span><br><span class="line">           <span class="string">"************************************************************\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>ABC 邮购杂货店出售的洋蓟售价为 2.05 美元/磅，甜菜售价为 1.15美元/磅，胡萝卜售价为 1.09美元/磅。在添加运费之前，100美元的订单有 5%的打折优惠。少于或等于5磅的订单收取6.5美元的运费和包装费，5磅～ 20磅的订单收取14美元的运费和包装费，超过20磅的订单在14美元的基础上 每续重1磅增加0.5美元。编写一个程序，在循环中用switch语句实现用户输入不同的字母时有不同的响应，即输入a的响应是让用户输入洋蓟的磅数，b 是甜菜的磅数，c是胡萝卜的磅数，q 是退出订购。程序要记录累计的重量。即，如果用户输入 4 磅的甜菜，然后输入 5磅的甜菜，程序应报告9磅的甜菜。然后，该程序要计算货物总价、折扣（如果有的话）、运费和包装费。随后，程序应显示所有的购买信息：物品售价、订购的重量（单位：磅）、订购的蔬菜费用、订单的总费用、折扣（如果有的话）、运费和包装费，以及所有的费用总额。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YJM 2.05        <span class="comment">//洋蓟价格</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCM 1.15        <span class="comment">//甜菜价格</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HLBM 1.09       <span class="comment">//胡萝卜价格</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DCS 0.05        <span class="comment">//打折优惠</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PA 5            <span class="comment">//一级磅数阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PB 20           <span class="comment">//二级磅数阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAM 6.5         <span class="comment">//一级磅数单价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PBM 14          <span class="comment">//二级磅数单价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OFPA PA *PAM    <span class="comment">//一级磅数总价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OFPB PB *PBM    <span class="comment">//二级磅数总价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OFP 0.5         <span class="comment">//超过20磅每磅续加0.5美元</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span>;        <span class="comment">//菜单</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span>)</span></span>;       <span class="comment">//统计所需蔬菜磅数</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">freight</span><span class="params">(<span class="keyword">double</span>)</span></span>; <span class="comment">//包装费和运费</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> target;        <span class="comment">//进入switch</span></span><br><span class="line">    <span class="keyword">double</span> yj, tc, hlb; <span class="comment">//洋蓟， 甜菜， 胡萝卜</span></span><br><span class="line">    <span class="keyword">int</span> dft = <span class="number">1</span>;        <span class="comment">//防止用户输入其他值程序报出总蔬菜磅数</span></span><br><span class="line">    menu();</span><br><span class="line">    <span class="keyword">while</span> ((target = getchar()) != <span class="string">'q'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (target)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">            dft = <span class="number">1</span>;</span><br><span class="line">            yj += add(<span class="string">'a'</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'b'</span>:</span><br><span class="line">            dft = <span class="number">1</span>;</span><br><span class="line">            tc += add(<span class="string">'b'</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">'c'</span>:</span><br><span class="line">            dft = <span class="number">1</span>;</span><br><span class="line">            hlb += add(<span class="string">'c'</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            dft = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"请重新输入\n"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        menu();</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (dft)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%5.2lf磅洋蓟 = %5.2lf美元\n%5.2lf磅甜菜 = %5.2lf美元\n%5.2lf磅胡萝卜 = %5.2lf美元\n"</span>, yj, yj * YJM, tc, tc * TCM, hlb, hlb * HLBM);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> Tp = (yj * YJM) + (tc * TCM) + (hlb * HLBM); <span class="comment">//蔬菜总费用</span></span><br><span class="line">    <span class="keyword">double</span> Tpk = <span class="number">0</span>;                                     <span class="comment">//折扣数</span></span><br><span class="line">    <span class="keyword">if</span> (Tp &gt; <span class="number">100</span>)</span><br><span class="line">        Tpk = Tp * DCS;</span><br><span class="line">    <span class="keyword">double</span> Pound = yj + tc + hlb;   <span class="comment">//总磅数</span></span><br><span class="line">    <span class="keyword">double</span> PoundM = freight(Pound); <span class="comment">//包装费和运费</span></span><br><span class="line">    <span class="keyword">double</span> aof = Tp + PoundM - Tpk; <span class="comment">//所有的加在一起</span></span><br><span class="line">    <span class="keyword">if</span> (Tpk)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"蔬菜总磅数 = %.2lf磅\n蔬菜总费用 = %.2lf美元\n折扣 = %.2lf美元\n运费和包装费 = %.2lf美元\n所有的费用 = %.2lf美元\n"</span>, Pound, Tp, Tpk, PoundM, aof);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"蔬菜总磅数 = %.2lf磅\n蔬菜总费用 = %.2lf美元\n运费和包装费 = %.2lf美元\n所有的费用 = %.2lf美元\n"</span>, Pound, Tp, PoundM, aof);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">freight</span><span class="params">(<span class="keyword">double</span> Pound)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> Ft;</span><br><span class="line">    <span class="keyword">if</span> (Pound &lt;= PA)</span><br><span class="line">        Ft = PAM;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Pound &gt; PA &amp;&amp; Pound &lt; PB)</span><br><span class="line">        Ft = PBM;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Pound &gt; PB)</span><br><span class="line">        Ft = PBM + (Pound - PB) * OFP;</span><br><span class="line">    <span class="keyword">return</span> Ft;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span> tip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> bang, _bang;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"类别：%c\n请输入磅数(输入q以退出到选择菜单)\n"</span>, tip);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;bang) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        _bang += bang;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"类别：%c，当前磅数为 %.2lf\n"</span>, tip, _bang);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"请输入磅数(输入q以退出到选择菜单)\n"</span>, tip);</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _bang;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"**************************************************\n*                                                *"</span></span><br><span class="line">           <span class="string">"\n*  a)   洋蓟 2.05美元/磅    b) 甜菜 1.15美元/磅  *\n*  c) 胡萝卜 1.09美元/磅    q) 退出订购          *\n*                                                *"</span></span><br><span class="line">           <span class="string">"\n**************************************************\n"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第六章复习题目和编程练习题的答案</title>
    <url>/2019/05/18/C-Primer-Puls%E7%AC%AC%E5%85%AD%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第六章复习题目和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>写出执行完下列各行后quack的值是多少。后5行中使用的是第1行quack的值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> quack = <span class="number">2</span>;</span><br><span class="line">quack += <span class="number">5</span>;</span><br><span class="line">quack *= <span class="number">10</span>;</span><br><span class="line">quack -= <span class="number">6</span>;</span><br><span class="line">quack /= <span class="number">8</span>;</span><br><span class="line">quack %= <span class="number">3</span>;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol>
<li>假设value是int类型，下面循环的输出是什么？<pre><code>for ( value = 36; value &gt; 0; value /= 2)
printf(&quot;%3d&quot;, value);</code></pre>如果value是double类型，会出现什么问题？</li>
</ol>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>用代码表示以下测试条件：<br>a.大于5<br>b.scanf()读取一个double类型值且失败<br>c.X的值等于</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>用代码表示以下测试条件：<br>a.scanf()成功读取一个整数<br>b.不等于<br>c.x大于或等于20</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>下面的程序有点问题，请找出问题所在。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, <span class="built_in">list</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>, i &lt;= <span class="number">10</span>, i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">list</span>[i] = <span class="number">2</span> * i + <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>, j &gt;= i, j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" %d"</span>, <span class="built_in">list</span>[j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写一个程序打印下面的图案，要求使用嵌套循环：<pre><code>$$$$$$$$
$$$$$$$$
$$$$$$$$
$$$$$$$$</code></pre></li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>下面的程序各打印什么内容？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (++i &lt; <span class="number">4</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Hi! "</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Bye! "</span>);</span><br><span class="line">    <span class="keyword">while</span> (i++ &lt; <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">b.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, ch = <span class="string">'A'</span>; i &lt; <span class="number">4</span>; i++, ch += <span class="number">2</span> * i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>假设用户输入的是么？（在ASCII码中，!紧跟在空格字符后面）<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">'g'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">b.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">'g'</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ++ch);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">c.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">    &#125; <span class="keyword">while</span> (ch != <span class="string">'g'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">d.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">for</span> (ch = <span class="string">'$'</span>; ch != <span class="string">'g'</span>; <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;ch))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>下面的程序打印什么内容？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    n = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">while</span> (++n &lt;= <span class="number">33</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d|"</span>, n);</span><br><span class="line">    n = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d|"</span>, n);</span><br><span class="line">    <span class="keyword">while</span> (++n &lt;= <span class="number">33</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n***\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">1</span>; n * n &lt; <span class="number">200</span>; n += <span class="number">4</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n***\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">2</span>, m = <span class="number">6</span>; n &lt; m; n *= <span class="number">2</span>, m += <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>, n, m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n***\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">5</span>; n &gt; <span class="number">0</span>; n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (m = <span class="number">0</span>; m &lt;= n; m++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"="</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>考虑下面的声明：<br>double mint[10];<br>a.数组名是什么？<br>b.该数组有多少个元素？<br>c.每个元素可以储存什么类型的值？<br>d.下面的哪一个scanf()的用法正确？<br>i.scanf(“%lf”, mint[2])<br>ii.scanf(“%lf”, &amp;mint[2])<br>iii.scanf(“%lf”, &amp;mint)</li>
</ol>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>Noah先生喜欢以2计数，所以编写了下面的程序，创建了一个储存2、4、6、8等数字的数组。<br>这个程序是否有错误之处？如果有，请指出。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 8</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> by_twos[SIZE];</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">1</span>; index &lt;= SIZE; index++)</span><br><span class="line">        by_twos[index] = <span class="number">2</span> * index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">1</span>; index &lt;= SIZE; index++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, by_twos);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>假设要编写一个返回long类型值的函数，函数定义中应包含什么？</li>
</ol>
<hr>
<h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>定义一个函数，接受一个int类型的参数，并以long类型返回参数的平方值。</li>
</ol>
<hr>
<h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14">
<li>下面的程序打印什么内容？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">1</span>, <span class="built_in">printf</span>(<span class="string">"%d: Hi!\n"</span>, k); <span class="built_in">printf</span>(<span class="string">"k = %d\n"</span>, k),k * k &lt; <span class="number">26</span>; k += <span class="number">2</span>, <span class="built_in">printf</span>(<span class="string">"Now k is %d\n"</span>, k))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"k is %d in the loop\n"</span>, k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>编写一个程序，创建一个包含26个元素的数组，并在其中储存26个小写字母。然后打印数组的所有内容。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">char</span> Letter, <span class="built_in">array</span>[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>,Letter = <span class="string">'a'</span>; index &lt; <span class="number">26</span>; index++,Letter++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">array</span>[index] = Letter;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">" %c"</span>, <span class="built_in">array</span>[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li><p>使用嵌套循环，按下面的格式打印字符：</p>
<p> $<br> $$<br> $$$<br> $$$$<br> $$$$$</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> outer, inner;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> outer = <span class="number">0</span>; outer &lt; <span class="number">5</span>; outer++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> inner = <span class="number">0</span>; inner &lt;= outer; inner++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"$"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>使用嵌套循环，按下面的格式打印字母：<br>F<br>FE<br>FED<br>FEDC<br>FEDCB<br>FEDCBA<br>注意：如果你的系统不使用ASCII或其他以数字顺序编码的代码，可以 把字符数组初始化为字母表中的字母：<br>char lets[27] = “ABCDEFGHIJKLMNOPQRSTUVWXYZ”;<br>然后用数组下标选择单独的字母，例如lets[0]是‘A’，等等。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> outer = <span class="string">'F'</span>, inner = <span class="string">'F'</span>;</span><br><span class="line">    <span class="keyword">for</span> (outer = <span class="string">'F'</span>; outer &gt;= <span class="string">'A'</span>; outer--)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">for</span> (inner = <span class="string">'F'</span>; inner &gt;= outer; inner--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, inner);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>使用嵌套循环，按下面的格式打印字母：<br>A              65<br>BC             66<br>DEF            68<br>GHIJ           71<br>KLMNO          75<br>PQRSTU         80<br>如果你的系统不使用以数字顺序编码的代码，请参照练习3的方案解决。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> index;</span><br><span class="line">    <span class="keyword">int</span> outer, inner;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="string">'A'</span>,outer = <span class="number">1</span>; outer &lt;= <span class="number">6</span>; outer++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (inner = <span class="number">1</span>; inner &lt;= outer;inner++, index++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, index);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol>
<li><p>编写一个程序，提示用户输入大写字母。使用嵌套循环以下面金字塔 型的格式打印字母：</p>
<pre><code>    Ａ
   ABA
  ABCBA
 ABCDCBA
ABCDEDCBA</code></pre><p>打印这样的图形，要根据用户输入的字母来决定。例如，上面的图形是 在用户输入E后的打印结果。<br>提示：用外层循环处理行，每行使用3个内层循环，分别处理空格、以升序打印字母、以降序打印字母。<br>如果系统不使用ASCII或其他以数字顺序 编码的代码，请参照练习3的解决方案。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>  word;     <span class="comment">//接收指定值</span></span><br><span class="line">    <span class="keyword">int</span>   line;     <span class="comment">//控制升序打印字母的个数 放在外层中循环递增 意思是控制第一行的升序层打印一个字母 第二层。。。（与目标有些无伤大雅的出入）用断点跑一遍你就明白了</span></span><br><span class="line">    <span class="keyword">char</span> space;     <span class="comment">//控制打印空格的个数  赋值在外层中 指定值减去'A'就是要打印的空格数量</span></span><br><span class="line">    <span class="keyword">int</span>  index;     <span class="comment">//在空格和升序中均被用来当作索引</span></span><br><span class="line">    <span class="keyword">char</span>    Ao;     <span class="comment">//升序</span></span><br><span class="line">    <span class="keyword">char</span>    Do;     <span class="comment">//降序</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;word);</span><br><span class="line">    <span class="keyword">for</span> (line = <span class="number">0</span>, space = word - <span class="string">'A'</span>; Ao &lt;= word; Ao++, line++, space--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; space; index++)                <span class="comment">//空格层</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">1</span>, Ao = <span class="string">'A'</span>; index &lt;= line; index++, Ao++)<span class="comment">//升序层  搞明白为什么index要初始化为1 提示：index &lt;= line;和外层line = 0；</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, Ao);</span><br><span class="line">        <span class="keyword">for</span> (Do = Ao; Do &gt;= <span class="string">'A'</span>; Do--)                         <span class="comment">//降序层  Do取升序Ao的值 然后递减输出到A</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%c"</span>, Do);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>编写一个程序打印一个表格，每一行打印一个整数、该数的平方、该数的立方。要求用户输入表格的上下限。使用一个for循环。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Begin, End;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Begin = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;Begin);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"End = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;End);</span><br><span class="line">    <span class="keyword">for</span> (; Begin &lt;= End; Begin++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The square and cube of %5d is %5d and %5d\n"</span>, Begin, Begin * Begin, Begin * Begin * Begin);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个程序把一个单词读入一个字符数组中，然后倒序打印这个单词。<br>提示：strlen()函数（第4章介绍过）可用于计算数组最后一个字符的下标。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> word[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, word);</span><br><span class="line">    <span class="keyword">int</span> size = <span class="built_in">strlen</span>(word) - <span class="number">1</span>;    <span class="comment">//stren函数从1开始计数,所以要减1</span></span><br><span class="line">    <span class="keyword">for</span> (; size &gt;= <span class="number">0</span>; size--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, word[size]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>编写一个程序，要求用户输入两个浮点数，并打印两数之差除以两数 乘积的结果。<br>在用户输入非数字之前，程序应循环处理用户输入的每对值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  //注意审题</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> one,two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter a pair of numbers\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%f %f"</span>, &amp;one, &amp;two) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%g"</span>, (one - two) / (one * two));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter a pair of numbers\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Bye!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>修改练习8，使用一个函数返回计算的结果。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Operation</span><span class="params">(<span class="keyword">float</span> one, <span class="keyword">float</span> two)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> one,two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter a pair of numbers\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%f %f"</span>, &amp;one, &amp;two) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">float</span> Result = Operation(one,two);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%g\n"</span>, Result);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter a pair of numbers\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Bye!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Operation</span><span class="params">(<span class="keyword">float</span> one, <span class="keyword">float</span> two)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (one - two) / (one * two);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>编写一个程序，要求用户输入一个上限整数和一个下限整数，计算 从上限到下限范围内所有整数的平方和，并显示计算结果。然后程序继续提 示用户输入上限和下限整数，并显示结果，直到用户输入的上限整数小于下 限整数为止。程序的运行示例如下：<br>Enter　lower　and　upper　integer　limits : 5　9<br>The　sums　of　the　squares　from　25　to　81　is　255<br>Enter　next　set　of　limits : 3　25<br>The　sums　of　the　squares　from　9　to　625　is　5520<br>Enter　next　set　of　limits : 5　5<br>Done<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calculation</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;  <span class="comment">//声明函数原型</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lower_num, upper_num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter　lower　and　upper　integer　limits :"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;lower_num, &amp;upper_num);</span><br><span class="line">    <span class="keyword">while</span> (lower_num &lt; upper_num)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"The sums of the squares from %d to %d is "</span>, lower_num * lower_num, upper_num * upper_num);</span><br><span class="line">        calculation(lower_num, upper_num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Enter next set of limits :"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;lower_num, &amp;upper_num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done!"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calculation</span><span class="params">(<span class="keyword">int</span> lower_num, <span class="keyword">int</span> upper_num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result;</span><br><span class="line">    <span class="keyword">for</span> (result = <span class="number">0</span>; lower_num &lt;= upper_num; lower_num++)</span><br><span class="line">        result += lower_num * lower_num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十一题-1"><a href="#第十一题-1" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>编写一个程序，在数组中读入8个整数，然后按倒序打印这8个整数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 8</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;  <span class="comment">//两阶段 遍历数组赋值和遍历数组输出</span></span><br><span class="line">    <span class="keyword">int</span> number[SIZE];</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; SIZE; index++)  <span class="comment">//数组是从0开始的</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;number[index]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">for</span> (index = SIZE - <span class="number">1</span>; index &gt;= <span class="number">0</span>; index--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, number[index]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十二题-1"><a href="#第十二题-1" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>考虑下面两个无限序列：<br>1.0 + 1.0/2.0 + 1.0/3.0 + 1.0/4.0 + …<br>1.0 - 1.0/2.0 + 1.0/3.0 - 1.0/4.0 + …<br>编写一个程序计算这两个无限序列的总和，直到到达某次数。提示：奇数个-1 相乘得-1，偶数个-1相乘得1。让用户交互地输入指定的次数，当用户输入0或负值时结束输入。查看运行100项、1000项、10000项后的总和，是否发现每个序列都收敛于某值？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j, index;</span><br><span class="line">    <span class="keyword">double</span> i = <span class="number">1</span>, result1 = <span class="number">0</span>, result2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;j);</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; j; index++, i++)</span><br><span class="line">    &#123;</span><br><span class="line">        result1 += <span class="number">1</span> / i;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">int</span>)i &amp; <span class="number">1</span>)</span><br><span class="line">            result2 += <span class="number">1</span> / i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result2 -= <span class="number">1</span> / i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%result1 = %lf   result2 = %lf\n"</span>, result1, result2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十三题-1"><a href="#第十三题-1" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>编写一个程序，创建一个包含8个元素的int类型数组，分别把数组元素设置为2的前8次幂。<br>使用for循环设置数组元素的值，使用do while循环显示数组元素的值。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 8</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[SIZE], index, num;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>, num = <span class="number">1</span>; index &lt; SIZE; index++, num *= <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">array</span>[index] = num;</span><br><span class="line">    index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, <span class="built_in">array</span>[index]);</span><br><span class="line">        index++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (index &lt; SIZE);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十四题-1"><a href="#第十四题-1" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14">
<li>编写一个程序，创建两个包含8个元素的double类型数组，使用循环提示用户为第一个数组输入8 个值。第二个数组元素的值设置为第一个数组对应元素的累积之和。例如，第二个数组的第 4个元素的值是第一个数组前 4个元素之和，第二个数组的第5个元素的值是第一个数组前5个元素之和 （用嵌套循环可以完成，但是利用第二个数组的第5个元素是第二个数组的 第4个元素与第一个数组的第5个元素之和，只用一个循环就能完成任务，不需要使用嵌套循环）。最后，使用循环显示两个数组的内容，第一个数组显示成一行，第二个数组显示在第一个数组的下一行，而且每个元素都与第一个数组各元素相对应。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> one[<span class="number">8</span>], two[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"one = "</span>);</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt;= <span class="number">7</span>; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;one[index]); <span class="comment">//7个数字需要一次输完   否则就需要再创两个for来输出数组</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%4.1lf|"</span>, one[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    two[<span class="number">-1</span>] = <span class="number">0</span>; <span class="comment">//数组下标-1</span></span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt;= <span class="number">7</span>; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        two[index] = one[index] + two[index - <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%4.1lf|"</span>, two[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十五题"><a href="#第十五题" class="headerlink" title="第十五题"></a>第十五题</h3><ol start="15">
<li>编写一个程序，读取一行输入，然后把输入的内容倒序打印出来。可以把输入储存在char类型的数组中，假设每行字符不超过255。回忆一下，根据%c转换说明，scanf()函数一次只能从输入中读取一个字符，而且在用户按下Enter键时scanf()函数会生成一个换行字符（\n）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> word[<span class="number">255</span>];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        index++;                    <span class="comment">//思考一下为什么递增一定要放在这一行</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;word[index]);</span><br><span class="line">    &#125; <span class="keyword">while</span> (word[index] != <span class="string">'\n'</span>);</span><br><span class="line">    <span class="keyword">for</span> (index -= <span class="number">1</span>; index &gt;= <span class="number">0</span>; index--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>, word[index]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十六题"><a href="#第十六题" class="headerlink" title="第十六题"></a>第十六题</h3><ol start="16">
<li>Daphne以10%的单利息投资了100美元（也就是说，每年投资获利相当于原始投资的10%）。<br>Deirdre以 5%的复合利息投资了 100 美元（也就是说，利息是当前余额的 5%，包含之前的利息）。<br>编写一个程序，计算需要多少年Deirdre的投资额才会超过Daphne，并显示那时两人的投资额。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> Daphne = <span class="number">100</span>, Deirdre = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> years = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (Deirdre &lt;= Daphne)</span><br><span class="line">    &#123;</span><br><span class="line">        Daphne = Daphne + <span class="number">10</span>;</span><br><span class="line">        Deirdre = Deirdre * <span class="number">1.05</span>;</span><br><span class="line">        years++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"第%d年Deirdre的投资额超过了Daphne"</span>, years);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十七题"><a href="#第十七题" class="headerlink" title="第十七题"></a>第十七题</h3><ol start="17">
<li>Chuckie Lucky赢得了100万美元（税后），他把奖金存入年利率8%的账户。<br>在每年的最后一天， Chuckie取出10万美元。编写一个程序，计算多少年后Chuckie会取完账户的钱？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> dollar = <span class="number">1000000</span>;</span><br><span class="line">    <span class="keyword">int</span> year = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (dollar &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        year++;</span><br><span class="line">        dollar -= (<span class="number">100000</span> - dollar * <span class="number">0.08</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"第%2d年 Chuckie Lucky先生 把钱取完了"</span>, year);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十八题"><a href="#第十八题" class="headerlink" title="第十八题"></a>第十八题</h3><ol start="18">
<li>Rabnud博士加入了一个社交圈。起初他有5个朋友。他注意到他的朋友数量以下面的方式增长。<br>第1周少了1个朋友，剩下的朋友数量翻倍；第2 周少了2个朋友，剩下的朋友数量翻倍。<br>一般而言，第N周少了N个朋友，剩下的朋友数量翻倍。编写一个程序，计算并显示Rabnud博士每周的朋友数量。<br>该程序一直运行，直到超过邓巴数（Dunbar’s number）。邓巴数是粗略 估算一个人在社交圈中有稳定关系的成员的最大值，该值大约是150。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DB 150</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> friends, index;</span><br><span class="line">    <span class="keyword">for</span> (friends = <span class="number">5</span>, index = <span class="number">1</span>; friends &lt;= DB; friends -= index, friends *= <span class="number">2</span>, index++)    <span class="comment">//初始朋友5个，第一周减一个朋友；朋友总数不能大于邓巴数；朋友数量减去这周要减的数量，剩下的朋友数量翻倍，每周要减的朋友数量加一。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"第%2d周Rabnud博士有%3d个朋友\n"</span>, index, friends);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
  <entry>
    <title>C-Primer-Puls第五章复习题目和编程练习题的答案</title>
    <url>/2019/05/16/C-Primer-Puls%E7%AC%AC%E4%BA%94%E7%AB%A0%E5%A4%8D%E4%B9%A0%E9%A2%98%E7%9B%AE%E5%92%8C%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0%E9%A2%98%E7%9A%84%E7%AD%94%E6%A1%88/</url>
    <content><![CDATA[<p>本章内容为《C Primer Plus第六版》第五章复习题目和编程练习题的答案</p>
<h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>假设所有变量的类型都是int，下列各项变量的值是多少：<br>a.x = (2 + 3) * 6;<br>b.x = (12 + 6)/2<em>3;<br>c.y = x = (2 + 3)/4;<br>d.y = 3 + 2</em>(x = 7/2);</li>
</ol>
<a id="more"></a>

<hr>
<h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>假设所有变量的类型都是int，下列各项变量的值是多少：<br>a.x = (int)3.8 + 3.3;<br>b.x = (2 + 3) * 10.5;<br>c.x = 3 / 5 * 22.0;<br>d.x = 22.0 * 3 / 5;</li>
</ol>
<hr>
<h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>对下列各表达式求值：<br>a.30.0 / 4.0 * 5.0;<br>b.30.0 / (4.0 * 5.0);<br>c.30 / 4 * 5;<br>d.30 * 5 / 4;<br>e.30 / 4.0 * 5;<br>f.30 / 4 * 5.0;</li>
</ol>
<hr>
<h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>请找出下面的程序中的错误。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>,</span><br><span class="line">    <span class="keyword">float</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Watch out! Here come a bunch of fractions!\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">30</span>)</span><br><span class="line">    n = <span class="number">1</span>/i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">" %f"</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"That's all, folks!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>这是程序清单 5.9 的另一个版本。从表面上看，该程序只使用了一条scanf()语句，比程序清单5.9简单。请找出不如原版之处。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S_TO_M 60</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sec, min, left;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"This program converts seconds to minutes and "</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"seconds.\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Just enter the number of seconds.\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Enter 0 to end the program.\n"</span>);</span><br><span class="line">    <span class="keyword">while</span> (sec &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;sec);</span><br><span class="line">        min = sec / S_TO_M;</span><br><span class="line">        left = sec % S_TO_M;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d sec is %d min, %d sec.\n"</span>, sec, min, left);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Next input?\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Bye!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>下面的程序将打印出什么内容？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FORMAT <span class="meta-string">"%s! C is cool!\n"</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(FORMAT, FORMAT);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, ++num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num--);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>下面的程序将打印出什么内容？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c1, c2;</span><br><span class="line">    <span class="keyword">int</span> diff;</span><br><span class="line">    <span class="keyword">float</span> num;</span><br><span class="line">    c1 = <span class="string">'S'</span>;</span><br><span class="line">    c2 = <span class="string">'O'</span>;</span><br><span class="line">    diff = c1 - c2;</span><br><span class="line">    num = diff;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%c%c%c:%d %3.2f\n"</span>, c1, c2, c1, diff, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>下面的程序将打印出什么内容？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEN 10</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n++ &lt; TEN)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%5d"</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>修改上一个程序，使其可以打印字母a～g。</li>
</ol>
<hr>
<h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10">
<li>假设下面是完整程序中的一部分，它们分别打印什么？<br>a. int x = 0; while (++x &lt; 3)printf(“%4d”, x);<br>b. int x = 100; while (x++ &lt; 103) printf(“%4d\n”,x); printf(“%4d\n”,x);<br>c. char ch = ‘s’; while (ch &lt; ‘w’) { printf(“%c”, ch); ch++; } printf(“%c\n”,ch);</li>
</ol>
<hr>
<h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11">
<li>下面的程序会打印出什么？<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MESG <span class="meta-string">"COMPUTER BYTES DOG"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n &lt; <span class="number">5</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%s\n"</span>, MESG);</span><br><span class="line">    n++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"That's all.\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12">
<li>分别编写一条语句，完成下列各任务（或者说，使其具有以下副作用）：<br>a.将变量x的值增加10<br>b.将变量x的值增加1<br>c.将a与b之和的两倍赋给c<br>d.将a与b的两倍之和赋给c</li>
</ol>
<hr>
<h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13">
<li>分别编写一条语句，完成下列各任务：<br>a.将变量x的值减少1<br>b.将n除以k的余数赋给m<br>c.q除以b减去a，并将结果赋给p<br>d.a与b之和除以c与d的乘积，并将结果赋给x</li>
</ol>
<hr>
<h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol>
<li>编写一个程序，把用分钟表示的时间转换成用小时和分钟表示的时间。<br>使用#define或const创建一个表示60的符号常量或const变量。<br>通过while 循环让用户重复输入值，直到用户输入小于或等于0的值才停止循环。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> hour 60</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> min;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"min = (&lt;= 0 to quit)\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;min);</span><br><span class="line">    <span class="keyword">while</span> (min &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"min = %dh%dmin\n"</span>, min / hour, min % hour); <span class="comment">//%求余运算符</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"min = (&lt;= 0 to quit)\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;min);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2">
<li>编写一个程序，提示用户输入一个整数，然后打印从该数到比该数大 10的所有整数（例如，用户输入5，则打印5～15的所有整数，包括5和 15）。要求打印的各值之间用一个空格、制表符或换行符分开。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num, bigger;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"number = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;num);</span><br><span class="line">    bigger = num + <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (num &lt;= bigger)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d  "</span>, num);</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3">
<li>编写一个程序，提示用户输入天数，然后将其转换成周数和天数。<br>例如，用户输入18，则转换成2周4天。<br>以下面的格式显示结果：18 days are 2 weeks, 4 days.<br>通过while循环让用户重复输入天数，当用户输入一个非正值时（如0 或 - 20），循环结束。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> week 7</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> days;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"天数 = (&lt;= 0 to quit)\n"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;days);</span><br><span class="line">    <span class="keyword">while</span> (days &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">	    <span class="built_in">printf</span>(<span class="string">"%d天 = %d周0%d天\n"</span>,days, days / week, days % week);</span><br><span class="line">	    <span class="built_in">printf</span>(<span class="string">"天数 = (&lt;= 0 to quit)\n"</span>);</span><br><span class="line">	    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;days);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4">
<li>编写一个程序，提示用户输入一个身高（单位：厘米），并分别以厘米和英寸为单位显示该值，允许有小数部分。<br>程序应该能让用户重复输入身 高，直到用户输入一个非正值。<br>其输出示例如下：<br> Enter　a　height　in　centimeters : 182<br> 182.0　cm　 = 5　feet, 11.7　inches<br> Enter　a　height　in　centimeters　(&lt;= 0　to　quit) : 168.7<br> 168.0　cm　 = 5　feet, 6.<br> 4　inches<br> Enter　a　height　in　centimeters　(&lt;= 0　to　quit) : 0<br> bye<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  //1英尺 = 12英寸  1厘米 = 0.0328084英尺  1厘米 = 0.393701英寸</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> cm, inches;</span><br><span class="line">    <span class="keyword">int</span> feet;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"height = (cm)(&lt;= 0 to quit)"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;cm);</span><br><span class="line">    <span class="keyword">while</span> (cm)</span><br><span class="line">    &#123;</span><br><span class="line">        feet = (<span class="keyword">int</span>)(cm * <span class="number">0.0328084</span>);</span><br><span class="line">        inches = (cm * <span class="number">0.3937008</span>) - (feet * <span class="number">12</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%.lfcm = %dfeet%.1finches\n"</span>, cm, feet, inches);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"height = (cm)(&lt;= 0 to quit)"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;cm);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Bye!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5">
<li>修改程序addemup.c（程序清单5.13），你可以认为addemup.c是计算20天里赚多少钱的程序<br>（假设第1天赚$1、第2天赚$2、第3天赚$3，以此类 推）。<br>修改程序，使其可以与用户交互，根据用户输入的数进行计算（即，用读入的一个变量来代替20）。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count, sum, days;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"days = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;days);</span><br><span class="line">    <span class="keyword">while</span> (count++ &lt; days)</span><br><span class="line">        sum = sum + count;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"sum = %d\n"</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6">
<li>修改编程练习5的程序，使其能计算整数的平方和（可以认为第1天赚 $1、第2天赚$4、第3天赚$9，以此类推，这看起来很不错）。C没有平方函数，但是可以用n * n来表示n的平方。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count, sum, days;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"days = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;days);</span><br><span class="line">    <span class="keyword">while</span> (count++ &lt; days)</span><br><span class="line">        sum = (sum + count * count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"sum = %d\n"</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7">
<li>编写一个程序，提示用户输入一个double类型的数，并打印该数的立方值。<br>自己设计一个函数计算并打印立方值。main()函数要把用户输入的值传递给该函数。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cube</span><span class="params">(<span class="keyword">double</span> num)</span></span>;   <span class="comment">//声明函数原型</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"number = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;num);</span><br><span class="line">    cube(num);           <span class="comment">//函数调用</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cube</span><span class="params">(<span class="keyword">double</span> num)</span>    <span class="comment">//该函数的参数为double型num变量</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%f\n"</span>, num * num * num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;           <span class="comment">//读者在做到这题时可以试着让cube函数把结果返回给main函数 再由main函数输出</span></span><br><span class="line">&#125;                       <span class="comment">//当然函数详解在第九章</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8">
<li>编写一个程序，显示求模运算的结果。<br>把用户输入的第1个整数作为 求模运算符的第2个运算对象，该数在运算过程中保持不变。<br>用户后面输入的数是第1个运算对象。当用户输入一个非正值时，程序结束。其输出示例 如下：<br>This　program　computes　moduli.<br>Enter　an　integer　to　serve　as　the　second　operand:　256<br>Now　enter　the　first　operand : 438<br>438 % 256　is　182<br>Enter　next　number　for　first　operand　(&lt;= 0　to　quit) : 1234567<br>1234567 % 256　is　135<br>Enter　next　number　for　first　operand　(&lt;= 0　to　quit) : 0<br>Done<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> one, two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"two = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;two);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"one = "</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;one);</span><br><span class="line">    <span class="keyword">while</span> (one &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;       <span class="comment">//用两个百分号来输出百分号</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %% %d = %d\n"</span>, one, two, one % two);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"two = (&lt;= 0 to quit)"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;one);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Done\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</li>
</ol>
<hr>
<h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9">
<li>编写一个程序，要求用户输入一个华氏温度。<br>程序应读取double类型 的值作为温度值，并把该值作为参数传递给一个用户自定义的函数Temperatures()。<br>该函数计算摄氏温度和开氏温度，并以小数点后面两位数字 的精度显示3种温度。<br>要使用不同的温标来表示这3个温度值。下面是华氏温 度转摄氏温度的公式：<br>摄氏温度 = 5.0 / 9.0 * (华氏温度 - 32.0)<br>开氏温标常用于科学研究，0表示绝对零，代表最低的温度。下面是摄 氏温度转开氏温度的公式：<br>开氏温度 = 摄氏温度 + 273.16<br>Temperatures()函数中用const创建温度转换中使用的变量。<br>在main()函数 中使用一个循环让用户重复输入温度，当用户输入 q 或其他非数字时，循环 结束。<br>scanf()函数返回读取数据的数量，所以如果读取数字则返回1，如果 读取q则不返回1。<br>可以使用 == 运算符将scanf()的返回值和1作比较，测试两值是否相等。<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Temperatures</span><span class="params">(<span class="keyword">double</span> Fahrenheit)</span></span>;        <span class="comment">//声明函数原型</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> Fahrenheit;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Fahrenheit = "</span>);                <span class="comment">//scanf的返回值与成功读取的项数成正比</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">"%lf"</span>, &amp;Fahrenheit) == <span class="number">1</span>)  <span class="comment">//这句意思为：如果（scanf的返回值 == 1）这个表达式成立 则结果为1；</span></span><br><span class="line">    &#123;                                       <span class="comment">//while为真的具体条件是 紧跟while的关系表达式的结果为 除0以外的所有整数</span></span><br><span class="line">        Temperatures(Fahrenheit);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Fahrenheit = "</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Bye!\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Temperatures</span><span class="params">(<span class="keyword">double</span> Fahrenheit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">double</span> Celsius = <span class="number">5.0</span> / <span class="number">9.0</span> * (Fahrenheit - <span class="number">32.0</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">double</span> Kelvin = Celsius + <span class="number">273.16</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%.2lf°F = %.2lf℃ = %.2lfK\n"</span>,Fahrenheit,Celsius,Kelvin);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>题目</tag>
        <tag>答案</tag>
      </tags>
  </entry>
</search>
