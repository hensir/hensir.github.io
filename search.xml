<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>基于PyQt5的BadUSB代码生成器</title>
      <link href="posts/a2b2d8d2.html"/>
      <url>posts/a2b2d8d2.html</url>
      
        <content type="html"><![CDATA[<h2 id="软件界面介绍"><a href="#软件界面介绍" class="headerlink" title="软件界面介绍"></a>软件界面介绍</h2><p>主要是由两个widget(组件)组成的,基于mainwindow的支持MDI的仿文本文档窗口 和 基于widget的功能区组件</p><h3 id="支持MDI的文本文档"><a href="#支持MDI的文本文档" class="headerlink" title="支持MDI的文本文档"></a>支持MDI的文本文档</h3><p>这个文件规划的很完美 可以做一个独立的文件 可以继承使用 也就是ctrl+c和ctrl+v   (↓)</p><p><a href="https://imgtu.com/i/cLNMnS"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/22/cLNMnS.jpg" alt="cLNMnS.jpg"></a></p><p>这是主界面 本来是自己画UI的 完了 发现不好看 后来看到这个文本文档挺符合基本要求的 然后附加了一个MDI子窗口的功能</p><p>当然啊 现在还没有把所有功能给做出来  还有这个里面的子窗口也是一个widget 直接实例的一个对象 手写的一个TextEditUI</p><p>最值得一提的是 在切换子窗口的代码部分 我做了一个挺有意思 但很能会影响速度的操作   (↓)</p><p><a href="https://imgtu.com/i/cLNl7Q"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/22/cLNl7Q.jpg" alt="cLNl7Q.jpg"></a></p><p>我觉得 还有一点可以优化的是 上面的信号断开 应该可以断掉全部的信号 不是从act层面 而是从子窗口的视角来断开信号</p><h3 id="附加的功能区组件"><a href="#附加的功能区组件" class="headerlink" title="附加的功能区组件"></a>附加的功能区组件</h3><p><a href="https://imgtu.com/i/cLNuX8"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/22/cLNuX8.jpg" alt="cLNuX8.jpg"></a></p><p>这是主界面   按键识别框是一个QKeySequenceEdit组件 我本来也是手写了一个的(没发现QtDesigner居然自带了一个) 不过逻辑代码太多太多 在重构软件之后就用了这个方便一点的</p><p>打印字符串 和 sleep 都是两个简单的LineEdit</p><p>Ducky转换使用的GitHub大佬的  我给改成了一个函数 原项目地址: <a href="https://github.com/toxydose/Duckyspark">https://github.com/toxydose/Duckyspark</a></p><p>右边的两个箭头 可以调出层叠界面 是用来直接开启一个badusb代码示例的 (↓)</p><p><a href="https://imgtu.com/i/cLNQ0g"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/22/cLNQ0g.jpg" alt="cLNQ0g.jpg"></a></p><p>还有这个点击选择输入也有一个独立窗口的 (↓)</p><p><a href="https://imgtu.com/i/cLNn6f"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/22/cLNn6f.jpg" alt="cLNn6f.jpg"></a></p><p>这是初始的样子 点击其他按键后会显示所有的按键 (↓)</p><p><a href="https://imgtu.com/i/cLN3kj"><img src= "/img/loading.gif" data-lazy-src="https://z3.ax1x.com/2021/04/22/cLN3kj.jpg" alt="cLN3kj.jpg"></a></p><p>所有的 按键按钮 都连接了一个指定信号 可以把按钮名字给打印到当前界面上方的LineEdit上 用的是find children方法 循环查找所有小孩 然后排除 “添加”，“清空”，”其它按键“这三个不需要映射的按钮</p><h2 id="使用方法及Digi规范"><a href="#使用方法及Digi规范" class="headerlink" title="使用方法及Digi规范"></a>使用方法及Digi规范</h2><p>软件界面还是挺简单直观的 想说一下咱们Digi开发板和Ducky的不同之处</p><p>我在软件开启时默认加载了一个Digi的头文件 想以此说明使用方法 后期也会做个检测 只有前三次开启时才会加载头文件 以后就放在层叠界面中</p><p>想看的时候再手动打开 头文件原项目地址: <a href="https://github.com/BesoBerlin/DigiKeyboard_DE/blob/master/DigiKeyboard.h">https://github.com/BesoBerlin/DigiKeyboard_DE/blob/master/DigiKeyboard.h</a></p><p>主要想介绍两个函数的使用 准确来时是四个   分别是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;sendKeyStroke: sends a key press AND release</span><br><span class="line">void sendKeyStroke(byte keyStroke) &#123;</span><br></pre></td></tr></table></figure><p>这里的 keystroke 参数指的是 这样的数值  (↓)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#define KEY_A       4</span><br><span class="line">#define KEY_B       5</span><br><span class="line">#define KEY_F11     68</span><br><span class="line">#define KEY_F12     69</span><br><span class="line">#define KEY_TAB    43</span><br><span class="line">#define KEY_SPACE   44</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;sendKeyStroke: sends a key press AND release with modifiers</span><br><span class="line">void sendKeyStroke(byte keyStroke, byte modifiers) &#123;</span><br></pre></td></tr></table></figure><p>这里的 modifiers 就和 keystroke不一样了 它是这样的  (↓)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#define MOD_CONTROL_LEFT    (1&lt;&lt;0)</span><br><span class="line">#define MOD_SHIFT_LEFT      (1&lt;&lt;1)</span><br><span class="line">#define MOD_ALT_LEFT        (1&lt;&lt;2)</span><br><span class="line">#define MOD_GUI_LEFT        (1&lt;&lt;3)</span><br><span class="line">#define MOD_CONTROL_RIGHT   (1&lt;&lt;4)</span><br><span class="line">#define MOD_SHIFT_RIGHT     (1&lt;&lt;5)</span><br><span class="line">#define MOD_ALT_RIGHT       (1&lt;&lt;6)</span><br><span class="line">#define MOD_GUI_RIGHT       (1&lt;&lt;7)</span><br></pre></td></tr></table></figure><p>这是全部的修饰按键了 也就是上面按键组合只能是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">​sendKeyStroke(KEY_A,MOD_CONTROL_LEFT）</span><br><span class="line">​sendKeyStroke(KEY_F11,MOD_ALT_LEFT）</span><br></pre></td></tr></table></figure><p>这种 而不能像下面这样 用两个普通的keystroke</p><pre><code>sendKeyStroke(KEY_E,KEY_ENTER)</code></pre><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;sendKeyPress: sends a key press only - no release</span><br><span class="line">&#x2F;&#x2F;to release the key, send again with keyPress&#x3D;0</span><br><span class="line">void sendKeyPress(byte keyPress) &#123;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;sendKeyPress: sends a key press only, with modifiers - no release</span><br><span class="line">&#x2F;&#x2F;to release the key, send again with keyPress&#x3D;0</span><br><span class="line">void sendKeyPress(byte keyPress, byte modifiers) &#123;</span><br></pre></td></tr></table></figure><p>参数的操作上面已经说过了 主要说下这个按下不松开 松开需要带着keypress参数为0 再发送一遍 是个什么操作</p><p>有两点 1.按下什么时候松开 2.能不能和其他按键组合按下 做成组合按键 举两个例子应该就能搞清楚了</p><pre><code>// 这是一直按下不松开sendKeyPress(KEY_A)// 按下并立即松开sendKeyPress(KEY_A,MOD_CONTROL_LEFT)sendKeyPress(0)// 按下2秒后再松开sendKeyPress(KEY_A)delay(2000)sendKeyPress(0)// 也可以不发送0参数 直接输入下一个按键函数就行了// 但不确定这样会不会有其他问题sendKeyPress(KEY_A)delay(2000)sendKeyPress(KEY_E,MOD_GUI_LEFT)</code></pre><p>接下来举两个组合按键的例子</p><pre><code>sendKeyPress(KEY_E)sendKeyPress(MOD_GUI_LEFT)sendKeyPress(0)// 这样就解决了 sendKeyStroke只能一个普通按键一个修饰按键的短板了// 还有下面这个例子sendKeyPress(KEY_1)sendKeyPress(MOD_SHIFT_LEFT)sendKeyPress(0)// 按下上档键和主键盘数字按键 这样就可以不用print函数就能输出符号了</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> PyQt5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python实现C-Primer-Puls第十七章复习题目和编程练习题的答案</title>
      <link href="posts/c5b196d.html"/>
      <url>posts/c5b196d.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为用Python实现《C Primer Plus第六版》第十七章复习题和编程练习题的答案<br>注: 第七题因初学python 所以删除节点的方式比较憨憨 现在 我们只需要恢复原函数<br>并把del temp 写为 temp.<strong>del</strong> 这样就是主动调用析构 而直接del是通过GC回收机制的被动调用析构函数</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>定义一种数据类型涉及哪些内容？</li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>为什么程序清单17.2 只能沿一个方向遍历链表？如何修改struct film定义才能沿两个方向遍历链表？</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>什么是ADT？</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>QueueIsEmpty()函数接受一个指向queue结构的指针作为参数，但是也可以将其编写成接受一个queue结构作为参数。这两种方式各有什么优缺点？</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>栈（stack）是链表系列的另一种数据形式。在栈中，只能在链表的一端添加和删除项，项被“压入”栈和“弹出”栈。因此，栈是一种LIFO（即后进先出last in,first out）结构。<br>a.设计一个栈ADT<br>b.为栈设计一个C编程接口，例如stack.h头文件</li></ol><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>在一个含有3个项的分类列表中，判断一个特定项是否在该列表中，用顺序查找和二叉查找方法分别需要最多多少次？当列表中有1023个项时分别是多少次？65535个项是分别是多少次？</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>假设一个程序用本章介绍的算法构造了一个储存单词的二叉查找树。<br>假设根据下面所列的顺序输入单词，请画出每种情况的树：<br>a.nice food roam dodge gate office wave<br>b.wave roam office nice gate food dodge<br>c.food dodge roam wave office gate nice<br>d.nice roam office food wave gate dodge</li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>考虑复习题7构造的二叉树，根据本章的算法，删除单词food之后，各树是什么样子？</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>修改程序清单17.2，让该程序既能正序也能逆序显示电影列表。一种方法是修改链表的定义，可以双向遍历链表。另一种方法是用递归。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot; 非ADT双向链表 可正反向及递归反向打印电影列表 &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Film</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;类结构&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.title = <span class="literal">None</span></span><br><span class="line">        self.rating = <span class="literal">None</span></span><br><span class="line">        self.prev = <span class="literal">None</span>  <span class="comment"># 记录 上一链</span></span><br><span class="line">        self.next = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Head = <span class="literal">None</span>  <span class="comment"># 链头</span></span><br><span class="line">Prev = <span class="literal">None</span>  <span class="comment"># 记录 链尾</span></span><br><span class="line">Current = <span class="literal">None</span>  <span class="comment"># 当前链</span></span><br><span class="line">print(<span class="string">&quot;Enter first movie title:&quot;</span>)</span><br><span class="line">title = input()</span><br><span class="line"><span class="keyword">while</span> title:</span><br><span class="line">    <span class="keyword">if</span> Head <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 链头为空的情况</span></span><br><span class="line">        Current = Film()</span><br><span class="line">        Head = Current</span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 不为空的情况</span></span><br><span class="line">        Current = Film()</span><br><span class="line">        Prev.next = Current  <span class="comment"># 引入了链尾</span></span><br><span class="line">        Current.prev = Prev  <span class="comment"># 加入上一链 因为有链尾的存在,所以上一链很简单</span></span><br><span class="line">    Current.title = title</span><br><span class="line">    print(<span class="string">&quot;Enter your rating &lt;0-10&gt;:&quot;</span>)</span><br><span class="line">    Current.rating = input()  <span class="comment"># 按照例题不能做私有变量保护</span></span><br><span class="line">    print(<span class="string">&quot;Enter next movie title (empty line to stop):&quot;</span>)</span><br><span class="line">    Prev = Current</span><br><span class="line">    title = input()</span><br><span class="line"><span class="keyword">if</span> Head <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    print(<span class="string">&quot;No data entered.&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;Here is the movie list:&quot;</span>)</span><br><span class="line">Current = Head</span><br><span class="line"><span class="keyword">while</span> Current <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">    print(<span class="string">&quot;Movie: %s Rating: %s&quot;</span> % (Current.title, Current.rating))</span><br><span class="line">    Current = Current.next</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;反向打印电影列表：&quot;</span>)</span><br><span class="line">Current = Prev</span><br><span class="line"><span class="keyword">while</span> Current.title:</span><br><span class="line">    print(<span class="string">&quot;Movie: %s Rating: %s&quot;</span> % (Current.title, Current.rating))</span><br><span class="line">    <span class="keyword">if</span> Current.prev <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        Current = Current.prev</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;递归实现反向打印电影列表：&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recursion</span>(<span class="params">anything</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;参数为链表 作用为逆序打印链表中项目的标题和等级&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> anything.next:</span><br><span class="line">        recursion(anything.next)</span><br><span class="line">    print(<span class="string">&quot;Movie: %s Rating: %s&quot;</span> % (anything.title, anything.rating))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Current = Head</span><br><span class="line">recursion(Current)</span><br><span class="line">print(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li><p>假设list.h（程序清单17.3）使用下面的list定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Node * head;    <span class="comment">/* 指向list的开头 */</span></span><br><span class="line">    Node * end;     <span class="comment">/* 指向list的末尾 */</span></span><br><span class="line">&#125; List;</span><br></pre></td></tr></table></figure><p>重写 list.c（程序清单 17.5）中的函数以适应新的定义，并通过films.c（程序清单 17.4）测试最终的代码。</p><p>解释一下 这样改 只是把list从指针改成了一个结构体 所以 各函数形参不用变 需要改变的使用List的代码<br>那么List原来是用来传递(指向)链表的 把用到的*plist 改成 plist.head 不就也是给了一个链头嘛<br>和film2相比 就是把链头和链尾做成了一个结构体 好处同样是在添加Item时可以直接借助end(prev)达到链尾<br>头文件中的几个函数都是需要对链表整体做一个检测之类的 遍历居多 所以这个end链尾暂时没有其二作用<br>这题太简单 其次是我看后面几题都没有要求写一个ADT的单向链表的 所以还是复习下python</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;ku.py 链表库&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>(<span class="params">object</span>):</span>     <span class="comment"># 因为GC机制所以EmptyTheList的“形式工作”就不写了</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;链表节点&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.title = &#123;&#125;</span><br><span class="line">        self.rating = <span class="number">0</span></span><br><span class="line">        self.next = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Film</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;一个可以存储电影和电影评级的链表&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化链头&quot;&quot;&quot;</span></span><br><span class="line">        self.__head = <span class="literal">None</span></span><br><span class="line">        self.__prev = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isempty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表是否为空 如是则返回1&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.__head <span class="keyword">is</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isfull</span>():</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表是否已满 通过能否成功创建实例来判断 如是则返回1&quot;&quot;&quot;</span></span><br><span class="line">        item = Node()</span><br><span class="line">        <span class="keyword">return</span> item <span class="keyword">is</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">itemcount</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表中有多少节点 返回一个整数数值&quot;&quot;&quot;</span></span><br><span class="line">        link = self.__head</span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> link:</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            link = link.next</span><br><span class="line">        <span class="keyword">return</span> count</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">additem</span>(<span class="params">self, node</span>):</span>  <span class="comment"># 传过来一个现成的node 那么直接添加下来</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在链尾中添加一个节点 执行完毕返回0&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.__head <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 如果链头为空</span></span><br><span class="line">            self.__head = node</span><br><span class="line">            self.__prev = self.__head</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.__prev.next = node  <span class="comment"># 链尾添加node</span></span><br><span class="line">            self.__prev = node  <span class="comment"># 更新链尾</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">traverse</span>(<span class="params">self, function</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;将传递来的函数作用于链表中的每一个节点&quot;&quot;&quot;</span></span><br><span class="line">        link = self.__head</span><br><span class="line">        <span class="keyword">while</span> link:</span><br><span class="line">            function(link)  <span class="comment"># link就是一个node 没必要传入link.title和。。。</span></span><br><span class="line">            link = link.next</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;测试ku&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> ku <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showmovies</span>(<span class="params">node</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;打印node的两个属性&quot;&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;Movie: %s Rating: %s&quot;</span> % (node.title, node.rating))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Link = Film()</span><br><span class="line"><span class="keyword">if</span> Link.isfull():</span><br><span class="line">    print(<span class="string">&quot;No memory available! Bye!&quot;</span>)</span><br><span class="line">    exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Enter first movie title:&quot;</span>)</span><br><span class="line">movie = Node()</span><br><span class="line">movie.title = input()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> movie.title:</span><br><span class="line">    print(<span class="string">&quot;Enter your rating &lt;0-10&gt;:&quot;</span>)</span><br><span class="line">    movie.rating = input()</span><br><span class="line">    <span class="keyword">if</span> Link.additem(movie):</span><br><span class="line">        print(<span class="string">&quot;Problem allocating memory&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> Link.isfull():</span><br><span class="line">        print(<span class="string">&quot;The list is now full&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">&quot;Enter next movie title (empty line to stop):&quot;</span>)</span><br><span class="line">    movie = Node()</span><br><span class="line">    movie.title = input()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> Link.isempty():</span><br><span class="line">    print(<span class="string">&quot;No data entered. &quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;Here is the movie list:&quot;</span>)</span><br><span class="line">    Link.traverse(showmovies)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;You entered %d movies.&quot;</span> % (Link.itemcount()))</span><br><span class="line">print(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li><p>假设list.h（程序清单17.3）使用下面的list定义：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">list</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    Item entries[MAXSIZE]; <span class="comment">/* 内含项的数组 */</span></span><br><span class="line">    <span class="keyword">int</span> items;             <span class="comment">/* list中的项数 */</span></span><br><span class="line">&#125; List;</span><br></pre></td></tr></table></figure><p>重写 list.c（程序清单 17.5）中的函数以适应新的定义，并通过films.c（程序清单 17.4）测试最终的代码。</p><p>做到最后工作才想起来 list就是一个完美链表<br>等于直接操作结构体中的数组 对于链表属性full empty这些items可以搞定<br>addanywhere和delanywhere 通过了测试 因list太智能 有些代码只能被简化</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;链表库 ku.py &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;为了Film干净一点就在这做了 有结构体内味了&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;生成一个用来存储电影标题和电影评级的二维列表&quot;&quot;&quot;</span></span><br><span class="line">        self.title = &#123;&#125;</span><br><span class="line">        self.rating = <span class="number">0</span></span><br><span class="line">        self.result = [self.title, self.rating]  <span class="comment"># node是一个列表 表中有两个变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Film</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;用来处理node的类&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化链头&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># self.title = &#123;&#125;</span></span><br><span class="line">        <span class="comment"># self.rating = 0</span></span><br><span class="line">        <span class="comment"># self.node = [self.title, self.rating]</span></span><br><span class="line">        self.nodes = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">10</span>)]  <span class="comment"># 列表推导式 在列表中生成100个列表</span></span><br><span class="line">        <span class="comment"># self.nodes = []</span></span><br><span class="line">        self.items = <span class="number">0</span>  <span class="comment"># 记录列表里有多少项目</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isempty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表是否为空 如是则返回1&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> len(self.nodes) == <span class="number">0</span></span><br><span class="line">        <span class="comment"># return self.items == 0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isfull</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表是否已满 通过能否成功创建实例来判断 如是则返回1&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> len(self.nodes) == <span class="number">100</span></span><br><span class="line">        <span class="comment"># return self.items == 100</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">itemcount</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;链表中有多少节点 返回一个整数数值&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> len(self.nodes)</span><br><span class="line">        <span class="comment"># return self.items</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">additem</span>(<span class="params">self, node</span>):</span>  <span class="comment"># 传过来一个现成的node 那么直接添加下来</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在链尾中添加一个节点 执行完毕返回0&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># node.result[0] = node.title</span></span><br><span class="line">        <span class="comment"># node.result[1] = node.rating</span></span><br><span class="line">        <span class="comment"># self.nodes[self.items] = node.result[:]</span></span><br><span class="line"></span><br><span class="line">        self.nodes.append(node)</span><br><span class="line">        self.items += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">traverse</span>(<span class="params">self, function</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;将传递来的函数作用于链表中的每一个节点&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, self.items):</span><br><span class="line">            function(self.nodes[i])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这两个函数不能写的原因就是增加or删除list元素后会自动排放 我们给一个占位元素就好了</span></span><br><span class="line"><span class="comment"># 这样也算是把原理给写了出来 首先add是index右边的元素向后移 这里给一个切片</span></span><br><span class="line"><span class="comment"># 改的意义不是太大 因为这个切片光芒太耀眼 最重要的数组元素操作也给整简单了</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addanywhere</span>(<span class="params">self, index, node</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;从任意位置插入数值&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># self.nodes.insert(index, node)</span></span><br><span class="line">        node.result[<span class="number">0</span>] = node.title</span><br><span class="line">        node.result[<span class="number">1</span>] = node.rating</span><br><span class="line">        self.nodes[index + <span class="number">1</span>:] = self.nodes[index:] <span class="comment"># 直接覆盖了一下 那么这个index就是一个占位元素</span></span><br><span class="line">        self.nodes[index] = node.result[:]  <span class="comment"># 上面那一步做完后 就算是清理出了index的位置 然后存放node</span></span><br><span class="line">        self.items += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delanywhere</span>(<span class="params">self, index</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;从任意位置删除数值&quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># del self.nodes[index]</span></span><br><span class="line">        self.nodes[index] = <span class="number">0</span>  <span class="comment"># 这一步表示清除</span></span><br><span class="line">        self.nodes[index:] = self.nodes[index + <span class="number">1</span>:]  <span class="comment"># 然后index后的元素全部前移一个</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;测试ku&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> ku <span class="keyword">import</span> *    <span class="comment"># 和第二题一样</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">showmovies</span>(<span class="params">node</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;打印node的两个属性&quot;&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;Movie: %s Rating: %s&quot;</span> % (node.title, node.rating))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Link = Film()</span><br><span class="line"><span class="keyword">if</span> Link.isfull():</span><br><span class="line">    print(<span class="string">&quot;No memory available! Bye!&quot;</span>)</span><br><span class="line">    exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Enter first movie title:&quot;</span>)</span><br><span class="line">movie = Node()</span><br><span class="line">movie.title = input()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> movie.title:</span><br><span class="line">    print(<span class="string">&quot;Enter your rating &lt;0-10&gt;:&quot;</span>)</span><br><span class="line">    movie.rating = input()</span><br><span class="line">    <span class="keyword">if</span> Link.additem(movie):</span><br><span class="line">        print(<span class="string">&quot;Problem allocating memory&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> Link.isfull():</span><br><span class="line">        print(<span class="string">&quot;The list is now full&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(<span class="string">&quot;Enter next movie title (empty line to stop):&quot;</span>)</span><br><span class="line">    movie = Node()</span><br><span class="line">    movie.title = input()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> Link.isempty():</span><br><span class="line">    print(<span class="string">&quot;No data entered. &quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;Here is the movie list:&quot;</span>)</span><br><span class="line">    Link.traverse(showmovies)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;You entered %d movies.&quot;</span> % (Link.itemcount()))</span><br><span class="line">print(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>重写mall.c（程序清单17.7），用两个队列模拟两个摊位。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">那下一个版本就直接问要几个摊位 升级这个现在挺简单的</span></span><br><span class="line"><span class="string">这个摊位变成两个 这个数据就有点小离谱  平均队列大小和等待时长居然不依靠数据提升上去</span></span><br><span class="line"><span class="string">后来我发现 是因为用户咨询的时间太少了  把第二个摊位关闭掉就会符合这个程序需要的环境了</span></span><br><span class="line"><span class="string">两点 队列上限10 用户咨询时长 3cycle   使用代码大概有30行 剩下都是类 方法和函数</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> myqueue <span class="keyword">import</span> Queue, Node</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">newcustomer</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;&quot;判断是否有新顾客来&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> (random.randint(<span class="number">0</span>, <span class="number">32767</span>) * x / <span class="number">32767</span>) &lt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">customertime</span>(<span class="params">when</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;给新顾客设定参数 咨询时间和来的时间&quot;&quot;&quot;</span></span><br><span class="line">    cust = Node()</span><br><span class="line">    cust.processtime = random.randint(<span class="number">0</span>, <span class="number">32767</span>) % <span class="number">3</span> + <span class="number">1</span></span><br><span class="line">    cust.arrive = when</span><br><span class="line">    <span class="keyword">return</span> cust</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stall</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;摊位我给封装了&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, name</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化摊位&quot;&quot;&quot;</span></span><br><span class="line">        self.name = name  <span class="comment"># 这个实例的名称 方便print</span></span><br><span class="line">        self.line = Queue()</span><br><span class="line">        self.temp = Node()</span><br><span class="line">        self.turnaways = <span class="number">0</span>  <span class="comment"># 因这个摊位已满而被拒绝的顾客数量</span></span><br><span class="line">        self.customers = <span class="number">0</span>  <span class="comment"># 加入摊位的顾客数量</span></span><br><span class="line">        self.served = <span class="number">0</span>  <span class="comment"># 咨询过这个摊位的顾客数量</span></span><br><span class="line">        self.wait_time = <span class="number">0</span>  <span class="comment"># 顾客被踢出摊位的时间</span></span><br><span class="line">        self.sum_line = <span class="number">0</span>  <span class="comment"># 累计的队列总长</span></span><br><span class="line">        self.line_wait = <span class="number">0</span>  <span class="comment"># 队列累计的等待时间</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addcustomers</span>(<span class="params">self, c_cycle</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;添加一个新顾客&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.line.isfull():</span><br><span class="line">            self.turnaways += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.customers += <span class="number">1</span></span><br><span class="line">            self.temp = customertime(c_cycle)</span><br><span class="line">            self.line.append(self.temp)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delcustomers</span>(<span class="params">self, c_cycle</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;循环更新数据以及踢出咨询完毕的客户&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.wait_time &lt;= <span class="number">0</span> <span class="keyword">and</span> <span class="keyword">not</span> self.line.isempty():</span><br><span class="line">            self.line.delete(self.temp)</span><br><span class="line">            self.wait_time = self.temp.processtime</span><br><span class="line">            self.line_wait += (c_cycle - self.temp.arrive)</span><br><span class="line">            self.served += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.wait_time &gt; <span class="number">0</span>:</span><br><span class="line">            self.wait_time -= <span class="number">1</span></span><br><span class="line">        self.sum_line += self.line.itemcount()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printachievement</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;打印这个摊位的所有信息&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.customers &gt; <span class="number">0</span>:  <span class="comment"># 不判断两个摊位全部打印</span></span><br><span class="line">            print(<span class="string">&quot;---------------%s------------------&quot;</span> % self.name)</span><br><span class="line">            print(<span class="string">&quot;customers accepted: %s&quot;</span> % self.customers)</span><br><span class="line">            print(<span class="string">&quot;customers served: %s&quot;</span> % self.served)</span><br><span class="line">            print(<span class="string">&quot;turnaways: %s&quot;</span> % self.turnaways)</span><br><span class="line">            print(<span class="string">&quot;average queue size: %.2f&quot;</span> %</span><br><span class="line">                  (float(self.sum_line) / cyclelimit))</span><br><span class="line">            print(<span class="string">&quot;average wait time: %.2f minutes&quot;</span> %</span><br><span class="line">                  (float(self.line_wait) / self.served))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;No customers!&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">min_per_hr = <span class="number">60.0</span>  <span class="comment"># 顾客到达的平均间隔时间</span></span><br><span class="line">min_per_cust = <span class="number">0.0</span>  <span class="comment"># 顾客到来的平均时间</span></span><br><span class="line">hours = <span class="number">0</span>  <span class="comment"># 模拟的小时数</span></span><br><span class="line">perhour = <span class="number">0</span>  <span class="comment"># 每小时平均多少位顾客</span></span><br><span class="line">cycle = <span class="number">0</span>  <span class="comment"># 循环计数器</span></span><br><span class="line">cyclelimit = <span class="number">0</span>  <span class="comment"># 计数器的上限</span></span><br><span class="line">john = Stall(<span class="string">&quot;john&quot;</span>)</span><br><span class="line">david = Stall(<span class="string">&quot;david&quot;</span>)  <span class="comment"># 两个摊位</span></span><br><span class="line"></span><br><span class="line">random.seed(<span class="literal">None</span>)  <span class="comment"># 缺省值为当前系统时间</span></span><br><span class="line">print(<span class="string">&quot;Case Study: Sigmund Lander&#x27;s Advice Booth&quot;</span>)</span><br><span class="line">print(<span class="string">&quot;Enter the number of simulation hours:&quot;</span>)</span><br><span class="line">hours = input()</span><br><span class="line">cyclelimit = min_per_hr * float(hours)</span><br><span class="line">print(<span class="string">&quot;Enter the average number of customers per hour:&quot;</span>)</span><br><span class="line">perhour = input()</span><br><span class="line">min_per_cust = min_per_hr / float(perhour)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> cycle <span class="keyword">in</span> range(<span class="number">0</span>, int(cyclelimit)):</span><br><span class="line">    <span class="keyword">if</span> newcustomer(min_per_cust):  <span class="comment"># 如果当前cycle这一分钟有顾客来</span></span><br><span class="line">        <span class="keyword">if</span> john.customers &lt;= david.customers:</span><br><span class="line">            john.addcustomers(cycle)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            david.addcustomers(cycle)</span><br><span class="line">    john.delcustomers(cycle)</span><br><span class="line">    david.delcustomers(cycle)</span><br><span class="line"></span><br><span class="line">john.printachievement()</span><br><span class="line">david.printachievement()</span><br><span class="line">print(<span class="string">&quot;Bye!&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;队列模块&quot;&quot;&quot;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Node</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;队列节点&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化队列节点&quot;&quot;&quot;</span></span><br><span class="line">        self.arrive = <span class="number">0</span></span><br><span class="line">        self.processtime = <span class="number">0</span></span><br><span class="line">        self.next = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Queue</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;队列类&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化队列首尾&quot;&quot;&quot;</span></span><br><span class="line">        self.front = <span class="literal">None</span></span><br><span class="line">        self.rear = <span class="literal">None</span></span><br><span class="line">        self.items = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isfull</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检测队列是否已满&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.items &gt;= <span class="number">10</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isempty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检测队列是否为空&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.items == <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">itemcount</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;返回队列项目总数&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.items</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">append</span>(<span class="params">self, node</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;添加队列节点&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.isempty():</span><br><span class="line">            self.front = node</span><br><span class="line">            self.rear = node</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.rear.next = node</span><br><span class="line">        self.rear = node</span><br><span class="line">        self.items += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span>(<span class="params">self, pitem</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;删除队列节点&quot;&quot;&quot;</span></span><br><span class="line">        pitem = self.front</span><br><span class="line">        self.front = self.front.next</span><br><span class="line">        self.items -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.isempty():  <span class="comment"># 如果队头没了 那队尾也就没了</span></span><br><span class="line">            self.rear = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">return</span> pitem</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个程序，提示用户输入一个字符串。然后该程序把该字符串的字符逐个压入一个栈（参见复习题5），然后从栈中弹出这些字符，并显示它们。结果显示为该字符串的逆序。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;我的栈库&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Item</span>(<span class="params">object</span>):</span>  <span class="comment"># 我这个模块并没有做到node直接添加 做到了就是项目通用的效果</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;项目类&quot;&quot;&quot;</span>  <span class="comment"># 反正c也不行 有两点 传参使用和push添加的时候</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span>  <span class="comment"># 所以就像最后的二叉树一样 需要变动的有很多</span></span><br><span class="line">        self.character = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Stack</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;栈类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化栈&quot;&quot;&quot;</span></span><br><span class="line">        self.temp = Item()</span><br><span class="line">        self.array = [self.temp <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">100</span>)]</span><br><span class="line">        self.top = <span class="number">0</span>  <span class="comment"># 第一个空位的索引</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isfull</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        操作：　　　  检查栈是否已满</span></span><br><span class="line"><span class="string">        前提条件：　　ps 指向之前已被初始化的栈</span></span><br><span class="line"><span class="string">        后置条件：　　如果栈已满，该函数返回true；否则，返回false</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.top &gt;= <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isempty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        操作：　　　  检查栈是否为空</span></span><br><span class="line"><span class="string">        前提条件：　　ps 指向之前已被初始化的栈</span></span><br><span class="line"><span class="string">        后置条件：　　如果栈为空，该函数返回true；否则，返回false</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.top == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        操作：　　　 把项压入栈顶</span></span><br><span class="line"><span class="string">        前提条件:　　ps 指向之前已被初始化的栈　item 是待压入栈顶的项</span></span><br><span class="line"><span class="string">        后置条件:　　如果栈不满，把 item 放在栈顶，该函数返回ture；　</span></span><br><span class="line"><span class="string">                     否则，栈不变，该函数返回 false</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.isfull():</span><br><span class="line">            self.array[self.top] = item.character</span><br><span class="line">            self.top += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        操作：　　　 从栈顶删除项</span></span><br><span class="line"><span class="string">        前提条件:  　ps 指向之前已被初始化的栈</span></span><br><span class="line"><span class="string">        后置条件:　　如果栈不为空，把栈顶的item拷贝到*pitem，</span></span><br><span class="line"><span class="string">                    删除栈顶的item，该函数返回ture；</span></span><br><span class="line"><span class="string">                    如果删除操作之前栈为空，栈不变，该函数返回false</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self.isempty():</span><br><span class="line">            item = self.array[self.top - <span class="number">1</span>]</span><br><span class="line">            self.array[self.top - <span class="number">1</span>] = <span class="literal">None</span>  <span class="comment"># 这样就算清除了</span></span><br><span class="line">            self.top -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> item</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;测试栈&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> mystack <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">stack = Stack()  <span class="comment"># 在这个类里存一个数组 自定义低级的那个</span></span><br><span class="line">node = Item()  <span class="comment"># Node的结构 里面就一个character  用来存一个字符</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> stack.isfull():</span><br><span class="line">    print(<span class="string">&quot;No memory available! Bye!&quot;</span>)</span><br><span class="line">    exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;Enter an string&quot;</span>)</span><br><span class="line"><span class="comment"># node.character = input()  # char用来接收分解字符</span></span><br><span class="line">nodestring = input()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> character <span class="keyword">in</span> nodestring:</span><br><span class="line">    <span class="comment"># 现在开始压入栈顶  压进去 这边要bool 判断就行了</span></span><br><span class="line">    <span class="comment"># 弹出那边用 返回值 然后打印出来</span></span><br><span class="line">    node.character = character</span><br><span class="line">    stack.push(node)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> stack.isempty():</span><br><span class="line">    character = <span class="string">&quot;&quot;</span></span><br><span class="line">    stack.pop(character)</span><br><span class="line">    print(character)</span><br><span class="line">    <span class="comment"># ！！！其实这里还是让函数返回bool 但是我传过去的</span></span><br><span class="line">    <span class="comment"># 变量取一个指针传值的作用</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个函数接受 3 个参数：一个数组名（内含已排序的整数）、该数组的元素个数和待查找的整数。如果待查找的整数在数组中，那么该函数返回 1；如果该数不在数组中，该函数则返回 0。用二分查找法实现。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;二分查找 函数只给了两个参数 因为python有点强大&quot;&quot;&quot;</span></span><br><span class="line">nums = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">100</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bin_search</span>(<span class="params">num_s, num_</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;二分查找函数参数为要查找的列表和要查找的数字&quot;&quot;&quot;</span></span><br><span class="line">    num_ = int(num_)</span><br><span class="line">    low = <span class="number">0</span></span><br><span class="line">    high = len(num_s) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> low &lt;= high:</span><br><span class="line">        middle = (low + high) // <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> num_ == num_s[middle]:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> num_s[middle] &gt; num_:</span><br><span class="line">            high = middle - <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># num &gt; miidle</span></span><br><span class="line">            low = middle + <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">num = input(<span class="string">&quot;Please enter a number\n&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> bin_search(nums, num):</span><br><span class="line">    print(<span class="string">&quot;True&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&quot;False&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序，打开和读取一个文本文件，并统计文件中每个单词出现的次数。用改进的二叉查找树储存单词及其出现的次数。程序在读入文件后，会提供一个有3个选项的菜单。第1个选项是列出所有的单词和出现的次数。第2个选项是让用户输入一个单词，程序报告该单词在文件中出现的次数。第3个选项是退出。</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;二叉树的库&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Item</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;树叶&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.char = <span class="string">&quot;&quot;</span></span><br><span class="line">        self.count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trnode</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;树枝&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, item=None</span>):</span>  <span class="comment"># 树叶加树枝时 给个初始值</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化树枝&quot;&quot;&quot;</span></span><br><span class="line">        self.item = item  <span class="comment"># 一个初始化替代了 makenode</span></span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pair</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;非公开类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.parent = <span class="literal">None</span></span><br><span class="line">        self.child = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;树&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化树&quot;&quot;&quot;</span></span><br><span class="line">        self.root = <span class="literal">None</span></span><br><span class="line">        self.size = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isempty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检测树是否为空&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isfull</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检测树是否已满&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.size == <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">itemcount</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;返回树的大小&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.size</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">additem</span>(<span class="params">self, pi</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;添加一个树叶 参数pi是一个Item&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 在所有事情开始前 要做一个 直接统计单词次数</span></span><br><span class="line">        <span class="keyword">if</span> self.intree(pi):  <span class="comment"># 如果树中有这个叶子</span></span><br><span class="line">            <span class="comment"># 找到这个树枝的位置 然后count+1</span></span><br><span class="line">            look = seekitem(pi, self.root)</span><br><span class="line">            <span class="comment"># 不出错look就是那个树枝</span></span><br><span class="line">            look.child.item.count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 下面是 如果是新单词</span></span><br><span class="line">        <span class="keyword">if</span> self.isfull():</span><br><span class="line">            print(<span class="string">&quot;Tree is full&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        new_node = Trnode(pi)  <span class="comment"># 创建了一个完整树枝</span></span><br><span class="line">        <span class="keyword">if</span> new_node <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            print(<span class="string">&quot;Couldn&#x27;t create node&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        self.size += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.root = new_node</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            addnode(new_node, self.root)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">traverse</span>(<span class="params">self, pfun</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;将pfun这个函数作用于每个树叶&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            inorder(self.root, pfun)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteall</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;删除所有树叶和树枝&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            deleteallnodes(self.root)</span><br><span class="line">            self.root = <span class="literal">None</span></span><br><span class="line">            self.size = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteitem</span>(<span class="params">self, pi</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在树中删除pi这个树叶&quot;&quot;&quot;</span></span><br><span class="line">        look = seekitem(pi, self.root)</span><br><span class="line">        <span class="keyword">if</span> look.child <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> look.parent <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 可能是技术问题 无法将deletenode作为一个方法直接调用</span></span><br><span class="line">            <span class="comment"># deletenode(self.root)               # 传入树枝</span></span><br><span class="line">            <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                self.root = self.root.right</span><br><span class="line">            <span class="keyword">elif</span> self.root.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                self.root = self.root.left</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                temp = self.root.left</span><br><span class="line">                <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    temp = temp.right</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                temp.right = self.root.right</span><br><span class="line">                temp = self.root</span><br><span class="line">                self.root = self.root.left</span><br><span class="line">        <span class="keyword">elif</span> look.parent.left == look.child:  <span class="comment"># 没有直接删除</span></span><br><span class="line">            <span class="comment"># deletenode(look.parent.left)    # 只能动root的指向</span></span><br><span class="line">            <span class="keyword">if</span> look.parent.left.left <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                look.parent.left = look.parent.left.right</span><br><span class="line">            <span class="keyword">elif</span> look.parent.left.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                look.parent.left = look.parent.left.left</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                temp = look.parent.left.left</span><br><span class="line">                <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    temp = temp.right</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                temp.right = look.parent.left.right</span><br><span class="line">                temp = look.parent.left</span><br><span class="line">                look.parent.left = look.parent.left.left</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># look.parent.right == look.child</span></span><br><span class="line">            <span class="comment"># deletenode(look.parent.right)</span></span><br><span class="line">            <span class="keyword">if</span> look.parent.right.left <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                look.parent.right = look.parent.right.right</span><br><span class="line">            <span class="keyword">elif</span> look.parent.right.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                look.parent.right = look.parent.right.left</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                temp = look.parent.right.left</span><br><span class="line">                <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    temp = temp.right</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                temp.right = look.parent.right.right</span><br><span class="line">                temp = look.parent.right</span><br><span class="line">                look.parent.right = look.parent.right.left</span><br><span class="line">        self.size -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intree</span>(<span class="params">self, pi</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检查树中是否有pi这个树叶&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> seekitem(pi, self.root).child <span class="keyword">is</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printcount</span>(<span class="params">self, pi</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;定制方法 打印pi的count&quot;&quot;&quot;</span></span><br><span class="line">        look = seekitem(pi, self.root)</span><br><span class="line">        <span class="keyword">if</span> look.child <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            print(<span class="string">&quot;There is no such word&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;There are %d 个 %s words&quot;</span> %</span><br><span class="line">                  (look.child.item.count, look.child.item.char))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deletenode</span>(<span class="params">ptr</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;私有函数 删除ptr指向的节点&quot;&quot;&quot;</span></span><br><span class="line">    temp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> ptr.left <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 删除右节点</span></span><br><span class="line">        temp = ptr</span><br><span class="line">        ptr = ptr.right</span><br><span class="line">        <span class="keyword">del</span> temp</span><br><span class="line">    <span class="keyword">elif</span> ptr.right <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 删除左节点</span></span><br><span class="line">        temp = ptr</span><br><span class="line">        ptr = ptr.left</span><br><span class="line">        <span class="keyword">del</span> temp</span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 删除两个节点</span></span><br><span class="line">        temp = ptr.left</span><br><span class="line">        <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            temp = temp.right</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        temp.right = ptr.right</span><br><span class="line">        temp = ptr</span><br><span class="line">        ptr = ptr.left</span><br><span class="line">        <span class="keyword">del</span> temp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteallnodes</span>(<span class="params">root</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;程序结束 删除所有节点&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        pright = root.right</span><br><span class="line">        deleteallnodes(root.left)</span><br><span class="line">        root = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">del</span> root</span><br><span class="line">        deleteallnodes(pright)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inorder</span>(<span class="params">root, pfun</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;遍历树 并将pfun作用于每个item&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        inorder(root.left, pfun)</span><br><span class="line">        pfun(root.item)</span><br><span class="line">        inorder(root.right, pfun)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seekitem</span>(<span class="params">pi, ptree</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;在树中查找pi&quot;&quot;&quot;</span></span><br><span class="line">    look = Pair()</span><br><span class="line">    look.parent = <span class="literal">None</span></span><br><span class="line">    look.child = ptree</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> look.child <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 空树</span></span><br><span class="line">        <span class="keyword">return</span> look</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> look.child <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">if</span> toleft(pi, look.child.item):  <span class="comment"># 左节点对比</span></span><br><span class="line">            look.parent = look.child</span><br><span class="line">            look.child = look.child.left</span><br><span class="line">        <span class="keyword">elif</span> toright(pi, look.child.item):  <span class="comment"># 左节点对比</span></span><br><span class="line">            look.parent = look.child</span><br><span class="line">            look.child = look.child.right</span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 这个因情况而定</span></span><br><span class="line">            <span class="keyword">break</span>  <span class="comment"># 这里是没有这个item</span></span><br><span class="line">    <span class="keyword">return</span> look</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addnode</span>(<span class="params">new_node, root</span>):</span>  <span class="comment"># 递归</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;root树中添加一个new_node节点&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> toleft(new_node.item, root.item):</span><br><span class="line">        <span class="keyword">if</span> root.left <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            root.left = new_node</span><br><span class="line">            root.left.item.count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            addnode(new_node, root.left)</span><br><span class="line">    <span class="keyword">elif</span> toright(new_node.item, root.item):</span><br><span class="line">        <span class="keyword">if</span> root.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            root.right = new_node</span><br><span class="line">            root.right.item.count += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            addnode(new_node, root.right)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;location error in addnode()&quot;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toleft</span>(<span class="params">item1, item2</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;对比item 决定树叶位置&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> item1.char &lt; item2.char:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toright</span>(<span class="params">item1, item2</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;对比item 决定树叶位置&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> item1.char &gt; item2.char:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;测试库&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> mytree <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">fr = open(<span class="string">&quot;123.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"></span><br><span class="line">index = <span class="number">0</span></span><br><span class="line">word = <span class="string">&quot;&quot;</span></span><br><span class="line">wordlist = []</span><br><span class="line">TwoT = Tree()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fr.readlines():  <span class="comment"># 把一行读取到line中 然后过滤line   取出一个单词append到列表中 逐次存入树中</span></span><br><span class="line">    line = line.strip(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">    line = list(line)</span><br><span class="line">    <span class="keyword">while</span> index &lt; len(line) <span class="keyword">and</span> line[index]:</span><br><span class="line">        <span class="keyword">if</span> line[index] != <span class="string">&quot; &quot;</span>:  <span class="comment"># 空格以外的字符</span></span><br><span class="line">            word += line[index]</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:  <span class="comment"># 遇到空格</span></span><br><span class="line">            wordlist.append(word)</span><br><span class="line">            word = <span class="string">&quot;&quot;</span></span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> len(line) != <span class="number">0</span>:  <span class="comment"># 遇到空行</span></span><br><span class="line">        wordlist.append(word)</span><br><span class="line">        index = <span class="number">0</span></span><br><span class="line">        word = <span class="string">&quot;&quot;</span></span><br><span class="line">fr.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> wordlist:</span><br><span class="line">    temp = Item()</span><br><span class="line">    temp.char = word</span><br><span class="line">    <span class="keyword">if</span> TwoT.isfull():</span><br><span class="line">        print(<span class="string">&quot;No data space&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        TwoT.additem(temp)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">menu</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;菜单函数&quot;&quot;&quot;</span></span><br><span class="line">    print(</span><br><span class="line">        <span class="string">&quot;\n-----------------------------------------------------------------------------------\n&quot;</span></span><br><span class="line">        <span class="string">&quot;l) 列出所有的单词和出现的次数  i) 输入一个单词，程序报告该单词在文件中出现的次数  q)退出\n&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ch = input()</span><br><span class="line">        <span class="keyword">while</span> ch:</span><br><span class="line">            ch.lower()</span><br><span class="line">            <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&quot;liq&quot;</span>:  <span class="comment"># 判断</span></span><br><span class="line">                print(<span class="string">&quot;Please enter an l, i, or q:&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            ch = input()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        ch = <span class="string">&quot;q&quot;</span></span><br><span class="line">    <span class="keyword">return</span> ch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printitem</span>(<span class="params">citem</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;定制函数 打印item&quot;&quot;&quot;</span></span><br><span class="line">    print(<span class="string">&quot;There are %3d 个 %9s words&quot;</span> % (citem.count, citem.char))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">IASC</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;input and scan count&quot;&quot;&quot;</span></span><br><span class="line">    temp_ = Item()</span><br><span class="line">    word_ = input(<span class="string">&quot;Please enter a word:\n&quot;</span>)</span><br><span class="line">    temp_.char = word_</span><br><span class="line">    TwoT.printcount(temp_)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">choice = menu()</span><br><span class="line"><span class="keyword">while</span> choice != <span class="string">&quot;q&quot;</span>:</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="string">&quot;l&quot;</span>:</span><br><span class="line">        TwoT.traverse(printitem)</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">&quot;i&quot;</span>:</span><br><span class="line">        IASC()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;Switching error&quot;</span>)</span><br><span class="line">    choice = menu()</span><br><span class="line">print(<span class="string">&quot;Bye.&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>修改宠物俱乐部程序，把所有同名的宠物都储存在同一个节点中。当用户选择查找宠物时，程序应询问用户该宠物的名字，然后列出该名字的所有宠物（及其种类）。<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;二叉树&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Item</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;树叶类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化树叶&quot;&quot;&quot;</span></span><br><span class="line">        self.petname = <span class="string">&quot;&quot;</span></span><br><span class="line">        self.petkind = <span class="string">&quot;&quot;</span></span><br><span class="line">        self.petkinds = set()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">printitem</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;内置小方法 方便打印&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">for</span> kind <span class="keyword">in</span> self.petkinds:</span><br><span class="line">            print(<span class="string">&quot;petname：%s petkind：%s&quot;</span> % (self.petname, kind))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trnode</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;树枝&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, item=None</span>):</span>  <span class="comment"># 树叶加树枝时 可以给个初始值</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化树枝&quot;&quot;&quot;</span></span><br><span class="line">        self.item = item  <span class="comment"># 一个初始化替代了 makenode</span></span><br><span class="line">        self.left = <span class="literal">None</span></span><br><span class="line">        self.right = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Pair</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;非公开类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.parent = <span class="literal">None</span></span><br><span class="line">        self.child = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tree</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;树类&quot;&quot;&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化树&quot;&quot;&quot;</span></span><br><span class="line">        self.root = <span class="literal">None</span></span><br><span class="line">        self.size = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isempty</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检测树是否为空&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isfull</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检测树是否已满&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.size == <span class="number">10</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">itemcount</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;返回树的大小&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.size</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">additem</span>(<span class="params">self, pi</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;添加一个树叶 参数pi是一个Item&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> pi.petname.isalpha() <span class="keyword">or</span> <span class="keyword">not</span> pi.petkind.isalpha():</span><br><span class="line">            print(<span class="string">&quot;you mother fuck&quot;</span>)</span><br><span class="line">            exit(<span class="number">1</span>)  <span class="comment"># pi的字符串是不是空的</span></span><br><span class="line">        <span class="keyword">if</span> self.intree(pi):</span><br><span class="line">            look = seekitem(pi, self.root)</span><br><span class="line">            look.child.item.petkinds.add(pi.petkind)  <span class="comment"># 如果存在即追加到集合中</span></span><br><span class="line">            self.size += <span class="number">1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> self.isfull():</span><br><span class="line">            print(<span class="string">&quot;Tree is full&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        new_node = Trnode(pi)  <span class="comment"># 创建了一个完整树枝</span></span><br><span class="line">        <span class="keyword">if</span> new_node <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            print(<span class="string">&quot;Couldn&#x27;t create node&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        self.size += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            self.root = new_node</span><br><span class="line">            self.root.item.petkinds.add(new_node.item.petkind)</span><br><span class="line">            <span class="comment"># kinds是由item中的kind组成的 逐次追加 这个树根追加</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            addnode(new_node, self.root)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">intree</span>(<span class="params">self, pi</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;检查树中是否有pi这个树叶&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">not</span> seekitem(pi, self.root).child <span class="keyword">is</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">traverse</span>(<span class="params">self, pfun</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;将function这个函数作用于每个树叶&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            inorder(self.root, pfun)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteall</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;删除所有树叶和树枝&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            deleteallnodes(self.root)</span><br><span class="line">            self.root = <span class="literal">None</span></span><br><span class="line">            self.size = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deleteitem</span>(<span class="params">self, pi</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;在树中删除pi这个树叶&quot;&quot;&quot;</span></span><br><span class="line">        look = seekitem(pi, self.root)</span><br><span class="line">        <span class="comment"># 只判断petname是否存在</span></span><br><span class="line">        <span class="keyword">if</span> look.child <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 然后检测这个节点中的petkinds有没有要删除的那个</span></span><br><span class="line">        <span class="keyword">if</span> pi.petkind <span class="keyword">in</span> look.child.item.petkinds:</span><br><span class="line">            look.child.item.petkinds.remove(pi.petkind)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> len(look.child.item.petkinds) == <span class="number">0</span>:</span><br><span class="line">            <span class="comment"># 删到petkinds为空是再做节点删除的操作</span></span><br><span class="line">            <span class="keyword">if</span> look.parent <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                <span class="keyword">if</span> self.root <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    self.root = self.root.right</span><br><span class="line">                <span class="keyword">elif</span> self.root.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    self.root = self.root.left</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp = self.root.left</span><br><span class="line">                    <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                        temp = temp.right</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    temp.right = self.root.right</span><br><span class="line">                    temp = self.root</span><br><span class="line">                    self.root = self.root.left</span><br><span class="line">            <span class="keyword">elif</span> look.parent.left == look.child:</span><br><span class="line">                <span class="keyword">if</span> look.parent.left.left <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    look.parent.left = look.parent.left.right</span><br><span class="line">                <span class="keyword">elif</span> look.parent.left.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    look.parent.left = look.parent.left.left</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp = look.parent.left.left</span><br><span class="line">                    <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                        temp = temp.right</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    temp.right = look.parent.left.right</span><br><span class="line">                    temp = look.parent.left</span><br><span class="line">                    look.parent.left = look.parent.left.left</span><br><span class="line">            <span class="keyword">else</span>:  <span class="comment"># look.parent.right == look.child</span></span><br><span class="line">                <span class="keyword">if</span> look.parent.right.left <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    look.parent.right = look.parent.right.right</span><br><span class="line">                <span class="keyword">elif</span> look.parent.right.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                    look.parent.right = look.parent.right.left</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    temp = look.parent.right.left</span><br><span class="line">                    <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                        temp = temp.right</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    temp.right = look.parent.right.right</span><br><span class="line">                    temp = look.parent.right</span><br><span class="line">                    look.parent.right = look.parent.right.left</span><br><span class="line">        self.size -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deletenode</span>(<span class="params">ptr</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;技术问题 这个函数没法用&quot;&quot;&quot;</span></span><br><span class="line">    temp = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">if</span> ptr.left <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 父左</span></span><br><span class="line">        temp = ptr</span><br><span class="line">        ptr = ptr.right</span><br><span class="line">        <span class="keyword">del</span> temp</span><br><span class="line">    <span class="keyword">elif</span> ptr.right <span class="keyword">is</span> <span class="literal">None</span>:  <span class="comment"># 父右</span></span><br><span class="line">        temp = ptr</span><br><span class="line">        ptr = ptr.left</span><br><span class="line">        <span class="keyword">del</span> temp</span><br><span class="line">    <span class="keyword">else</span>:  <span class="comment"># 两个节点都不为空的话</span></span><br><span class="line">        temp = ptr.left</span><br><span class="line">        <span class="keyword">while</span> temp.right <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            temp = temp.right</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        temp.right = ptr.right</span><br><span class="line">        temp = ptr</span><br><span class="line">        ptr = ptr.left</span><br><span class="line">        <span class="keyword">del</span> temp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">deleteallnodes</span>(<span class="params">root</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;程序结束 删除所有节点&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        pright = root.right</span><br><span class="line">        deleteallnodes(root.left)</span><br><span class="line">        root = <span class="literal">None</span></span><br><span class="line">        <span class="keyword">del</span> root</span><br><span class="line">        deleteallnodes(pright)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">inorder</span>(<span class="params">root, pfun</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;遍历树 并将pfun作用于每个item&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> root <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        inorder(root.left, pfun)</span><br><span class="line">        pfun(root.item)</span><br><span class="line">        inorder(root.right, pfun)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">seekitem</span>(<span class="params">pi, ptree</span>):</span>  <span class="comment"># 相比较原版的seekitem 这个只检测petname的存在</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;在树中查找pi&quot;&quot;&quot;</span></span><br><span class="line">    look = Pair()  <span class="comment"># 当然 toleft和toright也要改</span></span><br><span class="line">    look.parent = <span class="literal">None</span></span><br><span class="line">    look.child = ptree</span><br><span class="line">    <span class="keyword">if</span> look.child <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> look</span><br><span class="line">    <span class="keyword">while</span> look.child <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">if</span> toleft(pi, look.child.item):</span><br><span class="line">            look.parent = look.child</span><br><span class="line">            look.child = look.child.left</span><br><span class="line">        <span class="keyword">elif</span> toright(pi, look.child.item):</span><br><span class="line">            look.parent = look.child</span><br><span class="line">            look.child = look.child.right</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> look</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">addnode</span>(<span class="params">new_node, root</span>):</span>  <span class="comment"># 递归</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;root树中添加一个new_node节点&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> toleft(new_node.item, root.item):</span><br><span class="line">        <span class="keyword">if</span> root.left <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            root.left = new_node  <span class="comment"># 这里 还有下面那个kind追加</span></span><br><span class="line">            root.left.item.petkinds.add(new_node.item.petkind)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            addnode(new_node, root.left)</span><br><span class="line">    <span class="keyword">elif</span> toright(new_node.item, root.item):</span><br><span class="line">        <span class="keyword">if</span> root.right <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            root.right = new_node</span><br><span class="line">            root.right.item.petkinds.add(new_node.item.petkind)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            addnode(new_node, root.right)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;location error in addnode()&quot;</span>)</span><br><span class="line">        exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toleft</span>(<span class="params">item1, item2</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;只有petname的对比了&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> item1.petname &lt; item2.petname:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">toright</span>(<span class="params">item1, item2</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;向右导航&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> item1.petname &gt; item2.petname:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;和第七题套路一样 不过需要适配的函数多了点&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">from</span> mytree <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">petclub</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;方便使用创建的类&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;初始化宠物俱乐部&quot;&quot;&quot;</span></span><br><span class="line">        self.pets = Tree()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addpet</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;添加宠物&quot;&quot;&quot;</span></span><br><span class="line">        temp = Item()</span><br><span class="line">        <span class="keyword">if</span> self.pets.isfull():</span><br><span class="line">            print(<span class="string">&quot;No room in the club!&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;Please enter name of pet:&quot;</span>)</span><br><span class="line">            temp.petname = input()</span><br><span class="line">            print(<span class="string">&quot;Please enter pet kind:&quot;</span>)</span><br><span class="line">            temp.petkind = input()</span><br><span class="line">            temp.petname = temp.petname.lower()</span><br><span class="line">            temp.petkind = temp.petkind.lower()</span><br><span class="line">            self.pets.additem(temp)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">droppet</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;丢掉宠物 这个功能的kind不是虚的&quot;&quot;&quot;</span></span><br><span class="line">        temp = Item()</span><br><span class="line">        <span class="keyword">if</span> self.pets.isempty():</span><br><span class="line">            print(<span class="string">&quot;No entries!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        print(<span class="string">&quot;Please enter name of pet you wish to delete:&quot;</span>)</span><br><span class="line">        temp.petname = input()</span><br><span class="line">        print(<span class="string">&quot;please enter pet kind:&quot;</span>)</span><br><span class="line">        temp.petkind = input()</span><br><span class="line">        temp.petname = temp.petname.lower()</span><br><span class="line">        temp.petkind = temp.petkind.lower()</span><br><span class="line">        print(<span class="string">&quot;%s the %s &quot;</span> % (temp.petname, temp.petkind))</span><br><span class="line">        <span class="keyword">if</span> self.pets.deleteitem(temp):</span><br><span class="line">            print(<span class="string">&quot;is dropped from the club.&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;is not a member.&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">showpets</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;显示所有宠物&quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">if</span> self.pets.isempty():</span><br><span class="line">            print(<span class="string">&quot;No entries!&quot;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.pets.traverse(printitem)  <span class="comment"># 局部自建函数</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findpet</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;查找宠物 并打印所有同名但不同种类的其他宠物&quot;&quot;&quot;</span></span><br><span class="line">        temp = Item()</span><br><span class="line">        <span class="keyword">if</span> self.pets.isempty():</span><br><span class="line">            print(<span class="string">&quot;No entries!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        print(<span class="string">&quot;Please enter name of pet you wish to find:&quot;</span>)</span><br><span class="line">        temp.petname = input()</span><br><span class="line">        print(<span class="string">&quot;please enter pet kind:&quot;</span>)</span><br><span class="line">        temp.petkind = input()</span><br><span class="line">        temp.petname = temp.petname.lower()</span><br><span class="line">        temp.petkind = temp.petkind.lower()</span><br><span class="line">        print(<span class="string">&quot;%s the %s &quot;</span> % (temp.petname, temp.petkind))</span><br><span class="line">        look = self.pets.intree(temp)</span><br><span class="line">        <span class="keyword">if</span> look <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            look.item.printitem()  <span class="comment"># 类自带方法</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;is not a member&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printitem</span>(<span class="params">item</span>):</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;traverse要用的函数&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> kind <span class="keyword">in</span> item.petkinds:  <span class="comment"># kind是个列表</span></span><br><span class="line">        print(<span class="string">&quot;petname：%s petkind：%s&quot;</span> % (item.petname, kind))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">menu</span>():</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;菜单函数&quot;&quot;&quot;</span></span><br><span class="line">    print(</span><br><span class="line">        <span class="string">&quot;\n----------------------------------------------\n&quot;</span></span><br><span class="line">        <span class="string">&quot;    Nerfville Pet Club Membership Program\n&quot;</span></span><br><span class="line">        <span class="string">&quot;Enter the letter corresponding to your choice:\n&quot;</span></span><br><span class="line">        <span class="string">&quot;a) add a pet             l) show list of pets\n&quot;</span></span><br><span class="line">        <span class="string">&quot;n) number of pets        f) find pets\n&quot;</span></span><br><span class="line">        <span class="string">&quot;d) delete a pet          q) quit&quot;</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        ch = input()</span><br><span class="line">        <span class="keyword">while</span> ch:</span><br><span class="line">            ch.lower()</span><br><span class="line">            <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> <span class="string">&quot;alrfndq&quot;</span>:  <span class="comment"># 判断</span></span><br><span class="line">                print(<span class="string">&quot;Please enter an a, l, f, n, d, or q:&quot;</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            ch = input()</span><br><span class="line">    <span class="keyword">except</span> EOFError:</span><br><span class="line">        ch = <span class="string">&quot;q&quot;</span></span><br><span class="line">    <span class="keyword">return</span> ch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    pettree = petclub()</span><br><span class="line">    choice = menu()</span><br><span class="line">    <span class="keyword">while</span> choice != <span class="string">&quot;q&quot;</span>:</span><br><span class="line">        <span class="keyword">if</span> choice == <span class="string">&quot;a&quot;</span>:</span><br><span class="line">            pettree.addpet()</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&quot;l&quot;</span>:</span><br><span class="line">            pettree.showpets()</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&quot;f&quot;</span>:</span><br><span class="line">            pettree.findpet()</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&quot;n&quot;</span>:</span><br><span class="line">            print(<span class="string">&quot;%d pets in club&quot;</span> % (pettree.pets.itemcount()))</span><br><span class="line">        <span class="keyword">elif</span> choice == <span class="string">&quot;d&quot;</span>:</span><br><span class="line">            pettree.droppet()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">&quot;Switching error&quot;</span>)</span><br><span class="line">        choice = menu()</span><br><span class="line">    pettree.pets.deleteall()</span><br><span class="line">    print(<span class="string">&quot;Bye.&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第十六章复习题目和编程练习题的答案</title>
      <link href="posts/be63c193.html"/>
      <url>posts/be63c193.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第十六章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li><p>下面的几组代码由一个或多个宏组成，其后是使用宏的源代码。在每种情况下代码的结果是什么？这些代码是否是有效代码？（假设其中的变量已声明）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">a.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FPM 5280 <span class="comment">/*每英里的英尺数*/</span></span></span><br><span class="line">dist = FPM * miles;</span><br><span class="line">b.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FEET 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> POD FEET + FEET</span></span><br><span class="line">plort = FEET * POD;</span><br><span class="line">c.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIX = 6;</span></span><br><span class="line">nex = SIX;</span><br><span class="line">d.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NEW(X) X + 5</span></span><br><span class="line">y = NEW(y);</span><br><span class="line">berg = NEW(berg) * lob;</span><br><span class="line">est = NEW(berg) / NEW(y);</span><br><span class="line">nilp = lob * NEW(-berg);</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>修改复习题1中d部分的定义，使其更可靠。</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>定义一个宏函数，返回两值中的较小值。</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>定义EVEN_GT(X, Y)宏，如果X为偶数且大于Y，该宏返回1。</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>定义一个宏函数，打印两个表达式及其值。例如，若参数为3+4和4<em>12，则打印：<br>3+4 is 7 and 4</em>12 is 48</li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>创建#define指令完成下面的任务。<br>  a.创建一个值为25的命名常量。<br>  b.SPACE表示空格字符。<br>  c.PS()代表打印空格字符。<br>  d.BIG(X)代表X的值加3。<br>  e.SUMSQ(X, Y)代表X和Y的平方和。</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>定义一个宏，以下面的格式打印名称、值和int类型变量的地址：<br>name: fop; value: 23; address: ff464016</li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>假设在测试程序时要暂时跳过一块代码，如何在不移除这块代码的前提下完成这项任务？</li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>编写一段代码，如果定义了PR_DATE宏，则打印预处理的日期。</li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>内联函数部分讨论了3种不同版本的square()函数。从行为方面看，这3种版本的函数有何不同？</li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>创建一个使用泛型选择表达式的宏，如果宏参数是_Bool类型，对”boolean”求值，否则对”not boolean”求值。</li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li><p>下面的程序有什么错误？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The square root of %f is %f\n&quot;</span>, argv[<span class="number">1</span>],<span class="built_in">sqrt</span>(argv[<span class="number">1</span>]) );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>假设 scores 是内含 1000 个 int 类型元素的数组，要按降序排序该数组中的值。假设你使用qsort()和comp()比较函数。<br>a.如何正确调用qsort()？<br>b.如何正确定义comp()？</li></ol><hr><h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14"><li>假设data1是内含100个double类型元素的数组，data2是内含300个double类型元素的数组。<br>a.编写memcpy()的函数调用，把data2中的前100个元素拷贝到data1中。<br>b.编写memcpy()的函数调用，把data2中的后100个元素拷贝到data1中。</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>开发一个包含你需要的预处理器定义的头文件。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="comment">//本自定义头文件库包括以下函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SDTC</span><span class="params">(<span class="keyword">long</span>, <span class="keyword">long</span>)</span></span>;          <span class="comment">//SetDataToClip         设置指定数据到剪切板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SCPTC</span><span class="params">(<span class="keyword">void</span>)</span></span>;               <span class="comment">//SetCursorPosToClip    设置鼠标坐标到剪切板</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CAP</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;         <span class="comment">//ClickAppointPos       鼠标左键点击传入的坐标值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">IAS</span><span class="params">(<span class="keyword">char</span> *str)</span></span>;            <span class="comment">//InputAppointString    按下指定字符串包含的按键</span></span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SCPTC</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LONG zx = <span class="number">-1</span>;</span><br><span class="line">    LONG zy = <span class="number">-1</span>;</span><br><span class="line">    POINT ptB = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LPPOINT xy = &amp;ptB;                  <span class="comment">//位置变量</span></span><br><span class="line">        GetCursorPos(xy);                   <span class="comment">//获取鼠标当前位置</span></span><br><span class="line">        <span class="keyword">if</span> ((zx != xy-&gt;x) || (zy != xy-&gt;y)) <span class="comment">//如果鼠标移动，（即当前的坐标改变则打印出坐标）打印出做坐标。</span></span><br><span class="line">        &#123;</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>); <span class="comment">//不要一列输出 在鼠标移动后就进行一个清屏</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;x=%d,y=%d\n&quot;</span>, xy-&gt;x, xy-&gt;y);</span><br><span class="line">            zx = xy-&gt;x;</span><br><span class="line">            zy = xy-&gt;y; <span class="comment">//检测鼠标左键的状态  如果鼠标左键被按下</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (GetKeyState(<span class="number">0x20</span>) &lt; <span class="number">0</span> || GetKeyState(<span class="number">0x01</span>) &lt; <span class="number">0</span>) <span class="comment">//如果空格或者鼠标左键被按下 就调用这个函数</span></span><br><span class="line">            SetDataToClip(zx, zy);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetDataToClip</span><span class="params">(<span class="keyword">long</span> x, <span class="keyword">long</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!OpenClipboard(<span class="literal">NULL</span>) || !EmptyClipboard()) <span class="comment">// 打开剪贴板</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;打开或清空剪切板出错！/n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    HGLOBAL hMen;</span><br><span class="line">    <span class="keyword">char</span> cz[<span class="number">20</span>]; <span class="comment">//直接使用sprintf()就能用了</span></span><br><span class="line">    <span class="built_in">sprintf</span>(cz, <span class="string">&quot;%d, %d&quot;</span>, x, y);</span><br><span class="line">    TCHAR strText[<span class="number">256</span>]; <span class="comment">//这一步用函数可能更稳一些</span></span><br><span class="line">    <span class="built_in">strcpy</span>(strText, cz);</span><br><span class="line">    hMen = GlobalAlloc(GMEM_MOVEABLE, ((<span class="built_in">strlen</span>(strText) + <span class="number">1</span>) * <span class="keyword">sizeof</span>(TCHAR))); <span class="comment">// 分配全局内存</span></span><br><span class="line">    <span class="keyword">if</span> (!hMen)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分配全局内存出错！/n&quot;</span>);</span><br><span class="line">        CloseClipboard(); <span class="comment">// 关闭剪切板</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 把数据拷贝考全局内存中</span></span><br><span class="line">    LPSTR lpStr = (LPSTR)GlobalLock(hMen);                       <span class="comment">// 锁住内存区</span></span><br><span class="line">    <span class="built_in">memcpy</span>(lpStr, strText, ((<span class="built_in">strlen</span>(strText)) * <span class="keyword">sizeof</span>(TCHAR))); <span class="comment">// 内存复制</span></span><br><span class="line">    lpStr[<span class="built_in">strlen</span>(strText)] = (TCHAR)<span class="number">0</span>;                           <span class="comment">// 字符结束符</span></span><br><span class="line">    GlobalUnlock(hMen);                                          <span class="comment">// 释放锁</span></span><br><span class="line">    SetClipboardData(CF_TEXT, hMen);                             <span class="comment">// 把内存中的数据放到剪切板上</span></span><br><span class="line">    CloseClipboard();</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InputAppointString</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="keyword">while</span> (str[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> target = str[i];<span class="comment">//数组中得字符转换成int型的数值 然后传给keybd_event()函数</span></span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">keybd_event(target, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">keybd_event(target, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;字符串%s输入成功\n&quot;</span>, str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ClickAppointPos</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SetCursorPos(x, y);   <span class="comment">//移动鼠标到指定坐标值</span></span><br><span class="line">mouse_event(MOUSEEVENTF_LEFTDOWN, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//左键按下</span></span><br><span class="line">mouse_event(MOUSEEVENTF_LEFTUP, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);   <span class="comment">//左键松开</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;坐标值%d,%d点击成功\n&quot;</span>, x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">enter</span><span class="params">(<span class="keyword">int</span> i)</span>       <span class="comment">//修一下  再加一个sleep函数的参数   要高级一些的  也就是可以自定义是否选择设置这个sleep参数</span></span></span><br><span class="line"><span class="function"></span>&#123;                       <span class="comment">//在高级一些 自定义函数的参数数量 可以一次调用多个参数</span></span><br><span class="line">keybd_event(i, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>); <span class="comment">//按下win键</span></span><br><span class="line">keybd_event(i, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>); <span class="comment">//松开</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>两数的调和平均数这样计算：先得到两数的倒数，然后计算两个倒数的平均值，最后取计算结果的倒数。使用#define指令定义一个宏“函数”，执行该运算。编写一个简单的程序测试该宏。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RECI(x, y) (1.0 / (((1.0 / (x)  + 1.0   / (y)))  / 2.0))</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>, RECI(<span class="number">3.0</span>, <span class="number">5.0</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li><p>极坐标用向量的模（即向量的长度）和向量相对x轴逆时针旋转的角度来描述该向量。直角坐标用向量的x轴和y轴的坐标来描述该向量（见图16.3）。编写一个程序，读取向量的模和角度（单位：度），然后显示x轴和y轴的坐标。相关方程如下：<br>x = r<em>cos A y = r</em>sin A</p><p>需要一个函数来完成转换，该函数接受一个包含极坐标的结构，并返回一个包含直角坐标的结构（或返回指向该结构的指针）。</p></li></ol><p><img src= "/img/loading.gif" data-lazy-src="https://s1.ax1x.com/2020/05/27/tA5afx.png" alt="直角坐标和极坐标"></p><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>ANSI库这样描述clock()函数的特性：<br>#include &lt;time.h&gt;<br>clock_t clock (void);<br>这里，clock_t是定义在time.h中的类型。该函数返回处理器时间，其单位取决于实现（如果处理器时间不可用或无法表示，该函数将返回-1）。然而，CLOCKS_PER_SEC（也定义在time.h中）是每秒处理器时间单位的数量。因此，两个 clock()返回值的差值除以 CLOCKS_PER_SEC得到两次调用之间经过的秒数。在进行除法运算之前，把值的类型强制转换成double类型，可以将时间精确到小数点以后。编写一个函数，接受一个double类型的参数表示时间延迟数，然后在这段时间运行一个循环。编写一个简单的程序测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inte</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    inte(<span class="number">10000000</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inte</span><span class="params">(<span class="keyword">double</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">clock_t</span> o = clock();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i;)</span><br><span class="line">        j++;</span><br><span class="line">    <span class="keyword">clock_t</span> s = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;处理器时间间隔为%lf&quot;</span>, (<span class="keyword">double</span>)(s - o) / CLOCKS_PER_SEC);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个函数接受这些参数：内含int类型元素的数组名、数组的大小和一个代表选取次数的值。该函数从数组中随机选择指定数量的元素，并打印它们。每个元素只能选择一次（模拟抽奖数字或挑选陪审团成员）。另外，如果你的实现有time()（第12章讨论过）或类似的函数，可在srand()中使用这个函数的输出来初始化随机数生成器rand()。编写一个简单的程序测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FRE 10</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ran</span><span class="params">(<span class="keyword">int</span> *, <span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[SIZE] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">array</span>[i] = rand();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;| %5d &quot;</span>, <span class="built_in">array</span>[i]);</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">6</span> == <span class="number">5</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    ran(<span class="built_in">array</span>, SIZE, FRE);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ran</span><span class="params">(<span class="keyword">int</span> *p, <span class="keyword">int</span> size, <span class="keyword">int</span> fre)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> luck[fre];              <span class="comment">// 新数组用于存储lucky值(下标) 然后后面要做检重和逐个下标输出</span></span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">if</span> (fre &lt;= size)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fre; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            luck[i] = rand() % size;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) <span class="comment">// 检测重复</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span> (luck[j] == luck[i])</span><br><span class="line">                &#123;</span><br><span class="line">                    luck[i] = rand() % size;</span><br><span class="line">                    j = <span class="number">-1</span>;         <span class="comment">// 重点在这里 luck[i]是有可能等于luck[j]前面已经检查过的数字的  所以每当撞值时我就让j回到0重新检查一边</span></span><br><span class="line">                &#125;                   <span class="comment">// j后面 做个while检查肯定会跳出 接着就是j++ 所以j = -1;  这样就算10 10这样的大的几率都不会撞</span></span><br><span class="line">            &#125;                       <span class="comment">// 当然前者要保证比后者大 也就是fre &lt;= size</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fre; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;| %5d &quot;</span>, p[luck[i]]);</span><br><span class="line">            <span class="keyword">if</span> (i % <span class="number">6</span> == <span class="number">5</span>)</span><br><span class="line">                <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>修改程序清单16.17，使用struct names元素（在程序清单16.17后面的讨论中定义过），而不是double类型的数组。使用较少的元素，并用选定的名字显式初始化数组。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NUM 100</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">names</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> first[<span class="number">40</span>];</span><br><span class="line">    <span class="keyword">char</span> last[<span class="number">40</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillarray</span><span class="params">(struct names *, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showarray</span><span class="params">(<span class="keyword">const</span> struct names *, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *p1, <span class="keyword">const</span> <span class="keyword">void</span> *p2)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">names</span> <span class="title">staff</span>[100];</span></span><br><span class="line">    fillarray(staff, NUM);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Random list:&quot;</span>);</span><br><span class="line">    showarray(staff, NUM);</span><br><span class="line">    qsort(staff, NUM, <span class="keyword">sizeof</span>(struct names), comp);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;\nSorted list:&quot;</span>);</span><br><span class="line">    showarray(staff, NUM);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fillarray</span><span class="params">(struct names *ar, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>));</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">// ar[i].first[6] = &#x27;\0&#x27;;</span></span><br><span class="line">    &#123;                           <span class="comment">// 6这个常量是我设置的 也就是我通融的</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            ar[i].first[j] = (rand() % <span class="number">57</span> + <span class="number">65</span>);                          <span class="comment">//  可以看到这两种形式 和指针一模一样</span></span><br><span class="line">            <span class="keyword">while</span> (!(<span class="built_in">isalpha</span>(ar[i].first[j])) || <span class="built_in">ispunct</span>(ar[i].first[j])) <span class="comment">//只是表示形式而不是声明这种大事  ，编译器给我们优化过去了</span></span><br><span class="line">                ar[i].first[j] = (rand() % <span class="number">57</span> + <span class="number">65</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ar[i].first[<span class="number">6</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">6</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            ar[i].last[j] = (rand() % <span class="number">57</span> + <span class="number">65</span>);</span><br><span class="line">            <span class="keyword">while</span> (!(<span class="built_in">isalpha</span>(ar[i].last[j])) || <span class="built_in">ispunct</span>(ar[i].last[j]))</span><br><span class="line">                ar[i].last[j] = (rand() % <span class="number">57</span> + <span class="number">65</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ar[i].first[<span class="number">6</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">showarray</span><span class="params">(<span class="keyword">const</span> struct names *ar, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d first: %6s  last: %6s\n&quot;</span>, i, ar[i].first, ar[i].last);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *p1, <span class="keyword">const</span> <span class="keyword">void</span> *p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">names</span> *<span class="title">ps1</span> = (<span class="title">const</span> <span class="title">struct</span> <span class="title">names</span> *)<span class="title">p1</span>;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">names</span> *<span class="title">ps2</span> = (<span class="title">const</span> <span class="title">struct</span> <span class="title">names</span> *)<span class="title">p2</span>;</span></span><br><span class="line">    <span class="keyword">int</span> res;</span><br><span class="line">    res = <span class="built_in">strcmp</span>(ps1-&gt;first, ps2-&gt;first);</span><br><span class="line">    <span class="keyword">if</span> (res != <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">strcmp</span>(ps1-&gt;last, ps2-&gt;last);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li><p>下面是使用变参函数的一个程序段：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">double</span> ar[], <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> * <span class="title">new_d_array</span><span class="params">(<span class="keyword">int</span> n, ...)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">double</span> * p1;</span><br><span class="line">   <span class="keyword">double</span> * p2;</span><br><span class="line">   p1 = new_d_array(<span class="number">5</span>, <span class="number">1.2</span>, <span class="number">2.3</span>, <span class="number">3.4</span>, <span class="number">4.5</span>, <span class="number">5.6</span>);</span><br><span class="line">   p2 = new_d_array(<span class="number">4</span>, <span class="number">100.0</span>, <span class="number">20.00</span>, <span class="number">8.08</span>, <span class="number">-1890.0</span>);</span><br><span class="line">   show_array(p1, <span class="number">5</span>);</span><br><span class="line">   show_array(p2, <span class="number">4</span>);</span><br><span class="line">   <span class="built_in">free</span>(p1);</span><br><span class="line">   <span class="built_in">free</span>(p2);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>new_d_array()函数接受一个int类型的参数和double类型的参数。该函数返回一个指针，指向由malloc()分配的内存块。int类型的参数指定了动态数组中的元素个数，double类型的值用于初始化元素（第1个值赋给第1个元素，以此类推）。编写show_array()和new_d_array()函数的代码，完成这个程序。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">double</span> ar[], <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> *<span class="title">new_d_array</span><span class="params">(<span class="keyword">int</span> n, ...)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *p1;</span><br><span class="line">    <span class="keyword">double</span> *p2;</span><br><span class="line">    p1 = new_d_array(<span class="number">5</span>, <span class="number">1.2</span>, <span class="number">2.3</span>, <span class="number">3.4</span>, <span class="number">4.5</span>, <span class="number">5.6</span>);</span><br><span class="line">    p2 = new_d_array(<span class="number">4</span>, <span class="number">100.0</span>, <span class="number">20.00</span>, <span class="number">8.08</span>, <span class="number">-1890.0</span>);</span><br><span class="line">    show_array(p1, <span class="number">5</span>);</span><br><span class="line">    show_array(p2, <span class="number">4</span>);</span><br><span class="line">    <span class="built_in">free</span>(p1);</span><br><span class="line">    <span class="built_in">free</span>(p2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">double</span> ar[], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lf \n&quot;</span>, ar[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> *<span class="title">new_d_array</span><span class="params">(<span class="keyword">int</span> n, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    va_list ap;</span><br><span class="line">    va_start(ap, n);</span><br><span class="line">    <span class="keyword">double</span> *p = (<span class="keyword">double</span> *) <span class="built_in">malloc</span>(n * <span class="keyword">sizeof</span>(<span class="keyword">double</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        p[i] = va_arg(ap, <span class="keyword">double</span>);</span><br><span class="line">    va_end(ap);</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第十五章复习题目和编程练习题的答案</title>
      <link href="posts/fc18d53f.html"/>
      <url>posts/fc18d53f.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第十五章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>把下面的十进制转换为二进制：<br>a.3<br>b.13<br>c.59<br>d.119<a id="more"></a></li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>将下面的二进制值转换为十进制、八进制和十六进制的形式：<br>a.00010101<br>b.01010101<br>c.01001100<br>d.10011101</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>对下面的表达式求值，假设每个值都为8位：<br>a.～3<br>b.3 &amp; 6<br>c.3 | 6<br>d.1 | 6<br>e.3 ^ 6<br>f.7 &gt;&gt; 1<br>g.7 &lt;&lt; 2</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>对下面的表达式求值，假设每个值都为8位：<br>a.～0<br>b.!0<br>c.2 &amp; 4<br>d.2 &amp;&amp; 4<br>e.2 | 4<br>f.2 || 4<br>g.5 &lt;&lt; 3</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>因为ASCII码只使用最后7位，所以有时需要用掩码关闭其他位，其相应的二进制掩码是什么？分别用十进制、八进制和十六进制来表示这个掩码。</li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>程序清单15.2中，可以把下面的代码：<pre><code> while (bits-- &gt; 0) &#123;     mask |= bitval;     bitval &lt;&lt;= 1; &#125;</code></pre>替换成：<pre><code> while (bits-- &gt; 0) &#123;     mask += bitval;     bitval *= 2; &#125;</code></pre>程序照常工作。这是否意味着*=2等同于&lt;&lt;=1？+=是否等同于|=？</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li><p>a.Tinkerbell计算机有一个硬件字节可读入程序。该字节包含以下信息：</p><table><thead><tr><th align="left">位</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">0~1</td><td align="left">1.4MB软盘驱动器的数量</td></tr><tr><td align="left">2</td><td align="left">未使用</td></tr><tr><td align="left">3~4</td><td align="left">CD-ROM驱动器数量</td></tr><tr><td align="left">5</td><td align="left">未使用</td></tr><tr><td align="left">6~7</td><td align="left">硬盘驱动器的数量</td></tr></tbody></table><p>Tinkerbell和IBM PC一样，从右往左填充结构位字段。创建一个适合存放这些信息的位字段模板。<br>b.Klinkerbell与Tinkerbell类似，但是它从左往右填充结构位字段。请为Klinkerbell创建一个相应的位字段模板。</p></li></ol><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>编写一个函数，把二进制字符串转换为一个数值。例如，有下面的语句：<br>char * pbin = “01001001”;<br>那么把pbin作为参数传递给该函数后，它应该返回一个int类型的值25。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_str</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span> num)</span></span>; <span class="comment">// 返回值为成功获取的str数量</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">put_str</span><span class="params">(<span class="keyword">char</span> *)</span></span>;          <span class="comment">// 返回str的int值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">while</span> (get_str(str, <span class="number">100</span>) != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, put_str(str));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_str</span><span class="params">(<span class="keyword">char</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; (i != num))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(ch))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">&#x27;0&#x27;</span> || ch == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                *pt = ch;</span><br><span class="line">                pt++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 只要有一个不是1或0就给他炸</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    *pt = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">put_str</span><span class="params">(<span class="keyword">char</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; pt[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        value &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        value |= (pt[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个程序，通过命令行参数读取两个二进制字符串，对这两个二进制数使用～运算符、&amp;运算符、|运算符和^运算符，并以二进制字符串形式打印结果（如果无法使用命令行环境，可以通过交互式让程序读取字符 串）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;    // bool</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;     //exit()</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">str_int</span><span class="params">(<span class="keyword">char</span> *pt)</span></span>;  <span class="comment">// string To int</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inspect</span><span class="params">(<span class="keyword">char</span> *pt)</span></span>; <span class="comment">// 检测传回来的字符串 有一个不是0或1就给他炸</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binstr</span><span class="params">(<span class="keyword">int</span>)</span></span>;       <span class="comment">// 数值转二进制字符串</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">if</span> ((inspect(argv[<span class="number">1</span>])) &amp;&amp; (inspect(argv[<span class="number">2</span>])))</span><br><span class="line">    &#123;</span><br><span class="line">        a = str_int(argv[<span class="number">1</span>]);</span><br><span class="line">        b = str_int(argv[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a     = &quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b     = &quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;~a    = &quot;</span>);</span><br><span class="line">    binstr(~a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;~b    = &quot;</span>);</span><br><span class="line">    binstr(~b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a | b = &quot;</span>);</span><br><span class="line">    binstr(a | b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a ^ b = &quot;</span>);</span><br><span class="line">    binstr(a ^ b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binstr</span><span class="params">(<span class="keyword">int</span> value)</span> <span class="comment">// 统一32位</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> bs[<span class="number">32</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        bs[i] = (<span class="number">01</span> &amp; value) + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        value &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">32</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, bs[i]);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">itobs</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">char</span> *ps)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">static</span> <span class="keyword">int</span> size = CHAR_BIT * <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = size - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--, n &gt;&gt;= <span class="number">1</span>)</span><br><span class="line">        ps[i] = (<span class="number">01</span> &amp; n) + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    ps[size] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> ps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">str_int</span><span class="params">(<span class="keyword">char</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> value = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; pt[i]; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        value &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        value |= (pt[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">inspect</span><span class="params">(<span class="keyword">char</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; pt[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((pt[i] != <span class="string">&#x27;0&#x27;</span>) &amp;&amp; (pt[i] != <span class="string">&#x27;1&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个函数，接受一个 int 类型的参数，并返回该参数中打开位的数量。在一个程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">opi</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">// 转成binstr 然后如果 这个pt[i]为1就是打开</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, opi(<span class="number">9457</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">opi</span><span class="params">(<span class="keyword">int</span> value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (value)</span><br><span class="line">    &#123;</span><br><span class="line">        count += (value &amp; <span class="number">1</span>);</span><br><span class="line">        value &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，接受两个int类型的参数：一个是值；一个是位的位置。如果指定位的位置为1，该函数返回1；否则返回0。在一个程序中测试 该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">istrue</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> size 32</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, istrue(<span class="number">5</span>, <span class="number">4</span>));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, ist(<span class="number">5</span>, <span class="number">4</span>) ? <span class="string">&quot;打开&quot;</span> : <span class="string">&quot;关闭&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ist</span><span class="params">(<span class="keyword">int</span> value, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (value &amp; (<span class="number">1</span> &lt;&lt; (n - <span class="number">1</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">istrue</span><span class="params">(<span class="keyword">int</span> value, <span class="keyword">int</span> pos)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> b[size + <span class="number">1</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = (<span class="number">01</span> &amp; value) + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        value &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    b[size] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">puts</span>(b);</span><br><span class="line">    <span class="keyword">if</span> (pos &lt; size &amp;&amp; b[pos - <span class="number">1</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个函数，把一个 unsigned int 类型值中的所有位向左旋转指定数量的位。例如，rotate_l(x, 4)把x中所有位向左移动4个位置，而且从最左端移出的位会重新出现在右端。也就是说，把高阶位移出的位放入低阶位。在一个程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">rotate_l</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;   <span class="comment">// 让我写的话 还是int &gt; binstr &gt;int</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_bstr</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    rotate_l(<span class="number">15</span>, <span class="number">34</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">rotate_l</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num, <span class="keyword">int</span> loop)</span> <span class="comment">// 第二十七的d是满32位的 所有&gt;&gt;31后会留一个1 然后是 28，29，30 留一</span></span></span><br><span class="line"><span class="function"></span>&#123;                                                 <span class="comment">// 换句话 这四个b=1 都是上一个d满32位所得的结果 所以从31开始就结束了</span></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>, e = <span class="number">0</span>, f = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; loop; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a = (CHAR_BIT * <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">int</span>) - <span class="number">1</span>);</span><br><span class="line">        b = num &gt;&gt; a;</span><br><span class="line">        c = num &lt;&lt; <span class="number">1</span>;</span><br><span class="line">        d = b | c;</span><br><span class="line">        num = d;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%2d a = 31, b = %d &quot;</span>, i, b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;c = &quot;</span>);</span><br><span class="line">        print_bstr(c);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;d = &quot;</span>);</span><br><span class="line">        print_bstr(d);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="comment">// num = (num &gt;&gt; (CHAR_BIT * sizeof(unsigned int) - 1)) | (num &lt;&lt; 1);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//  24 a = 31, b = 0 c = 1 1110 0000 0000 0000 0000 0000 0000     d = 1 1110 0000 0000 0000 0000 0000 0000</span></span><br><span class="line"><span class="comment">//  25 a = 31, b = 0 c = 11 1100 0000 0000 0000 0000 0000 0000    d = 11 1100 0000 0000 0000 0000 0000 0000</span></span><br><span class="line"><span class="comment">//  26 a = 31, b = 0 c = 111 1000 0000 0000 0000 0000 0000 0000   d = 111 1000 0000 0000 0000 0000 0000 0000</span></span><br><span class="line"><span class="comment">//  27 a = 31, b = 0 c = 1111 0000 0000 0000 0000 0000 0000 0000  d = 1111 0000 0000 0000 0000 0000 0000 0000</span></span><br><span class="line"><span class="comment">//  28 a = 31, b = 1 c = 1110 0000 0000 0000 0000 0000 0000 0000  d = 1110 0000 0000 0000 0000 0000 0000 0001</span></span><br><span class="line"><span class="comment">//  29 a = 31, b = 1 c = 1100 0000 0000 0000 0000 0000 0000 0010  d = 1100 0000 0000 0000 0000 0000 0000 0011</span></span><br><span class="line"><span class="comment">//  30 a = 31, b = 1 c = 1000 0000 0000 0000 0000 0000 0000 0110  d = 1000 0000 0000 0000 0000 0000 0000 0111</span></span><br><span class="line"><span class="comment">//  31 a = 31, b = 1 c = 1110                                     d = 1111</span></span><br><span class="line"><span class="comment">//  32 a = 31, b = 0 c = 1 1110                                   d = 1 1110</span></span><br><span class="line"><span class="comment">//  33 a = 31, b = 0 c = 11 1100                                  d = 11 1100</span></span><br><span class="line"><span class="comment">//  34 a = 31, b = 0 c = 111 1000                                 d = 111 1000</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_bstr</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (!num &amp;&amp; !n)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (num)</span><br><span class="line">    &#123;</span><br><span class="line">        n++;</span><br><span class="line">        print_bstr(num &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;0&#x27;</span> + (num &amp; <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">if</span> ((--n % <span class="number">4</span>) == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li><p>设计一个位字段结构以储存下面的信息。<br>字体ID：0～255之间的一个数；<br>字体大小：0～127之间的一个数；<br>对齐：0～2之间的一个数，表示左对齐、居中、右对齐；<br>加粗：开（1）或闭（0）；<br>斜体：开（1）或闭（0）；<br>在一个程序中使用该结构来打印字体参数，并使用循环菜单来让用户改变参数。例如，该程序的一个运行示例如下：</p><p>该程序要使用按位与运算符（&amp;）和合适的掩码来把字体ID和字体大小信息转换到指定的范围内。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEFT 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RIGHT 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CENTER 2</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *ALM[<span class="number">3</span>] = &#123;<span class="string">&quot;LEFT&quot;</span>, <span class="string">&quot;CENTER&quot;</span>, <span class="string">&quot;RIGHT&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> id : <span class="number">8</span>; <span class="comment">// 字体ID           //</span></span><br><span class="line">    <span class="keyword">unsigned</span> size : <span class="number">7</span>;   <span class="comment">// 字体大小         // 这两个要用掩码</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> : <span class="number">1</span>;    <span class="comment">// 比特对齐</span></span><br><span class="line">    <span class="keyword">unsigned</span> alm : <span class="number">2</span>;    <span class="comment">// 字体左中右对齐</span></span><br><span class="line">    <span class="keyword">bool</span> bold : <span class="number">1</span>;       <span class="comment">// 粗体</span></span><br><span class="line">    <span class="keyword">bool</span> italics : <span class="number">1</span>;    <span class="comment">// 斜体</span></span><br><span class="line">    <span class="keyword">bool</span> ul : <span class="number">1</span>;         <span class="comment">// 下划线</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> : <span class="number">3</span>;    <span class="comment">// 比特对齐</span></span><br><span class="line">&#125; font;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(font *)</span></span>; <span class="comment">// 菜单和六函</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_font</span><span class="params">(font *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_size</span><span class="params">(font *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_alig</span><span class="params">(font *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_bold</span><span class="params">(font *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_ital</span><span class="params">(font *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_unde</span><span class="params">(font *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*VF_font)</span><span class="params">(font *)</span></span>;                                                                               <span class="comment">// 函数指针</span></span><br><span class="line"><span class="keyword">const</span> VF_font fun_p[<span class="number">7</span>] = &#123;change_font, change_size, change_alig, toggle_bold, toggle_ital, toggle_unde, menu&#125;; <span class="comment">// 函数数组</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_MASK 0xFF                                                                                           <span class="comment">//ID掩码</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE_MASK 0x7F                                                                                         <span class="comment">//大小掩码</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *funorder = &#123;<span class="string">&quot;fsabium&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    font text = &#123;<span class="number">1</span>, <span class="number">17</span>, LEFT, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">false</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> op, *p;</span><br><span class="line">    menu(&amp;text);                                        <span class="comment">// 感觉tolower会降低逼格 所以不加了</span></span><br><span class="line">    <span class="keyword">while</span> ((op = getchar()) &amp;&amp; (p = <span class="built_in">strchr</span>(funorder, op)))</span><br><span class="line">    &#123;</span><br><span class="line">        fun_p[p - funorder](&amp;text); <span class="comment">// 等下看下官方例题的掩码有没有报警告</span></span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">        menu(&amp;text);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bye!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(font *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">const</span> <span class="keyword">char</span> *ALM[];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; ID SIZE ALIGNMENT    B    I    U\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%3d %4d  %5s&quot;</span>, p-&gt;id, p-&gt;size, ALM[p-&gt;alm]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;      %3s  %3s  %3s\n&quot;</span>, p-&gt;bold == <span class="literal">true</span> ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>, p-&gt;italics == <span class="literal">true</span> ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>, p-&gt;ul == <span class="literal">true</span> ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;f)change font    s)change size    a)change alignment\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b)toggle bold    i)toggle italic  u)toggle underline\nq)quit\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_font</span><span class="params">(font *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;id &amp;= ~ID_MASK;</span><br><span class="line">    <span class="keyword">int</span> ID = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入0-255之间的数值&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (!(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;ID)) || !(ID &gt;= <span class="number">0</span>) || !(ID &lt;= <span class="number">255</span>));</span><br><span class="line">    p-&gt;id |= ID;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_size</span><span class="params">(font *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;size &amp;= ~SIZE_MASK; <span class="comment">// 虽然这样写比较水 但这里能用就行 下面unsignd int 才是硬菜</span></span><br><span class="line">    <span class="keyword">int</span> SIZE = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入0-127之间的数值&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (!(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;SIZE)) || !(SIZE &gt;= <span class="number">0</span>) || !(SIZE &lt;= <span class="number">127</span>));</span><br><span class="line">    p-&gt;size |= SIZE;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_alig</span><span class="params">(font *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;l)left    c)center    r)right\n&quot;</span>);</span><br><span class="line">    <span class="keyword">char</span> *almorder = &#123;<span class="string">&quot;lcr&quot;</span>&#125;, *pt = <span class="literal">NULL</span>, ALM;</span><br><span class="line">    <span class="keyword">while</span> (!(<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ALM)) || !(pt = <span class="built_in">strchr</span>(almorder, ALM)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入l,c,r三者其中的数值&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    p-&gt;alm = pt - almorder;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_bold</span><span class="params">(font *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;bold ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_ital</span><span class="params">(font *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;italics ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_unde</span><span class="params">(font *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    p-&gt;ul ^= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个与编程练习 6 功能相同的程序，使用 unsigned long 类型的变量储存字体信息，并且使用按位运算符而不是位成员来管理这些信息。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ID_MASK 0xFF <span class="comment">// 掩码</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE_MASK 0x7F00</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> alig_MASK 0x18000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> bold_MASK 0x20000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ital_MASK 0x40000</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> unde_MASK 0x80000</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span>)</span></span>; <span class="comment">// 菜单和六函</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_font</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_size</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_alig</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_bold</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_ital</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_unde</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*VF_font)</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="keyword">const</span> VF_font fun_p[<span class="number">6</span>] = &#123;change_font, change_size, change_alig, toggle_bold, toggle_ital, toggle_unde&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *funorder = &#123;<span class="string">&quot;fsabiu&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *ALM[<span class="number">3</span>] = &#123;<span class="string">&quot;LEFT&quot;</span>, <span class="string">&quot;CENTER&quot;</span>, <span class="string">&quot;RIGHT&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> font = <span class="number">985684</span>; <span class="comment">// 84 10 center t t t</span></span><br><span class="line">    <span class="keyword">char</span> op, *p;</span><br><span class="line">    menu(font);</span><br><span class="line">    <span class="keyword">while</span> ((op = getchar()) &amp;&amp; (p = <span class="built_in">strchr</span>(funorder, op)))</span><br><span class="line">    &#123;</span><br><span class="line">        fun_p[p - funorder](&amp;font);</span><br><span class="line">        system(<span class="string">&quot;clear&quot;</span>);</span><br><span class="line">        menu(font);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);  <span class="comment">// linux这边这个函数有点小问题啊</span></span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bye!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> font)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; ID SIZE ALIGNMENT    B    I    U\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%3d %4d  %5s&quot;</span>, font &amp; ID_MASK, ((font &amp; SIZE_MASK) &gt;&gt; <span class="number">8</span>), ALM[((font &amp; alig_MASK) &gt;&gt; <span class="number">15</span>) - <span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;     %3s  %3s  %3s\n&quot;</span>, ((font &amp; bold_MASK) == bold_MASK) == <span class="literal">true</span> ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>, ((font &amp; ital_MASK) == ital_MASK) == <span class="literal">true</span> ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>, ((font &amp; unde_MASK) == unde_MASK) == <span class="literal">true</span> ? <span class="string">&quot;on&quot;</span> : <span class="string">&quot;off&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;f)change font    s)change size    a)change alignment\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b)toggle bold    i)toggle italic  u)toggle underline\nq)quit\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_font</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *p &amp;= ~ID_MASK; <span class="comment">// 清除原先数据  没什么好讲的走的都是一个模子</span></span><br><span class="line">    <span class="keyword">int</span> ID = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入0-255之间的数值&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (!(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;ID)) || !(ID &gt;= <span class="number">0</span>) || !(ID &lt;= <span class="number">255</span>));</span><br><span class="line">    *p |= ID;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_size</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *p &amp;= ~SIZE_MASK;</span><br><span class="line">    <span class="keyword">int</span> SIZE = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入0-127之间的数值&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (!(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;SIZE)) || !(SIZE &gt;= <span class="number">0</span>) || !(SIZE &lt;= <span class="number">127</span>));</span><br><span class="line">    *p |= (SIZE &lt;&lt; <span class="number">8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_alig</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *p &amp;= ~alig_MASK;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;l)left    c)center    r)right\n&quot;</span>);</span><br><span class="line">    <span class="keyword">char</span> *almorder = &#123;<span class="string">&quot;lcr&quot;</span>&#125;, *pt = <span class="literal">NULL</span>, ALM;</span><br><span class="line">    <span class="keyword">while</span> (!(<span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ALM)) || !(pt = <span class="built_in">strchr</span>(almorder, ALM)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入l,c,r三者其中的数值&quot;</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    *p |= (pt - almorder + <span class="number">1</span>) &lt;&lt; <span class="number">15</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_bold</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *p ^= bold_MASK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_ital</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *p ^= ital_MASK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">toggle_unde</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *p ^= unde_MASK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第十四章复习题目和编程练习题的答案</title>
      <link href="posts/6bf0a12d.html"/>
      <url>posts/6bf0a12d.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第十四章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>下面的结构模板有什么问题：<pre><code> structure &#123;     char itable;     int num[20];     char *togs &#125;</code></pre><a id="more"></a></li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>下面是程序的一部分，输出是什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">house</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">float</span> sqft;</span><br><span class="line">    <span class="keyword">int</span> rooms;</span><br><span class="line">    <span class="keyword">int</span> stories;</span><br><span class="line">    <span class="keyword">char</span> address[<span class="number">40</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">house</span> <span class="title">fruzt</span> = &#123;</span><span class="number">1560.0</span>, <span class="number">6</span>, <span class="number">1</span>, <span class="string">&quot;22 Spiffo Road&quot;</span>&#125;;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">house</span> *<span class="title">sign</span>;</span></span><br><span class="line">    sign = &amp;fruzt;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, fruzt.rooms, sign-&gt;stories);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s \n&quot;</span>, fruzt.address);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c %c\n&quot;</span>, sign-&gt;address[<span class="number">3</span>], fruzt.address[<span class="number">4</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>设计一个结构模板储存一个月份名、该月份名的3个字母缩写、该月的天数以及月份号。</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>定义一个数组，内含12个结构（第3题的结构类型）并初始化为一个年份（非闰年）。</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个函数，用户提供月份号，该函数就返回一年中到该月为止（包括该月）的总天数。假设在所有函数的外部声明了第3题的结构模版和一个该类型结构的数组。</li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>a.假设有下面的 typedef，声明一个内含10个指定结构的数组。然后，单独给成员赋值（或等价字符串），使第3个元素表示一个焦距长度有 500mm，孔径为f/2.0的Remarkata镜头。<pre><code> typedef struct lens /* 描述镜头  */ &#123;     float foclen;   /* 焦距长度，单位为mm */     float fstop;    /* 孔径 */     char brand[30]; /* 品牌名称 */ &#125; LENS;</code></pre>b.重写a，在声明中使用一个待指定初始化器的初始化列表，而不是对每个成员单独赋值。</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>考虑下面程序片段：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">name</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> first[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> last[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bem</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> limbs;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">name</span> <span class="title">title</span>;</span></span><br><span class="line">    <span class="keyword">char</span> type[<span class="number">30</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bem</span> *<span class="title">pb</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bem</span> <span class="title">deb</span> = &#123;</span><span class="number">6</span>, &#123;<span class="string">&quot;Berbnazel&quot;</span>, <span class="string">&quot;Gwolkapwolk&quot;</span>&#125;, <span class="string">&quot;Arcturan&quot;</span>&#125;;</span><br><span class="line">pb = &amp;deb;</span><br></pre></td></tr></table></figure>a.下面的语句分别打印什么？<pre><code> printf(&quot;%d\n&quot;, deb.limbs); printf(&quot;%s\n&quot;, pb-&gt;type); printf(&quot;%s\n&quot;, pb-&gt;type + 2);</code></pre>b.如何用结构表示法（两种方法）表示 “Gwolkapwolk”？<br>c.编写一个函数，以bem结构的地址作为参数，并以下面的形式输出结构的内容（假定结构模板在一个名为starfolk.h的头文件中）：<br>Berbnazel Gwolkapwolk is a 6 -limbed Arcturan.</li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>考虑下面的声明：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">fullname</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> fname[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">20</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bard</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">fullname</span> <span class="title">name</span>;</span></span><br><span class="line">    <span class="keyword">int</span> born;</span><br><span class="line">    <span class="keyword">int</span> died;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bard</span> <span class="title">willie</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">bard</span> *<span class="title">pt</span> = &amp;<span class="title">willie</span>;</span></span><br></pre></td></tr></table></figure>a. 用willie标识符标识willie结构的born成员。<br>b. 用pt标识符标识willie结构的born成员。<br>c. 调用scanf() 读入一个用willie标识符标识的born成员的值。<br>d. 调用scanf() 读入一个用pt标识符标识的born成员的值。<br>e. 调用scanf() 读入一个用willie标识符标识的name成员中lname成员的值。<br>f. 调用scanf() 读入一个用pt标识符标识的name成员中lname成员的值。<br>g. 构造一个标识符，标识willie结构变量所表示的姓名中名的第3个字母（英文的名在前）。<br>h. 构造一个表达式，表示willie结构变量所表示的名和姓中的字母总数。</li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>定义一个结构模板以储存这些项：汽车名、马力、EPA（美国环保局）城市交通MPG（每加仑燃料行驶的英里数）评级、轴距和出厂年份。 使用car作为该模版的标记。</li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>假设有如下结构：<pre><code>struct gas&#123;    float distance;    float gals;    float mpg;&#125;;</code></pre>a. 设计一个函数，接受struct gas类型的参数。假设传入的结构包含distance和gals信息。该函数为mpg成员计算正确的值，并把值返回该结构。<br>b. 设计一个函数，接受struct gas类型的参数。假设传入的结构包含distance和gals信息。该函数为mpg成员计算正确的值，并把该值赋给合适的成员。</li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>声明一个标记为choices的枚举，把枚举常量no、yes和maybe分别设置为0、1、2。</li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>声明一个指向函数的指针，该函数返回指向char的指针，接受一个指向char的指针和一个char类型的值。</li></ol><hr><h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>声明4个函数，并初始化一个指向这些函数的指针数组。每个函数都接受两个double类型的参数，返回double类型的值。另外，用两种方法使用该数组调用带10.0和2.5实参的第2个函数。</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>重新编写复习题 5，用月份名的拼写代替月份号（别忘了使用strcmp()）。在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">month</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> abbrev[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">int</span> days;</span><br><span class="line">    <span class="keyword">int</span> monumb;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">month</span> <span class="title">months</span>[12] = &#123;</span></span><br><span class="line">    &#123;<span class="string">&quot;January&quot;</span>, <span class="string">&quot;jan&quot;</span>, <span class="number">31</span>, <span class="number">1</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;February&quot;</span>, <span class="string">&quot;feb&quot;</span>, <span class="number">28</span>, <span class="number">2</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;March&quot;</span>, <span class="string">&quot;mar&quot;</span>, <span class="number">31</span>, <span class="number">3</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;April&quot;</span>, <span class="string">&quot;apr&quot;</span>, <span class="number">30</span>, <span class="number">4</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;May&quot;</span>, <span class="string">&quot;may&quot;</span>, <span class="number">31</span>, <span class="number">5</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;June&quot;</span>, <span class="string">&quot;jun&quot;</span>, <span class="number">30</span>, <span class="number">6</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;July&quot;</span>, <span class="string">&quot;jul&quot;</span>, <span class="number">31</span>, <span class="number">7</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;August&quot;</span>, <span class="string">&quot;aug&quot;</span>, <span class="number">31</span>, <span class="number">8</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;September&quot;</span>, <span class="string">&quot;sep&quot;</span>, <span class="number">30</span>, <span class="number">9</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;October&quot;</span>, <span class="string">&quot;oct&quot;</span>, <span class="number">31</span>, <span class="number">10</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;November&quot;</span>, <span class="string">&quot;nov&quot;</span>, <span class="number">30</span>, <span class="number">11</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;December&quot;</span>, <span class="string">&quot;dec&quot;</span>, <span class="number">31</span>, <span class="number">12</span>&#125;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">days</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> abb[<span class="number">10</span>];</span><br><span class="line">    s_gets(abb, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;天数为%d&quot;</span>, days(abb));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">days</span><span class="params">(<span class="keyword">char</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="class"><span class="keyword">struct</span> <span class="title">month</span> <span class="title">months</span>[];</span></span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>, i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)     <span class="comment">// 遍历对比一遍</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(pt, months[i].abbrev) == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">        total += months[j].days;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个函数，提示用户输入日、月和年。月份可以是月份号、月份名或月份名缩写。然后该程序应返回一年中到用户指定日子（包括这一天） 的总天数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // 平年检测 年月日数据正确检测 年月日超数检测 月全称小写缩写小写</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">months</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> abbrev[<span class="number">4</span>];</span><br><span class="line">    <span class="keyword">int</span> days;</span><br><span class="line">    <span class="keyword">char</span> monumb; <span class="comment">// 月份号使用字符表示</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">months</span> <span class="title">year</span>[12] = &#123;</span></span><br><span class="line">    &#123;<span class="string">&quot;January&quot;</span>, <span class="string">&quot;jan&quot;</span>, <span class="number">31</span>, <span class="string">&#x27;1&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;February&quot;</span>, <span class="string">&quot;feb&quot;</span>, <span class="number">28</span>, <span class="string">&#x27;2&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;March&quot;</span>, <span class="string">&quot;mar&quot;</span>, <span class="number">31</span>, <span class="string">&#x27;3&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;April&quot;</span>, <span class="string">&quot;apr&quot;</span>, <span class="number">30</span>, <span class="string">&#x27;4&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;May&quot;</span>, <span class="string">&quot;may&quot;</span>, <span class="number">31</span>, <span class="string">&#x27;5&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;June&quot;</span>, <span class="string">&quot;jun&quot;</span>, <span class="number">30</span>, <span class="string">&#x27;6&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;July&quot;</span>, <span class="string">&quot;jul&quot;</span>, <span class="number">31</span>, <span class="string">&#x27;7&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;August&quot;</span>, <span class="string">&quot;aug&quot;</span>, <span class="number">31</span>, <span class="string">&#x27;8&#x27;</span>&#125;,</span><br><span class="line">    &#123;<span class="string">&quot;September&quot;</span>, <span class="string">&quot;sep&quot;</span>, <span class="number">30</span>, <span class="string">&#x27;9&#x27;</span>&#125;,</span><br><span class="line">    &#123;&quot;October&quot;, &quot;oct&quot;, 31, &#x27;10&#x27;&#125;,</span><br><span class="line">    &#123;&quot;November&quot;, &quot;nov&quot;, 30, &#x27;11&#x27;&#125;,</span><br><span class="line">    &#123;&quot;December&quot;, &quot;dec&quot;, 31, &#x27;12&#x27;&#125;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">days</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> years, day;</span><br><span class="line">    <span class="keyword">char</span> month[<span class="number">10</span>]; <span class="comment">// 月份号 月份缩写 月份全称全代</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入年\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;years);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入月\n&quot;</span>);</span><br><span class="line">    s_gets(month, <span class="number">10</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入日\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;day);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;在%d平年里从1月1日到%c月%d日总共有%d天&quot;</span>, years, *month, day, days(month, day));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">days</span><span class="params">(<span class="keyword">char</span> *pt, <span class="keyword">int</span> day)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">const</span> <span class="class"><span class="keyword">struct</span> <span class="title">months</span> <span class="title">year</span>[];</span></span><br><span class="line">    <span class="keyword">int</span> i, total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) <span class="comment">// abbrev || name || monumb</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">strcmp</span>(pt, year[i].abbrev) == <span class="number">0</span>) || (<span class="built_in">strcmp</span>(pt, year[i].name) == <span class="number">0</span>) || ((*pt) == year[i].monumb))</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        total += year[j].days;</span><br><span class="line">    *pt = year[i].monumb;   <span class="comment">// 好看</span></span><br><span class="line">    <span class="keyword">return</span> total + day; <span class="comment">// 加到这个月的前一个月 然后加上传过来的这个day值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>修改程序清单 14.2 中的图书目录程序，使其按照输入图书的顺序输出图书的信息，然后按照标题字母的声明输出图书的信息，最后按照价格的升序输出图书的信息。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXTITL 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXAUTL 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXBKS 100 <span class="comment">/* 书籍的最大数量 */</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">book</span> // 作者说 栈可能不够存储这个100个这个结构的 所以使用<span class="title">static</span>可以把它们存储在堆里 但我的<span class="title">pc</span>可以放到栈里</span></span><br><span class="line"><span class="class">&#123;</span>                  <span class="comment">/* 简历 book 模板 */</span></span><br><span class="line">    <span class="keyword">char</span> title[MAXTITL];</span><br><span class="line">    <span class="keyword">char</span> author[MAXAUTL];</span><br><span class="line">    <span class="keyword">float</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">// 按照title首字母顺序打印 从a-z    然后是价格从低到高的升序打印    两个冒泡 一个字符 一个数值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">library</span>[<span class="title">MAXBKS</span>];</span> <span class="comment">/* book 类型结构的数组 */</span></span><br><span class="line">    <span class="keyword">int</span> index, count = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">temp</span>;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please enter the book title.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Press [enter] at the start of a line to stop.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (count &lt; MAXBKS &amp;&amp; s_gets(library[count].title, MAXTITL) != <span class="literal">NULL</span> &amp;&amp; library[count].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Now enter the author.\n&quot;</span>);</span><br><span class="line">        s_gets(library[count].author, MAXAUTL);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Now enter the value.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;library[count++].value);</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;       <span class="comment">/* 清理输入行*/</span></span><br><span class="line">        <span class="keyword">if</span> (count &lt; MAXBKS) <span class="comment">// 检测是否超过数组大小  s_gets函数不返回NULL   接收的第一个标题的元素不为空字符</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Enter the next title.\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Here is the list of your books:\n&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; count; index++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s by %s: $%.2f\n&quot;</span>, library[index].title, library[index].author, library[index].value);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按title的字母升序打印</span></span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; count; index++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = index; j &lt; count; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">strcmp</span>(library[index].title, library[j].title) &gt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    temp = library[index];</span><br><span class="line">                    library[index] = library[j];</span><br><span class="line">                    library[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;按title的字母升序打印&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; count; index++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s by %s: $%.2f\n&quot;</span>, library[index].title, library[index].author, library[index].value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 按价格的升序打印</span></span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; count; index++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = index; j &lt; count; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (library[index].value &gt; library[j].value)</span><br><span class="line">                &#123;</span><br><span class="line">                    temp = library[index];</span><br><span class="line">                    library[index] = library[j];</span><br><span class="line">                    library[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;按价格的升序打印&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; count; index++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s by %s: $%.2f\n&quot;</span>, library[index].title, library[index].author, library[index].value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No books? Too bad.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，创建一个有两个成员的结构模板：<br>a.第1个成员是社会保险号，第2个成员是一个有3个成员的结构，第1个成员代表名，第2个成员代表中间名，第3个成员表示姓。创建并初始化一个内含5个该类型结构的数组。该程序以下面的格式打印数据：<br>Dribble, Flossie M.–– 302039823<br>如果有中间名，只打印它的第1个字母，后面加一个点（.）；如果没有中间名，则不用打印点。编写一个程序进行打印，把结构数组传递给这个函数。<br>b.修改a部分，传递结构的值而不是结构的地址。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">name</span> // 非匿名结构</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> fname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> mname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">person</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">name</span> <span class="title">names</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">a_print</span><span class="params">(struct person *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">a_print_2</span><span class="params">(struct person *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">b_print</span><span class="params">(struct person)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> K 5</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">person</span> <span class="title">shebao</span>[<span class="title">K</span>] = &#123;</span></span><br><span class="line">        &#123;<span class="number">3124567</span>, <span class="string">&quot;san&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;zhang&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3124568</span>, <span class="string">&quot;gang&quot;</span>, <span class="string">&quot;de&quot;</span>, <span class="string">&quot;guo&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3124569</span>, <span class="string">&quot;peng&quot;</span>, <span class="string">&quot;yun&quot;</span>, <span class="string">&quot;yue&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3124570</span>, <span class="string">&quot;si&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;li&quot;</span>&#125;,</span><br><span class="line">        &#123;<span class="number">3124571</span>, <span class="string">&quot;wick&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="string">&quot;John&quot;</span>&#125;&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a-指针转数组表示法\n&quot;</span>); <span class="comment">// 很明显在2020年结构的表示法同样也有指针和数组表示法</span></span><br><span class="line">    a_print(shebao);              <span class="comment">//  而结构指针表示法同样和数组指针表示法一样可以转换为数组表示法</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a-指针表示法\n&quot;</span>);       <span class="comment">// 看a1为原指针转数组  和 a2指针   b2数组就不写了</span></span><br><span class="line">    a_print_2(shebao);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b-数组表示法 传递结构的值\n&quot;</span>);    <span class="comment">// 这个是把结构本身给传过去了  也就是数组的元素</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; K; i++)             <span class="comment">// 我理解的值 是把结构中的值给一个一个声明然后传递</span></span><br><span class="line">        b_print(shebao[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">a_print</span><span class="params">(struct person *shebao)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; K; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((shebao[i].names.mname[<span class="number">0</span>]) != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 如果有中间名 打印一个中间名然后加点</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%10s,%10s %c.-- %8ld\n&quot;</span>, shebao[i].names.lname, shebao[i].names.fname, shebao[i].names.mname[<span class="number">0</span>], shebao[i].id);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%10s,%10s   -- %8ld\n&quot;</span>, shebao[i].names.lname, shebao[i].names.fname, shebao[i].id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">a_print_2</span><span class="params">(struct person *shebao)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; K; i++, shebao++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((shebao-&gt;names.mname[<span class="number">0</span>]) != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 如果有中间名 打印一个中间名然后加点</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%10s,%10s %c.-- %8ld\n&quot;</span>, shebao-&gt;names.lname, shebao-&gt;names.fname, shebao-&gt;names.mname[<span class="number">0</span>], shebao-&gt;id);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%10s,%10s   -- %8ld\n&quot;</span>, shebao-&gt;names.lname, shebao-&gt;names.fname, shebao-&gt;id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">b_print</span><span class="params">(struct person ta)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((ta.names.mname[<span class="number">0</span>]) != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 如果有中间名 打印一个中间名然后加点</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%10s,%10s %c.-- %8ld\n&quot;</span>, ta.names.lname, ta.names.fname, ta.names.mname[<span class="number">0</span>], ta.id);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%10s,%10s   -- %8ld\n&quot;</span>, ta.names.lname, ta.names.fname, ta.id);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个程序满足下面的要求。<br>a. 外部定义一个有两个成员的结构模板name：一个字符串储存名，一个字符串储存姓。<br>b. 外部定义一个有3个成员的结构模板student：一个name类型的结构，一个grade数组储存3个浮点型分数，一个变量储存3个分数平均数。<br>c. 在main()函数中声明一个内含CSIZE（CSIZE = 4）个student类型结构的数组，并初始化这些结构的名字部分。用函数执行d、e、f和g中描述的任务。<br>d. 以交互的方式获取每个学生的成绩，提示用户输入学生的姓名和分数。把分数储存到grade数组相应的结构中。可以在main()函数或其他函数中用循环来完成。<br>e. 计算每个结构的平均分，并把计算后的值赋给合适的成员。<br>f. 打印每个结构的信息。<br>g. 打印班级的平均分，即所有结构的数值成员的平均值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tl_name</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> surname[<span class="number">10</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tl_student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tl_name</span> <span class="title">fullname</span>;</span></span><br><span class="line">    <span class="keyword">double</span> grade[<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">double</span> ave;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">d_fun</span><span class="params">(struct tl_student *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_score_parameter</span><span class="params">(<span class="keyword">double</span> *)</span></span>; <span class="comment">// 靠指针修改数值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_score_Returnvalue</span><span class="params">()</span></span>;       <span class="comment">// 返回指定数值       合并这个函数很简单 但代码会变难看 所以另开了一个函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">e_fun</span><span class="params">(struct tl_student *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f_fun</span><span class="params">(<span class="keyword">const</span> struct tl_student *)</span></span>; <span class="comment">// 我觉得大部分情况下还是指针好一点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">g_fun</span><span class="params">(<span class="keyword">const</span> struct tl_student *)</span></span>; <span class="comment">// 如果想要结构副本 就还是传递结构地址 然后函数指针参数赋值同类型结构来得到副本</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> CSIZE 4</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">tl_student</span> <span class="title">student</span>[<span class="title">CSIZE</span>] =</span></span><br><span class="line"><span class="class">        &#123;</span><span class="comment">// 和初始化数组没太大差别 方法太多</span></span><br><span class="line">         &#123;.fullname.name = <span class="string">&quot;bei&quot;</span>, <span class="string">&quot;liu&quot;</span>&#125;,</span><br><span class="line">         &#123;.fullname.name = <span class="string">&quot;fei&quot;</span>, <span class="string">&quot;zhang&quot;</span>&#125;,</span><br><span class="line">         &#123;.fullname.name = <span class="string">&quot;yu&quot;</span>, <span class="string">&quot;guan&quot;</span>&#125;,</span><br><span class="line">         &#123;.fullname.name = <span class="string">&quot;yi&quot;</span>, <span class="string">&quot;hou&quot;</span>&#125;&#125;;</span><br><span class="line">    d_fun(student);</span><br><span class="line">    e_fun(student);</span><br><span class="line">    f_fun(student);</span><br><span class="line">    g_fun(student);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">g_fun</span><span class="params">(<span class="keyword">const</span> struct tl_student *student)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CSIZE; i++) <span class="comment">// 所有同学的总成绩</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) <span class="comment">// 一位同学的总成绩</span></span><br><span class="line">            total += student[i].grade[j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;所有同学的平均成绩为%.lf\n&quot;</span>, total / CSIZE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">f_fun</span><span class="params">(<span class="keyword">const</span> struct tl_student *student)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CSIZE; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%10s %10s同学的语文成绩为 %3.lf, 数学成绩为 %3.lf, 英语成绩为 %3.lf, 三科平均分为%3.lf\n&quot;</span>, student[i].fullname.surname, student[i].fullname.name, student[i].grade[<span class="number">0</span>], student[i].grade[<span class="number">1</span>], student[i].grade[<span class="number">2</span>], student[i].ave);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">e_fun</span><span class="params">(struct tl_student *student)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; CSIZE; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) <span class="comment">// 一位同学的平均成绩</span></span><br><span class="line">            total += student[i].grade[j];</span><br><span class="line">        student[i].ave = total / <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">d_fun</span><span class="params">(struct tl_student *student)</span> <span class="comment">// 首先解决指定学生的问题 像1的遍历对比检测</span></span></span><br><span class="line"><span class="function"></span>&#123;                                      <span class="comment">// 要求用户输入全称  然后and 也就是 姓和名都要对比检测 &amp;&amp; 通过</span></span><br><span class="line">    <span class="keyword">char</span> student_surname[<span class="number">10</span>];          <span class="comment">// 在用户输入姓后 提示所有有这个姓的人 就四个元素还是不写了吧 没啥技术含量</span></span><br><span class="line">    <span class="keyword">char</span> student_name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> *subject[<span class="number">3</span>] = &#123;<span class="string">&quot;语文&quot;</span>, <span class="string">&quot;数学&quot;</span>, <span class="string">&quot;英语&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> no_stuname = <span class="number">1</span>; <span class="comment">// 0 代表没有这个同学 1代表有这个同学</span></span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;请输入学生的姓&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (s_gets(student_surname, <span class="number">10</span>) != <span class="literal">NULL</span> &amp;&amp; student_surname[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        no_stuname = <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;请输入学生的名&quot;</span>);</span><br><span class="line">        s_gets(student_name, <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; CSIZE; i++) <span class="comment">// 我的编译器是支持我指针转数组的   然后注意 如果要用指针递增的话别忘了for循环外初始化(还原)指针指向的地址</span></span><br><span class="line">        &#123;                           <span class="comment">// 这就需要一个同类型的指针来保存这个地址了 比指针多了一个步骤吧</span></span><br><span class="line">            <span class="keyword">if</span> ((<span class="built_in">strcmp</span>(student_surname, student[i].fullname.surname) == <span class="number">0</span>) &amp;&amp; (<span class="built_in">strcmp</span>(student_name, student[i].fullname.name) == <span class="number">0</span>))</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (i == (CSIZE - <span class="number">1</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;没有找到%s %s同学的信息\n&quot;</span>, student_surname, student_name);</span><br><span class="line">                no_stuname = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (no_stuname == <span class="number">0</span>) <span class="comment">// 这里嵌套了而continue均只跳过内循环 所有用了这个法子</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;请输入下一位学生的姓 (空行退出)&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入%s %s同学的%s成绩&quot;</span>, student[i].fullname.surname, student[i].fullname.name, subject[j]);</span><br><span class="line">            get_score_parameter(&amp;student[i].grade[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>; <span class="comment">/* 清理输入行*/</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;请输入下一位学生的姓 (空行退出)&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_score_parameter</span><span class="params">(<span class="keyword">double</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, pt) != <span class="number">1</span> || *pt &lt; <span class="number">0</span> || *pt &gt; <span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            ;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">get_score_Returnvalue</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> score;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;score) != <span class="number">1</span> || score &lt; <span class="number">0</span> || score &gt; <span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            ;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">// 清理输入行中剩余的字符</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>一个文本文件中保存着一个垒球队的信息。每行数据都是这样排列：<br>4 Jessie Joybat 5 2 1 1<br>第1项是球员号，为方便起见，其范围是0～18。第2项是球员的名。第3项是球员的姓。名和姓都是一个单词。第4项是官方统计的球员上场次数。 接着3项分别是击中数、走垒数和打点（RBI）。文件可能包含多场比赛的 数据，所以同一位球员可能有多行数据，而且同一位球员的多行数据之间可能有其他球员的数据。编写一个程序，把数据储存到一个结构数组中。该结构中的成员要分别表示球员的名、姓、上场次数、击中数、走垒数、打点和 安打率（稍后计算）。可以使用球员号作为数组的索引。该程序要读到文件结尾，并统计每位球员的各项累计总和。<br>世界棒球统计与之相关。例如，一次走垒和触垒中的失误不计入上场次数，但是可能产生一个RBI。但是该程序要做的是像下面描述的一样读取和处理数据文件，不会关心数据的实际含义。<br>要实现这些功能，最简单的方法是把结构的内容都初始化为零，把文件中的数据读入临时变量中，然后将其加入相应的结构中。程序读完文件后，应计算每位球员的安打率，并把计算结果储存到结构的相应成员中。计算安打率是用球员的累计击中数除以上场累计次数。这是一个浮点数计算。最后，程序结合整个球队的统计数据，一行显示一位球员的累计数据。<figure class="highlight c"><figcaption><span> </span><a href="//">test.txt文件</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">8</span> John Wick <span class="number">1</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span></span><br><span class="line"><span class="number">8</span> John Wick <span class="number">5</span> <span class="number">1</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line"><span class="number">1</span> David Tennant <span class="number">2</span> <span class="number">0</span> <span class="number">1</span> <span class="number">7</span></span><br><span class="line"><span class="number">2</span> Hugo Weaving <span class="number">3</span> <span class="number">0</span> <span class="number">4</span> <span class="number">4</span></span><br><span class="line"><span class="number">3</span> Matt Smith <span class="number">4</span> <span class="number">7</span> <span class="number">4</span> <span class="number">2</span></span><br><span class="line"><span class="number">4</span> Jessie Joybat <span class="number">5</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">5</span> Karen Sheila <span class="number">6</span> <span class="number">9</span> <span class="number">8</span> <span class="number">7</span></span><br><span class="line"><span class="number">4</span> Jessie Joybat <span class="number">7</span> <span class="number">5</span> <span class="number">1</span> <span class="number">6</span></span><br><span class="line"><span class="number">7</span> Granville Jones <span class="number">5</span> <span class="number">2</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">8</span> John Wick <span class="number">1</span> <span class="number">6</span> <span class="number">3</span> <span class="number">7</span></span><br><span class="line"><span class="number">9</span> Chuck Langer <span class="number">7</span> <span class="number">5</span> <span class="number">9</span> <span class="number">3</span></span><br><span class="line"><span class="number">11</span> Alan White <span class="number">6</span> <span class="number">7</span> <span class="number">8</span> <span class="number">0</span></span><br><span class="line"><span class="number">11</span> Alan White <span class="number">6</span> <span class="number">1</span> <span class="number">8</span> <span class="number">7</span></span><br><span class="line"><span class="number">13</span> Tilda Swinton <span class="number">1</span> <span class="number">3</span> <span class="number">8</span> <span class="number">0</span></span><br><span class="line"><span class="number">2</span> Hugo Weaving <span class="number">3</span> <span class="number">8</span> <span class="number">7</span> <span class="number">5</span></span><br><span class="line"><span class="number">8</span> John Wick <span class="number">5</span> <span class="number">1</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line"><span class="number">16</span> Alan White <span class="number">2</span> <span class="number">8</span> <span class="number">5</span> <span class="number">7</span></span><br><span class="line"><span class="number">4</span> Jessie Joybat <span class="number">3</span> <span class="number">1</span> <span class="number">9</span> <span class="number">8</span></span><br><span class="line"><span class="number">2</span> Hugo Weaving <span class="number">2</span> <span class="number">9</span> <span class="number">7</span> <span class="number">8</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FILE_ <span class="meta-string">&quot;test.txt&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> P_num 18 <span class="comment">// 声明《CPP》在这题之前并没有教relloc 其次，第二段文字中倒数第二句 球员号可以直接作为数组的索引</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TL_team</span>   // 同时这段第一句 其范围是0~18 ，作者做了限制 意以表明这个程序就18了 所以你会发现我的程序非常简单</span></span><br><span class="line"><span class="class">&#123;</span>                <span class="comment">// 使用球员号当作数组索引就少了非常多的代码</span></span><br><span class="line">    <span class="keyword">int</span> num; <span class="comment">// 球员号</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="keyword">char</span> surname[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">int</span> G;      <span class="comment">// G - Games Played 上场次数</span></span><br><span class="line">    <span class="keyword">int</span> AB;     <span class="comment">// AB - At Bats - 击中数</span></span><br><span class="line">    <span class="keyword">int</span> SB;     <span class="comment">// steala base 走垒数</span></span><br><span class="line">    <span class="keyword">int</span> RBI;    <span class="comment">// AB/RBI - At-Bats per Runs Batted In - 打点</span></span><br><span class="line">    <span class="keyword">double</span> AVG; <span class="comment">// AVG - Batting Average 安打率</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">TL_team</span> <span class="title">team</span>[<span class="title">P_num</span>] = &#123;</span><span class="number">0</span>&#125;, temp;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(FILE_, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Can&#x27;t open \&quot;%s\&quot; file.\n&quot;</span>, FILE_); <span class="comment">// fs接收数值失败</span></span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d %s %s %d %d %d %d\n&quot;</span>, &amp;temp.num, temp.surname, temp.name, &amp;temp.G, &amp;temp.AB, &amp;temp.SB, &amp;temp.RBI) == <span class="number">7</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(team[temp.num].surname, temp.surname);</span><br><span class="line">        <span class="built_in">strcpy</span>(team[temp.num].name, temp.name);</span><br><span class="line">        team[temp.num].num = temp.num;</span><br><span class="line">        team[temp.num].G += temp.G;</span><br><span class="line">        team[temp.num].AB += temp.AB;</span><br><span class="line">        team[temp.num].SB += temp.SB;</span><br><span class="line">        team[temp.num].RBI += temp.RBI;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; P_num; i++) <span class="comment">// 没有球员的球员号为0</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (team[i].num != <span class="number">0</span>) <span class="comment">// 根据球员号输出</span></span><br><span class="line">        &#123;</span><br><span class="line">            team[i].AVG = (<span class="keyword">double</span>)team[i].AB / (<span class="keyword">double</span>)team[i].G;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号球员%10s %10s上场%2d次,击中%2d次,走垒%2d次,打点%2d次, 安打率为%.2lf\n&quot;</span>, team[i].num, team[i].surname, team[i].name, team[i].G, team[i].AB, team[i].SB, team[i].RBI, team[i].AVG);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>修改程序清单 14.14，从文件中读取每条记录并显示出来，允许用户删除记录或修改记录的内容。如果删除记录，把空出来的空间留给下一个要读入的记录。要修改现有的文件内容，必须用”r+b”模式，而不是”a+b”模式。而且，必须更加注意定位文件指针，防止新加入的记录覆盖现有记录。最简单的方法是改动储存在内存中的所有数据，然后再把最后的信息写入文件。跟踪的一个方法是在book结构中添加一个成员表示是否该项被删除。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXTITL 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXAUTL 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXBKS 10 <span class="comment">/* 最大书籍数量 */</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">book</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> title[MAXTITL];</span><br><span class="line">    <span class="keyword">char</span> author[MAXAUTL];</span><br><span class="line">    <span class="keyword">float</span> value;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_book</span><span class="params">(struct book *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod_book</span><span class="params">(struct book *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del_book</span><span class="params">(struct book *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">library</span>[<span class="title">MAXBKS</span>] = &#123;</span><span class="number">0</span>&#125;; <span class="comment">/* 结构数组 */</span></span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>, index, filecount, status = <span class="number">0</span>;</span><br><span class="line">    FILE *pbooks;</span><br><span class="line">    <span class="keyword">int</span> size = <span class="keyword">sizeof</span>(struct book);</span><br><span class="line">    <span class="keyword">if</span> ((pbooks = fopen(<span class="string">&quot;book.dat&quot;</span>, <span class="string">&quot;r+b&quot;</span>)) == <span class="literal">NULL</span>) <span class="comment">// r+模式要求文件必须存在</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((pbooks = fopen(<span class="string">&quot;book.dat&quot;</span>, <span class="string">&quot;w+b&quot;</span>)) == <span class="literal">NULL</span>) <span class="comment">// 所以用户第一次使用程序时将执行这个语句</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fputs</span>(<span class="string">&quot;Can&#x27;t open book.dat file\n&quot;</span>, <span class="built_in">stderr</span>);</span><br><span class="line">            status = <span class="number">1</span>; <span class="comment">// 说明book.dat是新建的 所以就没必要进行下面的接收结构数组并打印了</span></span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    rewind(pbooks); <span class="comment">/* 定位到文件开始 */</span></span><br><span class="line">    <span class="keyword">if</span> (status == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (count &lt; MAXBKS &amp;&amp; fread(&amp;library[count], size, <span class="number">1</span>, pbooks) == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (count == <span class="number">0</span>)</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">&quot;Current contents of book.dat:&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (library[count].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s by %s: $%.2f\n&quot;</span>, library[count].title, library[count].author, library[count].value);</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;请输入下面菜单中的选项&quot;</span>);</span><br><span class="line">    filecount = count;               <span class="comment">/// 这个语句</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXBKS; i++) <span class="comment">// 检测图书馆还能不能放书</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] == <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 因规定任何数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (library[MAXBKS - <span class="number">1</span>].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 最后一本也不为空</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fputs</span>(<span class="string">&quot;The book.dat file is full.&quot;</span>, <span class="built_in">stderr</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;a.添加书籍    b.修改书籍    c.删除书籍    d.退出&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;d&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">            add_book(library, count);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">            mod_book(library);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">            del_book(library);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;输入错误, 请输入下面菜单中的选项&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;a.添加书籍    b.修改书籍    c.删除书籍    d.退出&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXBKS; i++) <span class="comment">// 打印在执行函数后的结构数组状态</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 因规定任何数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d号 《%s》 by %s: $%.2f\n&quot;</span>, i, library[i].title, library[i].author, library[i].value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;a.添加书籍    b.修改书籍    c.删除书籍    d.退出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;以下数据将会保存在文件:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXBKS; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 因规定任何数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d号 《%s》 by %s: $%.2f\n&quot;</span>, i, library[i].title, library[i].author, library[i].value);</span><br><span class="line">    &#125;</span><br><span class="line">    rewind(pbooks);</span><br><span class="line">    fwrite(&amp;library[<span class="number">0</span>], size, MAXBKS, pbooks);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Bye.\n&quot;</span>);</span><br><span class="line">    fclose(pbooks);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mod_book</span><span class="params">(struct book *library)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAXBKS; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 因规定任何数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d号 《%s》 by %s: $%.2f\n&quot;</span>, i, library[i].title, library[i].author, library[i].value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">temp</span>;</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;请问你要修改几号书籍&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">while</span> ((<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;index) != <span class="number">1</span>) || (index &gt; <span class="number">10</span>) || (index &lt; <span class="number">0</span>)) <span class="comment">// 书籍保护 防止垃圾值</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;输入错误 请选择以下图书&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAXBKS; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 因规定任何数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d号 《%s》 by %s: $%.2f\n&quot;</span>, i, library[i].title, library[i].author, library[i].value);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Please modify new book titles.&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Press [enter] at the start of a line to stop.&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (s_gets(temp.title, MAXTITL) != <span class="literal">NULL</span> &amp;&amp; temp.title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Now enter the author.&quot;</span>);</span><br><span class="line">        s_gets(temp.author, MAXAUTL);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Now enter the value.&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;temp.value);</span><br><span class="line">        library[index] = temp; <span class="comment">// 赋值</span></span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>; <span class="comment">/* 清理输入行 */</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_book</span><span class="params">(struct book *library, <span class="keyword">int</span> count)</span> <span class="comment">// count为当前数组中有多少个结构</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">temp</span>;</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Please add new book titles.&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Press [enter] at the start of a line to stop.&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAXBKS; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] == <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 如果书名是空的 因为规定数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (s_gets(temp.title, MAXTITL) != <span class="literal">NULL</span> &amp;&amp; temp.title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Now enter the author.&quot;</span>);</span><br><span class="line">        s_gets(temp.author, MAXAUTL);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Now enter the value.&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;temp.value);</span><br><span class="line">        library[i] = temp; <span class="comment">// 赋值</span></span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>; <span class="comment">/* 清理输入行 */</span></span><br><span class="line">        <span class="keyword">for</span> (; i &lt; MAXBKS; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] == <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 如果书名是空的 因为规定数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter the next title.&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Press [enter] at the start of a line to stop.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del_book</span><span class="params">(struct book *library)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">book</span> <span class="title">empty</span> = &#123;</span><span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXBKS; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (library[i].title[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// 因规定任何数据不能为空 所以这一条应该就不会有什么问题了</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d号 《%s》 by %s: $%.2f\n&quot;</span>, i, library[i].title, library[i].author, library[i].value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;请问你要删除几号书籍&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;index);</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">    library[index] = empty;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;删除完成&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>巨人航空公司的机群由12个座位的飞机组成。它每天飞行一个航班。根据下面的要求，编写一个座位预订程序。<br>a.该程序使用一个内含 12 个结构的数组。每个结构中包括：一个成员表示座位编号、一个成员表示座位是否已被预订、一个成员表示预订人的名、一个成员表示预订人的姓。<br>b.该程序显示下面的菜单：<br>To choose a function, enter its letter label:<br>a) Show number of empty seats<br>b) Show list of empty seats<br>c) Show alphabetical list of seats<br>d) Assign a customer to a seat assignment<br>e) Delete a seat assignment<br>f) Quit<br>c.该程序能成功执行上面给出的菜单。选择d)和e)要提示用户进行额外输入，每个选项都能让用户中止输入。<br>d.执行特定程序后，该程序再次显示菜单，除非用户选择f)。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">9. 巨人航空公司（编程练习 8）需要另一架飞机（容量相同），每天飞4 班（航班 102、311、444 和519）。把程序扩展为可以处理4个航班。用一个顶层菜单提供航班选择和退出。选择一个特定航班，就会出现和编程练习 8类似的菜单。但是该菜单要添加一个新选项：确认座位分配。而且，菜单中的退出是返回顶层菜单。每次显示都要指明当前正在处理的航班号。另外，座位分配显示要指明确认状态。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">airplane</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> status;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="keyword">char</span> surname[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> menu[<span class="number">200</span>] = &#123;<span class="string">&quot;要选择函数，请输入其字母标签：\na） 显示空座位数      b） 显示空座位列表\nc） 显示按字母顺序排列的座位列表\nd） 为客户分配座位    e） 删除座位分配\nf） 退出&quot;</span>&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> NUM 12</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EOES</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 空座位数量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LOES</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 空座位列表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ALOS</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 按字母顺序排列的座位列表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ACTS</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 为客户分配座位</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DASA</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 删除座位分配</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">airplane</span> <span class="title">seats</span>[<span class="title">NUM</span>] = &#123;</span><span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUM; i++) <span class="comment">// 座位号初始化 如果不这样 那ALOS函数会出现一些小问题</span></span><br><span class="line">        seats[i].i = (i + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(menu);</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;f&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            EOES(seats);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            LOES(seats);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            ALOS(seats);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            ACTS(seats);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            DASA(seats);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;输入错误, 请输入下面菜单中的选项&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(menu);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(menu);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EOES</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUM; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status == <span class="number">0</span>)</span><br><span class="line">            num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;目前飞机上还有%d个空位\n&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LOES</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUM; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号座位 未预定\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ALOS</span><span class="params">(struct airplane seats[])</span> <span class="comment">// 因为实现方法原因这里给个副本</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">airplane</span> <span class="title">temp</span>;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUM; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; NUM; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(seats[i].surname, seats[j].surname) &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = seats[i];</span><br><span class="line">                seats[i] = seats[j];</span><br><span class="line">                seats[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUM; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号 已预定 %s %s\n&quot;</span>, seats[i].i, seats[i].surname, seats[i].name);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号 未预定\n&quot;</span>, seats[i].i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ACTS</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;请问你要选择几号座位 (q.退出)&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;index) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">if</span> (seats[index - <span class="number">1</span>].status)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d号座位已经有人预定了&quot;</span>, index);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            seats[index - <span class="number">1</span>].status = <span class="number">1</span>;</span><br><span class="line">            seats[index - <span class="number">1</span>].i = index; <span class="comment">// warn</span></span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;请输入你的姓氏&quot;</span>);</span><br><span class="line">            s_gets(seats[index - <span class="number">1</span>].surname, <span class="number">10</span>);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;请输入你的名字&quot;</span>);</span><br><span class="line">            s_gets(seats[index - <span class="number">1</span>].name, <span class="number">10</span>);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;预定成功&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DASA</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">airplane</span> <span class="title">temp</span> = &#123;</span><span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; NUM; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号 已预定 %s %s\n&quot;</span>, i + <span class="number">1</span>, seats[i].surname, seats[i].name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;请问要删除哪个预定过的座位 (q.退出)&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;index) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[index - <span class="number">1</span>].status == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;这个座位并没有被预定&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        seats[index - <span class="number">1</span>] = temp;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>巨人航空公司（编程练习 8）需要另一架飞机（容量相同），每天飞4 班（航班 102、311、444 和519）。把程序扩展为可以处理4个航班。用一个顶层菜单提供航班选择和退出。选择一个特定航班，就会出现和编程练习 8类似的菜单。但是该菜单要添加一个新选项：确认座位分配。而且，菜单中的退出是返回顶层菜单。每次显示都要指明当前正在处理的航班号。另外，座位分配显示要指明确认状态。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;      // 两个switch都可以用函数数组来代替</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">airplane</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> status;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        <span class="keyword">char</span> surname[<span class="number">10</span>];</span><br><span class="line">        <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> menu[<span class="number">200</span>] = &#123;<span class="string">&quot;要选择函数，请输入其字母标签：\na） 显示空座位数      b） 显示空座位列表\nc） 显示按字母顺序排列的座位列表\nd） 为客户分配座位    e） 删除座位分配\nf） 退出&quot;</span>&#125;;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> flight_sec[<span class="number">100</span>] = &#123;<span class="string">&quot;请选择一架航班 (q.退出)\n1.歼200 102    2.B-29   311\n3.EP-33 444    4.CF-100 519&quot;</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MAME</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EOES</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 空座位数量</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LOES</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 空座位列表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ALOS</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 按字母顺序排列的座位列表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ACTS</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 为客户分配座位</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DASA</span><span class="params">(struct airplane *)</span></span>; <span class="comment">// 删除座位分配</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">puts</span>(flight_sec);</span><br><span class="line">    <span class="keyword">int</span> T, F;</span><br><span class="line">    <span class="keyword">while</span> ((T = getchar()) != <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">switch</span> (T)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            MAME(<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            MAME(<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            MAME(<span class="number">3</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            MAME(<span class="number">4</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;输入错误 请输入以下航班序号&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(flight_sec);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">        <span class="built_in">puts</span>(flight_sec);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MAME</span><span class="params">(<span class="keyword">int</span> F)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">airplane</span> <span class="title">seats</span>[4][12] = &#123;</span><span class="number">0</span>&#125;; <span class="comment">// 先来做一些二维数组的改变</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">12</span>; j++)</span><br><span class="line">            seats[i][j].i = (j + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> *Fname[<span class="number">4</span>] = &#123;</span><br><span class="line">        <span class="string">&quot;歼200 102&quot;</span>,</span><br><span class="line">        <span class="string">&quot;B-29 311&quot;</span>,</span><br><span class="line">        <span class="string">&quot;EP-33 444&quot;</span>,</span><br><span class="line">        <span class="string">&quot;CF-100 519&quot;</span>&#125;;</span><br><span class="line">    system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前航班为%d号%s航班\n&quot;</span>, F, Fname[F - <span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">puts</span>(menu);</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;f&#x27;</span>) <span class="comment">// 这边做成一个函数 然后就是一维那边是作为一个参数  传过来的</span></span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;当前航班为%d号%s航班\n&quot;</span>, F, Fname[F - <span class="number">1</span>]);</span><br><span class="line">            EOES(seats[F - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;当前航班为%d号%s航班\n&quot;</span>, F, Fname[F - <span class="number">1</span>]);</span><br><span class="line">            LOES(seats[F - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;当前航班为%d号%s航班\n&quot;</span>, F, Fname[F - <span class="number">1</span>]);</span><br><span class="line">            ALOS(seats[F - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;当前航班为%d号%s航班\n&quot;</span>, F, Fname[F - <span class="number">1</span>]);</span><br><span class="line">            ACTS(seats[F - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;e&#x27;</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;当前航班为%d号%s航班\n&quot;</span>, F, Fname[F - <span class="number">1</span>]);</span><br><span class="line">            DASA(seats[F - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;输入错误, 请输入下面菜单中的选项&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(menu);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">puts</span>(menu);</span><br><span class="line">    &#125;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">EOES</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status == <span class="number">0</span>)</span><br><span class="line">            num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;目前飞机上还有%d个空位\n&quot;</span>, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LOES</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号座位 未预定\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ALOS</span><span class="params">(struct airplane seats[])</span> <span class="comment">// 因为实现方法原因这里给个副本</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">airplane</span> <span class="title">temp</span>;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; <span class="number">12</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(seats[i].surname, seats[j].surname) &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = seats[i];</span><br><span class="line">                seats[i] = seats[j];</span><br><span class="line">                seats[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号 已预定 %s %s\n&quot;</span>, seats[i].i, seats[i].surname, seats[i].name);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号 未预定\n&quot;</span>, seats[i].i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ACTS</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">airplane</span> <span class="title">temp</span>;</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;请问你要选择几号座位 (q.退出)&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;index) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">if</span> (seats[index - <span class="number">1</span>].status)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d号座位已经有人预定了\n&quot;</span>, index);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;请问你要选择几号座位 (q.退出)&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            temp.status = <span class="number">1</span>;</span><br><span class="line">            temp.i = index;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;请输入你的姓氏&quot;</span>);</span><br><span class="line">            s_gets(temp.surname, <span class="number">10</span>);</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;请输入你的名字&quot;</span>);</span><br><span class="line">            s_gets(temp.name, <span class="number">10</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号 %s %s\n确认要预定吗(Y ? N)&quot;</span>, temp.i, temp.surname, temp.name);</span><br><span class="line">            <span class="keyword">char</span> st;</span><br><span class="line">            <span class="keyword">if</span> ((st = getchar()) == <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                seats[index - <span class="number">1</span>] = temp;</span><br><span class="line">                system(<span class="string">&quot;CLS&quot;</span>);</span><br><span class="line">                <span class="built_in">puts</span>(<span class="string">&quot;预定成功&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fflush(<span class="built_in">stdin</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DASA</span><span class="params">(struct airplane *seats)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">airplane</span> <span class="title">temp</span> = &#123;</span><span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[i].status)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%2d号 已预定 %s %s\n&quot;</span>, i + <span class="number">1</span>, seats[i].surname, seats[i].name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;请问要删除哪个预定过的座位 (q.退出)&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;index) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (seats[index - <span class="number">1</span>].status == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">puts</span>(<span class="string">&quot;这个座位并没有被预定&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        seats[index - <span class="number">1</span>] = temp;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>编写一个程序，通过一个函数指针数组实现菜单。例如，选择菜单中的 a，将激活由该数组第 1个元素指向的函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun_a</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun_b</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">fun_c</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">void</span> <span class="params">(*pfun)</span><span class="params">(<span class="keyword">char</span> *)</span></span>;   <span class="comment">// 好像是不能指向任意类型的参数的</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    pfun fun[<span class="number">3</span>] = &#123;</span><br><span class="line">        fun_a,</span><br><span class="line">        fun_b,</span><br><span class="line">        fun_c&#125;;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;a.fun_a    b.fun_b    c.fun_c&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    ch = getchar();</span><br><span class="line">    <span class="keyword">switch</span> (ch)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">        fun[<span class="number">0</span>](<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">        fun[<span class="number">1</span>](<span class="string">&quot;a&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">        fun[<span class="number">2</span>](<span class="string">&quot;3.14&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fun_a</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, str);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun_b</span><span class="params">(<span class="keyword">char</span> *i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, *i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">3.14</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">fun_c</span><span class="params">(<span class="keyword">char</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Π = %s\n&quot;</span>, pt);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十一题-1"><a href="#第十一题-1" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>编写一个名为transform()的函数，接受4个参数：内含double类型数据的源数组名、内含double类型数据的目标数组名、一个表示数组元素个数的int类型参数、函数名（或等价的函数指针）。transform()函数应把指定函数应用于源数组中的每个元素，并把返回值储存在目标数组中。例如：<br>transform(source, target, 100, sin);<br>该声明会把target[0]设置为sin(source[0])，等等，共有100个元素。在一个程序中调用transform()4次，以测试该函数。分别使用math.h函数库中的两个函数以及自定义的两个函数作为参数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S 100</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transfrom</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>, <span class="keyword">double</span> (*pfun)(<span class="keyword">double</span>))</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun_a</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun_b</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> target[<span class="number">100</span>], source[<span class="number">100</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    transfrom(source, target, S, <span class="built_in">sqrt</span>);</span><br><span class="line">    transfrom(source, target, S, cbrt);</span><br><span class="line">    transfrom(source, target, S, fun_a);</span><br><span class="line">    transfrom(source, target, S, fun_b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">transfrom</span><span class="params">(<span class="keyword">double</span> *source, <span class="keyword">double</span> *target, <span class="keyword">int</span> i, <span class="keyword">double</span> (*pfun)(<span class="keyword">double</span>))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++) <span class="comment">// 为了方便显示 改成了10</span></span><br><span class="line">    &#123;</span><br><span class="line">        target[j] = pfun(source[j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, target[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun_a</span><span class="params">(<span class="keyword">double</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand((<span class="keyword">int</span>)num);</span><br><span class="line">    <span class="keyword">return</span> rand();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">fun_b</span><span class="params">(<span class="keyword">double</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num / num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第十三章复习题目和编程练习题的答案</title>
      <link href="posts/d7704980.html"/>
      <url>posts/d7704980.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第十三章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>下面的程序有什么问题？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *fp;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    fp = fopen(<span class="string">&quot;gelatin&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; <span class="number">30</span>; k++)</span><br><span class="line">        <span class="built_in">fputs</span>(fp, <span class="string">&quot;Nanette eats gelatin.&quot;</span>);</span><br><span class="line">    fclose(<span class="string">&quot;gelatin&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>下面的程序完成什么任务？（假设在命令行环境中运行）<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">if</span> (argc &lt; <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getc(fp)) != EOF)</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isdigit</span>(ch))</span><br><span class="line">            <span class="built_in">putchar</span>(ch);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li><p>假设程序中有下列语句：</p><pre><code> #include &lt;stdio.h&gt; FILE *fp1, *fp2; char ch; fp1 = fopen(&quot;terky&quot;, &quot;r&quot;); fp2 = fopen(&quot;jerky&quot;, &quot;w&quot;); 另外，假设成功打开了两个文件。补全下面函数调用中缺少的参数： a.ch = getc(); b.fprintf(, &quot;%c\n&quot;, ); c.putc(, ); d.fclose(); /* 关闭terky文件 */</code></pre></li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，不接受任何命令行参数或接受一个命令行参数。如果有一个参数，将其解释为文件名；如果没有参数，使用标准输入（stdin）作为输入。假设输入完全是浮点数。该程序要计算和报告输入数字的算术平均值。</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个程序，接受两个命令行参数。第1个参数是字符，第2个参数是文件名。要求该程序只打印文件中包含给定字符的那些行。注意C程序根据’\n’识别文件中的行。假设所有行都不超过256个字符，你可能会想到用fgets()。</li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>二进制文件和文本文件有何区别？二进制流和文本流有何区别？</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>1<br>a.分别用fprintf()和fwrite()储存8238201有何区别？<br>b.分别用putc()和fwrite()储存字符S有何区别？</li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>下面语句的区别是什么？<br>printf(“Hello, %s\n”, name);<br>fprintf(stdout, “Hello, %s\n”, name);<br>fprintf(stderr, “Hello, %s\n”, name);</li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>“a+”、”r+”和”w+”模式打开的文件都是可读写的。哪种模式更适合用 来更改文件中已有的内容？</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>修改程序清单13.1中的程序，要求提示用户输入文件名，并读取用户输入的信息，不使用命令行参数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; // 提供 exit()的原型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // strchr()要用</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ch;   <span class="comment">// 读取文件时，储存每个字符的地方</span></span><br><span class="line">    FILE *fp; <span class="comment">// “文件指针”</span></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> filename[<span class="number">50</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 文件名限定50</span></span><br><span class="line">    s_gets(filename, <span class="number">50</span>);</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(filename, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Can&#x27;t open %s\n&quot;</span>, filename);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getc(fp)) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        putc(ch, <span class="built_in">stdout</span>); <span class="comment">// 与 putchar(ch); 相同</span></span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nFile %s has %lu characters\n&quot;</span>, filename, count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个文件拷贝程序，该程序通过命令行获取原始文件名和拷贝文件名。尽量使用标准I/O和二进制模式。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fpr, *fpa;</span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((fpr = fopen(argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Can&#x27;t open %s file.\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((fpa = fopen(argv[<span class="number">2</span>], <span class="string">&quot;a+&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Can&#x27;t open %s file.\n&quot;</span>, argv[<span class="number">2</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ((ch = getc(fpr)) != EOF)</span><br><span class="line">            putc(ch, fpa);</span><br><span class="line">        rewind(fpa);</span><br><span class="line">        <span class="keyword">while</span> ((<span class="built_in">fscanf</span>(fpa, <span class="string">&quot;%s&quot;</span>, str)) == <span class="number">1</span>) <span class="comment">// 从头开始读取文件</span></span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;%s&quot;</span>, str);</span><br><span class="line">        fclose(fpr);</span><br><span class="line">        fclose(fpa);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二进制模式</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fpr, *fpa;</span><br><span class="line">    <span class="keyword">char</span> str[N];</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((fpr = fopen(argv[<span class="number">1</span>], <span class="string">&quot;rb&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Can&#x27;t open %s file.\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((fpa = fopen(argv[<span class="number">2</span>], <span class="string">&quot;ab+&quot;</span>)) == <span class="literal">NULL</span>) <span class="comment">// 因为后期要读一下 所以就给了个 +</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Can&#x27;t open %s file.\n&quot;</span>, argv[<span class="number">2</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ((fgets(str, N, fpr)) != EOF)</span><br><span class="line">            fwrite(str, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), N, fpa);</span><br><span class="line">        rewind(fpa);</span><br><span class="line">        <span class="keyword">while</span> ((fread(str, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), N, fpa)) != <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">puts</span>(str);</span><br><span class="line">        fclose(fpr);</span><br><span class="line">        fclose(fpa);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>); <span class="comment">// tips略</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个文件拷贝程序，提示用户输入文本文件名，并以该文件名作为原始文件名和输出文件名。该程序要使用 ctype.h 中的 toupper()函数，在写入到输出文件时把所有文本转换成大写。使用标准I/O和文本模式。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FLEN 50 <span class="comment">// 文件名最大长度</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN 100 <span class="comment">// 每循环要处理的字节数</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> fn[FLEN] = &#123;<span class="number">0</span>&#125;, name[FLEN] = &#123;<span class="number">0</span>&#125;; <span class="comment">// 存储文件名</span></span><br><span class="line">    FILE *f1, *f2;</span><br><span class="line">    <span class="keyword">char</span> str[LEN] = &#123;<span class="number">0</span>&#125;;        <span class="comment">//</span></span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    s_gets(fn, FLEN);                   <span class="comment">// 抄的cpp</span></span><br><span class="line">    <span class="built_in">strncpy</span>(name, fn, FLEN - <span class="number">5</span>);        <span class="comment">// 这一步为了确保能添加.red字符和一个空字符 总共是5个空间</span></span><br><span class="line">    name[FLEN - <span class="number">5</span>] = <span class="string">&#x27;\0&#x27;</span>;              <span class="comment">// 这一步确保name的阈值</span></span><br><span class="line">    <span class="built_in">strcat</span>(name, <span class="string">&quot;.upp&quot;</span>);               <span class="comment">// strcat会检测第一个空字符 如果元素一很短 那么程序很正常</span></span><br><span class="line">    <span class="keyword">if</span> ((f1 = fopen(fn, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)  <span class="comment">// 的结束，如果元素一很长那么会有15行的空字符来修复</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can open the file \&quot;%s\&quot;\n&quot;</span>, fn);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((f2 = fopen(name, <span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can open the file \&quot;%s\&quot;\n&quot;</span>, name);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ((fgets(str, LEN, f1)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LEN &amp;&amp; str[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">            str[i] = <span class="built_in">toupper</span>(str[i]);</span><br><span class="line">        <span class="built_in">fputs</span>(str, f2);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(f1);</span><br><span class="line">    fclose(f2);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，按顺序在屏幕上显示命令行中列出的所有文件。使用argc控制循环。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 100</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc &gt;= <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        FILE *fp;</span><br><span class="line">        <span class="keyword">char</span> str[SLEN];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; argc; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((fp = fopen(argv[i], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, argv[i]);</span><br><span class="line">                <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ((fgets(str, <span class="number">100</span>, fp)) != <span class="literal">NULL</span>)</span><br><span class="line">                <span class="built_in">fputs</span>(str, <span class="built_in">stdout</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>修改程序清单13.5中的程序，用命令行界面代替交互式界面。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFSIZE 4096</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 81</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">append</span><span class="params">(FILE *source, FILE *dest)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (argc &gt;= <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        FILE *fa, *fs;       <span class="comment">// fa 指向目标文件，fs 指向源文件</span></span><br><span class="line">        <span class="keyword">int</span> files = <span class="number">0</span>;       <span class="comment">// 附加的文件数量</span></span><br><span class="line">        <span class="keyword">int</span> ch;</span><br><span class="line">        <span class="keyword">if</span> ((fa = fopen(argv[<span class="number">1</span>], <span class="string">&quot;a+&quot;</span>)) == <span class="literal">NULL</span>) <span class="comment">// 打开目标文件</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open %s\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (setvbuf(fa, <span class="literal">NULL</span>, _IOFBF, BUFSIZE) != <span class="number">0</span>) <span class="comment">// 创建大小为4096个字节的输出缓冲区</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fputs</span>(<span class="string">&quot;Can&#x27;t create output buffer\n&quot;</span>, <span class="built_in">stderr</span>);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; argc; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[i], argv[<span class="number">1</span>]) == <span class="number">0</span>) <span class="comment">// 防止目标文件追加本身</span></span><br><span class="line">                <span class="built_in">fputs</span>(<span class="string">&quot;Can&#x27;t append file to itself\n&quot;</span>, <span class="built_in">stderr</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((fs = fopen(argv[i], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>) <span class="comment">// 打开源文件</span></span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open %s\n&quot;</span>, argv[i]);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (setvbuf(fs, <span class="literal">NULL</span>, _IOFBF, BUFSIZE) != <span class="number">0</span>) <span class="comment">// 创建大小为4096个字节的输出缓冲区</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">fputs</span>(<span class="string">&quot;Can&#x27;t create input buffer\n&quot;</span>, <span class="built_in">stderr</span>);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                append(fs, fa); <span class="comment">// 调用函数</span></span><br><span class="line">                <span class="keyword">if</span> (ferror(fs) != <span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error in reading file %s.\n&quot;</span>, argv[i]);</span><br><span class="line">                <span class="keyword">if</span> (ferror(fa) != <span class="number">0</span>)</span><br><span class="line">                    <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error in writing file %s.\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">                fclose(fs);</span><br><span class="line">                files++;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;File %s appended.\n&quot;</span>, argv[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Done appending.%d files appended.\n&quot;</span>, files);</span><br><span class="line">        rewind(fa); <span class="comment">// 返回到文件的开始处</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s contents:\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">while</span> ((ch = getc(fa)) != EOF)</span><br><span class="line">            <span class="built_in">putchar</span>(ch);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;\nDone displaying.&quot;</span>);</span><br><span class="line">        fclose(fa);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">append</span><span class="params">(FILE *source, FILE *dest)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">size_t</span> bytes;              <span class="comment">// 是用typedef定义的类型 一般为无符号整型 unsigned int</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> temp[BUFSIZE]; <span class="comment">// 只分配一次</span></span><br><span class="line">    <span class="keyword">while</span> ((bytes = fread(temp, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), BUFSIZE, source)) &gt; <span class="number">0</span>)</span><br><span class="line">        fwrite(temp, <span class="keyword">sizeof</span>(<span class="keyword">char</span>), bytes, dest);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>使用命令行参数的程序依赖于用户的内存如何正确地使用它们。重写程序清单 13.2 中的程序，不使用命令行参数，而是提示用户输入所需信息。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; // 提供 exit()的原型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // 提供 strcpy()、strcat()的原型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEN 40</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *in, *out; <span class="comment">// 声明两个指向 FILE 的指针</span></span><br><span class="line">    <span class="keyword">int</span> ch;</span><br><span class="line">    <span class="keyword">char</span> sou[LEN], name[LEN]; <span class="comment">// 储存源文件名和输出文件名</span></span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    s_gets(sou, LEN);   <span class="comment">// 接收源文件名 再把几个argv[1]改成sou就行了</span></span><br><span class="line">    <span class="keyword">if</span> ((in = fopen(sou, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>) <span class="comment">// 设置输入</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;I couldn&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, sou);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">strncpy</span>(name, sou, LEN - <span class="number">5</span>);      <span class="comment">// 拷贝文件名          // 这一步为了确保能添加.red字符和一个空字符 总共是5个空间</span></span><br><span class="line">    name[LEN - <span class="number">5</span>] = <span class="string">&#x27;\0&#x27;</span>;                 <span class="comment">//                    // 这一步确保name的阈值</span></span><br><span class="line">    <span class="built_in">strcat</span>(name, <span class="string">&quot;.red&quot;</span>);                 <span class="comment">// 在文件名后添加.red  // strcat会检测第一个空字符 如果元素一很短 那么程序很正常</span></span><br><span class="line">    <span class="keyword">if</span> ((out = fopen(name, <span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>) <span class="comment">// 设置输出            // 的结束，如果元素一很长那么会有25行的空字符来修复</span></span><br><span class="line">    &#123;                                     <span class="comment">// 以写模式打开文件</span></span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t create output file.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getc(in)) != EOF) <span class="comment">// 拷贝数据</span></span><br><span class="line">        <span class="keyword">if</span> (count++ % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">            putc(ch, out);                   <span class="comment">// 打印3个字符中的第1个字符</span></span><br><span class="line">    <span class="keyword">if</span> (fclose(in) != <span class="number">0</span> || fclose(out) != <span class="number">0</span>) <span class="comment">// 收尾工作</span></span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error in closing files\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序打开两个文件。可以使用命令行参数或提示用户输入文件名。<br>a.该程序以这样的顺序打印：打印第1个文件的第1行，第2个文件的第1行，第1个文件的第2行，第2个文件的第2行，以此类推，打印到行数较多文件的最后一行。<br>b.修改该程序，把行号相同的行打印成一行。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  // a</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 100</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp1, *fp2;</span><br><span class="line">    <span class="keyword">char</span> *fpt1, *fpt2;</span><br><span class="line">    <span class="keyword">char</span> str[SLEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((fp1 = fopen(argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((fp2 = fopen(argv[<span class="number">2</span>], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, argv[<span class="number">2</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> f1[<span class="number">50</span>], f2[<span class="number">50</span>];</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;请输入第一个文件的名字，且再回车后输入第二个文件的名字&quot;</span>);</span><br><span class="line">        s_gets(f1, <span class="number">50</span>);</span><br><span class="line">        s_gets(f2, <span class="number">50</span>);</span><br><span class="line">        <span class="keyword">if</span> ((fp1 = fopen(f1, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, f1);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((fp2 = fopen(f2, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, f1);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((fpt1 = fgets(str, SLEN, fp1)) != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="built_in">fputs</span>(str, <span class="built_in">stdout</span>);</span><br><span class="line">        <span class="keyword">if</span> ((fpt2 = fgets(str, SLEN, fp2)) != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="built_in">fputs</span>(str, <span class="built_in">stdout</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (fpt1 != <span class="literal">NULL</span> || fpt2 != <span class="literal">NULL</span>);</span><br><span class="line">    fclose(fp1);</span><br><span class="line">    fclose(fp2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  // b</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 100</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> <span class="comment">// 还差个b选项</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp1, *fp2;</span><br><span class="line">    <span class="keyword">char</span> *fpt1, *fpt2;</span><br><span class="line">    <span class="keyword">char</span> str1[SLEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> str2[SLEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> state = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((fp1 = fopen(argv[<span class="number">1</span>], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, argv[<span class="number">1</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((fp2 = fopen(argv[<span class="number">2</span>], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, argv[<span class="number">2</span>]);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> f1[<span class="number">50</span>], f2[<span class="number">50</span>];</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;请输入第一个文件的名字，且再回车后输入第二个文件的名字&quot;</span>);</span><br><span class="line">        s_gets(f1, <span class="number">50</span>);</span><br><span class="line">        s_gets(f2, <span class="number">50</span>);</span><br><span class="line">        <span class="keyword">if</span> ((fp1 = fopen(f1, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, f1);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((fp2 = fopen(f2, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, f1);</span><br><span class="line">            <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        fpt1 = fgets(str1, SLEN, fp1);</span><br><span class="line">        fpt2 = fgets(str2, SLEN, fp2);</span><br><span class="line">        <span class="keyword">if</span> (fpt1 &amp;&amp; fpt2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> *find;                <span class="comment">// 删除换行符</span></span><br><span class="line">            find = <span class="built_in">strchr</span>(str1, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 换行符处理的不是很好</span></span><br><span class="line">            <span class="keyword">if</span> (find)                  <span class="comment">// 不然需要考虑到每种情况</span></span><br><span class="line">                *find = <span class="string">&#x27;\0&#x27;</span>;          <span class="comment">//</span></span><br><span class="line">            <span class="built_in">fputs</span>(str1, <span class="built_in">stdout</span>);       <span class="comment">// 不连续的及连续的fpt1 != NULL &amp;&amp; fpt2 != NULL</span></span><br><span class="line">            <span class="built_in">fputs</span>(str2, <span class="built_in">stdout</span>);       <span class="comment">// 不连续的及连续的fpt1 != NULL</span></span><br><span class="line">            <span class="keyword">continue</span>;                  <span class="comment">// 不连续的及连续的fpt2 != NULL</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (fpt1 != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            <span class="built_in">fputs</span>(str1, <span class="built_in">stdout</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (fpt2 != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">            <span class="built_in">fputs</span>(str2, <span class="built_in">stdout</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (fpt1 != <span class="literal">NULL</span> || fpt2 != <span class="literal">NULL</span>);</span><br><span class="line">    fclose(fp1);</span><br><span class="line">    fclose(fp2);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>编写一个程序，以一个字符和任意文件名作为命令行参数。如果字符后面没有参数，该程序读取标准输入；否则，程序依次打开每个文件并报告每个文件中该字符出现的次数。文件名和字符本身也要一同报告。程序应包含错误检查，以确定参数数量是否正确和是否能打开文件。如果无法打开文件，程序应报告这一情况，然后继续处理下一个文件。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; // s_gets()函数要用</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chinstr</span><span class="params">(<span class="keyword">char</span>, FILE *, <span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">char</span> fn[<span class="number">50</span>];</span><br><span class="line">    <span class="keyword">if</span> (argc == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ch = argv[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入文件名(空字符结束)\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> (s_gets(fn, <span class="number">50</span>) != <span class="literal">NULL</span> &amp;&amp; (fn[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((fp = fopen(fn, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, fn);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入文件名(空字符结束)\n&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                chinstr(ch, fp, fn);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;请输入文件名(空字符结束)\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (argc &gt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ch = argv[<span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; argc; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ((fp = fopen(argv[i], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, argv[i]);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                chinstr(ch, fp, argv[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;用法1: %s 字符 文件名\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;用法2: %s 字符\n&quot;</span>, argv[<span class="number">0</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chinstr</span><span class="params">(<span class="keyword">char</span> ch, FILE *fp, <span class="keyword">char</span> fn[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> *pt;</span><br><span class="line">    <span class="keyword">while</span> ((pt = fgets(str, <span class="number">100</span>, fp)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (*pt != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (*pt == ch)</span><br><span class="line">                i++;</span><br><span class="line">            pt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;字符 %c 在%s文件中出现%d次\n&quot;</span>, ch, fn, i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>修改程序清单 13.3 中的程序，从 1 开始，根据加入列表的顺序为每个单词编号。当程序下次运行时，确保新的单词编号接着上次的编号开始。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX 41</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">char</span> words[MAX];</span><br><span class="line">    <span class="keyword">char</span> str[MAX];</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(<span class="string">&quot;wordy&quot;</span>, <span class="string">&quot;a+&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Can&#x27;t open \&quot;wordy\&quot; file.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d %s\n&quot;</span>, &amp;num, str) != EOF)         <span class="comment">//</span></span><br><span class="line">        ;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Enter words to add to the file; press the #&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;key at the beginning of a line to terminate.&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> ((<span class="built_in">fscanf</span>(<span class="built_in">stdin</span>, <span class="string">&quot;%40s&quot;</span>, words) == <span class="number">1</span>) &amp;&amp; (words[<span class="number">0</span>] != <span class="string">&#x27;#&#x27;</span>))</span><br><span class="line">        <span class="built_in">fprintf</span>(fp, <span class="string">&quot;%d %s\n&quot;</span>, ++num, words);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;File contents:&quot;</span>);</span><br><span class="line">    rewind(fp);</span><br><span class="line">    <span class="keyword">while</span> (fgets(words, MAX, fp) != <span class="literal">NULL</span>)</span><br><span class="line">        <span class="built_in">fputs</span>(words, <span class="built_in">stdout</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fclose(fp) != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Error closing file\n&quot;</span>);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>编写一个程序打开一个文本文件，通过交互方式获得文件名。通过一个循环，提示用户输入一个文件位置。然后该程序打印从该位置开始到下一个换行符之前的内容。用户输入负数或非数值字符可以结束输入循环。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> fn[<span class="number">50</span>];</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">long</span> offset, origin;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个文件名\n&quot;</span>);</span><br><span class="line">    s_gets(fn, <span class="number">50</span>);</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(fn, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, fn);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入要从文件的哪个位置移动\n(0表示文件开头 1表示文件当前位置 2表示文件末尾 非数值字符退出)\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;origin) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入要移动到的位置(正数向前移动 0保持不动 负数向后移动)\n请规范操作&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>, &amp;offset);</span><br><span class="line">        fseek(fp, offset, origin);</span><br><span class="line">        <span class="keyword">while</span> ((ch = getc(fp)) &amp;&amp; (ch != <span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">            putc(ch, <span class="built_in">stdout</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n请输入要从文件的哪个位置移动\n(0表示文件开头 1表示文件当前位置 2表示文件末尾 非数值字符退出)\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">char</span> *find;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        find = <span class="built_in">strchr</span>(st, <span class="string">&#x27;\n&#x27;</span>); <span class="comment">// 查找换行符</span></span><br><span class="line">        <span class="keyword">if</span> (find)                <span class="comment">// 如果地址不是NULL，</span></span><br><span class="line">            *find = <span class="string">&#x27;\0&#x27;</span>;        <span class="comment">// 在此处放置一个空字符</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>编写一个程序，接受两个命令行参数。第1个参数是一个字符串，第2个参数是一个文件名。然后该程序查找该文件，打印文件中包含该字符串的所有行。因为该任务是面向行而不是面向字符的，所以要使用fgets()而不是getc()。使用标准C库函数strstr()（11.5.7节简要介绍过）在每一行中查找指定字符串。假设文件中的所有行都不超过255个字符。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 255</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">char</span> str[SLEN] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;参数错误&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(argv[<span class="number">2</span>], <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open the file \&quot;%s\&quot;\n&quot;</span>, argv[<span class="number">2</span>]);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ((fgets(str, SLEN, fp)) != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strstr</span>(str, argv[<span class="number">1</span>]) != <span class="literal">NULL</span>)</span><br><span class="line">            <span class="built_in">fputs</span>(str, <span class="built_in">stdout</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>创建一个文本文件，内含20行，每行30个整数。这些整数都在0～9之间，用空格分开。该文件是用数字表示一张图片，0～9表示逐渐增加的灰度。编写一个程序，把文件中的内容读入一个20×30的int数组中。一种把这些数字转换为图片的粗略方法是：该程序使用数组中的值初始化一个20×31 的字符数组，用值0 对应空格字符，1 对应点字符，以此类推。数字越大表示字符所占的空间越大。例如，用#表示9。每行的最后一个字符（第31个） 是空字符，这样该数组包含了20个字符串。最后，程序显示最终的图片 （即，打印所有的字符串），并将结果储存在文本文件中。例如，下面是开始的数据：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">9</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="comment">// test1.txt 排版好的矩阵 可以使用</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">9</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">1</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">9</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">9</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">1</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">5</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span></span><br><span class="line"><span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">0</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">3</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span> <span class="number">9</span></span><br><span class="line"><span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span> <span class="number">8</span></span><br><span class="line"><span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">6</span> <span class="number">6</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">6</span> <span class="number">0</span> <span class="number">0</span> <span class="number">6</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">3</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">5</span> <span class="number">6</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">6</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">4</span> <span class="number">4</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">6</span> <span class="number">0</span> <span class="number">0</span> <span class="number">6</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">6</span> <span class="number">6</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">5</span> <span class="number">8</span> <span class="number">9</span> <span class="number">9</span> <span class="number">8</span> <span class="number">5</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FNAME <span class="meta-string">&quot;test1.txt&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FARGS <span class="meta-string">&quot;test2.txt&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp, *ft;</span><br><span class="line">    <span class="keyword">int</span> ar[<span class="number">20</span>][<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">char</span> st[<span class="number">20</span>][<span class="number">31</span>];</span><br><span class="line">    <span class="keyword">char</span> ch[<span class="number">10</span>] = &#123;<span class="string">&quot; .&#x27;:~*=&amp;%#&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span> (!(fp = fopen(FNAME, <span class="string">&quot;r&quot;</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open file %s.\n&quot;</span>, FNAME);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!(ft = fopen(FARGS, <span class="string">&quot;w&quot;</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open file %s.\n&quot;</span>, FARGS);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">30</span>; j++)</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d&quot;</span>, &amp;ar[i][j]) != <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">fscanf</span>(fp, <span class="string">&quot;%*c&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j, i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">30</span>; j++)</span><br><span class="line">            st[i][j] = ch[ar[i][j]];</span><br><span class="line">        st[i][j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">fprintf</span>(ft, <span class="string">&quot;%s\n&quot;</span>, st[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (fclose(fp) || fclose(ft))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Clossing error .\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>用变长数组（VLA）代替标准数组，完成编程练习12。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FNAME <span class="meta-string">&quot;test1.txt&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FARGS <span class="meta-string">&quot;test2.txt&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ROWS 20</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COLS 30</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize_ar</span><span class="params">(FILE *, <span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">int</span> ar[*][*])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_st</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">char</span> st[*][*], <span class="keyword">int</span> ar[*][*])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    FILE *fp, *ft;</span><br><span class="line">    <span class="keyword">int</span> ar[<span class="number">20</span>][<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">char</span> st[<span class="number">20</span>][<span class="number">31</span>];</span><br><span class="line">    <span class="keyword">if</span> (!(fp = fopen(FNAME, <span class="string">&quot;r&quot;</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open file %s.\n&quot;</span>, FNAME);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!(ft = fopen(FARGS, <span class="string">&quot;w&quot;</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open file %s.\n&quot;</span>, FARGS);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    initialize_ar(fp, ROWS, COLS, ar);</span><br><span class="line">    set_st(ROWS, COLS, st, ar);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ROWS; i++)</span><br><span class="line">        <span class="built_in">fprintf</span>(ft, <span class="string">&quot;%s\n&quot;</span>, st[i]);</span><br><span class="line">    <span class="keyword">if</span> (fclose(fp) || fclose(ft))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Clossing error .\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initialize_ar</span><span class="params">(FILE *fp, <span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> ar[n][m])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">30</span>; j++)</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d&quot;</span>, &amp;ar[i][j]) != <span class="number">1</span>)</span><br><span class="line">                <span class="built_in">fscanf</span>(fp, <span class="string">&quot;%*c&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_st</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">char</span> st[n][m + <span class="number">1</span>], <span class="keyword">int</span> ar[n][m])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch[<span class="number">10</span>] = &#123;<span class="string">&quot; .&#x27;:~*=&amp;%#&quot;</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j, i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">30</span>; j++)</span><br><span class="line">            st[i][j] = ch[ar[i][j]];</span><br><span class="line">        st[i][j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14"><li>数字图像，尤其是从宇宙飞船发回的数字图像，可能会包含一些失真。为编程练习12添加消除失真的函数。该函数把每个值与它上下左右相邻的值作比较，如果该值与其周围相邻值的差都大于1，则用所有相邻值的平均值（四舍五入为整数）代替该值。注意，与边界上的点相邻的点少于4个，所以做特殊处理。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第十二章复习题目和编程练习题的答案</title>
      <link href="posts/30d1212.html"/>
      <url>posts/30d1212.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第十二章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>哪些类别的变量可以成为它所在函数的局部变量？</li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>哪些类别的变量在它所在程序的运行期一直存在？</li></ol><a id="more"></a><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>哪些类别的变量可以被多个文件使用？哪些类别的变量仅限于在一个文件中使用？</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>块作用域变量具有什么链接属性？</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>extern关键字有什么用途？</li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>考虑下面两行代码，就输出的结果而言有何异同：<pre><code> int * p1 = (int *)malloc(100 * sizeof(int)); int * p1 = (int *)calloc(100, sizeof(int));</code></pre></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>下面的变量对哪些函数可见？程序是否有误？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文件 1 */</span></span><br><span class="line"><span class="keyword">int</span> daisy;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lily;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">petal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> daisy, lily;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 文件 2 */</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> daisy;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> lily;</span><br><span class="line"><span class="keyword">int</span> rose;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">stem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> rose;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">root</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ...;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>下面程序会打印什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> color = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">first</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">second</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">char</span> color;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;color in main() is % c\n &quot;</span>, color);</span><br><span class="line">    first();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;color in main() is %c\n&quot;</span>, color);</span><br><span class="line">    second();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;color in main() is %c\n &quot;</span>, color);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">first</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> color;</span><br><span class="line">    color = <span class="string">&#x27;R&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;color in first() is %c\n &quot;</span>, color);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">second</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    color = <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;color in second() is %c\n&quot;</span>, color);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>假设文件的开始处有如下声明：<pre><code> static int plink; int value_ct(const int arr[], int value, int n);</code></pre>a.以上声明表明了程序员的什么意图？<br>b.用const int value和const int n分别替换int value和int n，是否对主调程序的值加强保护。</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>不使用全局变量，重写程序清单12.4。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> units = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;How many pounds to a firkin of butter?\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;units);</span><br><span class="line">    <span class="keyword">while</span> (units != <span class="number">56</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No luck, my friend. Try again.\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;units);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;You must have looked it up!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li><p>在美国，通常以英里/加仑来计算油耗；在欧洲，以升/100公里来计算。下面是程序的一部分，提示用户选择计算模式（美制或公制），然后接收数据并计算油耗。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-2b.c // 与 pe12-2a.c 一起编译</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pe12-2a.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mode;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter 0 for metric mode, 1 for US mode: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;mode);</span><br><span class="line">    <span class="keyword">while</span> (mode &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        set_mode(mode);</span><br><span class="line">        get_info();</span><br><span class="line">        show_info();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter 0 for metric mode, 1 for US mode&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; (-1 to quit): &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是一些输出示例：</p><pre><code> Enter 0 for metric mode, 1 for US mode: 0 Enter distance traveled in kilometers: 600 Enter fuel consumed in liters: 78.8 Fuel consumption is 13.13 liters per 100 km. Enter 0 for metric mode, 1 for US mode (-1 to quit): 1 Enter distance traveled in miles: 434 Enter fuel consumed in gallons: 12.7 Fuel consumption is 34.2 miles per gallon. Enter 0 for metric mode, 1 for US mode (-1 to quit): 3 Invalid mode specified. Mode 1(US) used. Enter distance traveled in miles: 388 Enter fuel consumed in gallons: 15.3 Fuel consumption is 25.4 miles per gallon. Enter 0 for metric mode, 1 for US mode (-1 to quit): -1 Done.</code></pre><p>如果用户输入了不正确的模式，程序向用户给出提示消息并使用上一次输入的正确模式。请提供pe12-2a.h头文件和pe12-2a.c源文件。源代码文件应定义3个具有文件作用域、内部链接的变量。一个表示模式、一个表示距离、一个表示消耗的燃料。get_info()函数根据用户输入的模式提示用户输入相应数据，并将其储存到文件作用域变量中。show_info()函数根据设置的模式计算并显示油耗。可以假设用户输入的都是数值数据。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-2b.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pe12-2a.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mode;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter 0 for metric mode, 1 for US mode: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;mode);</span><br><span class="line">    <span class="keyword">while</span> (mode &gt;= <span class="number">0</span>)           <span class="comment">//输入零或正整数   -1退出</span></span><br><span class="line">    &#123;</span><br><span class="line">        set_mode(mode);</span><br><span class="line">        get_info();</span><br><span class="line">        show_info();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter 0 for metric mode, 1 for US mode&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; (-1 to quit): &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pe12-2a.h&quot;</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> pattern = <span class="number">0</span>;         <span class="comment">//模式</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> last_pattern = <span class="number">1</span>;    <span class="comment">//默认上一次输入的正确模式为 0</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> distance = <span class="number">0</span>;     <span class="comment">//行驶距离</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> fuelconsumed = <span class="number">0</span>; <span class="comment">//消耗的燃料</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_mode</span><span class="params">(<span class="keyword">int</span> mode)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> pattern;</span><br><span class="line">    pattern = mode;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> pattern;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> distance;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> fuelconsumed;</span><br><span class="line">    <span class="keyword">if</span> (pattern != <span class="number">0</span> &amp;&amp; pattern != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pattern = last_pattern;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid mode specified. Mode %d used.\n&quot;</span>, last_pattern);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (pattern) <span class="comment">//如果模式为 1</span></span><br><span class="line">    &#123;</span><br><span class="line">        last_pattern = pattern;     <span class="comment">//如果当前模式正确则</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter distance traveled in miles:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter fuel consumed in gallons:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!(pattern)) <span class="comment">//如果模式为 0</span></span><br><span class="line">    &#123;</span><br><span class="line">        last_pattern = pattern;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter distance traveled in kilometers:&quot;</span>); <span class="comment">//换行</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter fuel consumed in liters:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">int</span> pattern;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> distance;</span><br><span class="line">    <span class="keyword">extern</span> <span class="keyword">double</span> fuelconsumed; <span class="comment">//要确保到si函数时  模式必须为 1 or 0</span></span><br><span class="line">    <span class="keyword">if</span> (pattern)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Fuel consumption is %.1lf miles per gallon.\n&quot;</span>, distance / fuelconsumed);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Fuel consumption is %.2lf liters per 100 km.\n&quot;</span>, fuelconsumed / distance * <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">set_mode</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>重新设计编程练习2，要求只使用自动变量。该程序提供的用户界面不变，即提示用户输入模式等。但是，函数调用要作相应变化。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-2b.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pe12-2a.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mode;</span><br><span class="line">    <span class="keyword">int</span> last_mode = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">double</span> distance = <span class="number">0</span>;     <span class="comment">//行驶距离</span></span><br><span class="line">    <span class="keyword">double</span> fuelconsumed = <span class="number">0</span>; <span class="comment">//消耗的燃料</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter 0 for metric mode, 1 for US mode: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;mode);</span><br><span class="line">    <span class="keyword">while</span> (mode &gt;= <span class="number">0</span>) <span class="comment">//输入零或正整数   -1退出</span></span><br><span class="line">    &#123;</span><br><span class="line">        get_info(mode, &amp;last_mode, &amp;distance, &amp;fuelconsumed);</span><br><span class="line">        show_info(mode, distance, fuelconsumed);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter 0 for metric mode, 1 for US mode&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; (-1 to quit): &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;pe12-2a.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">(<span class="keyword">int</span> mode, <span class="keyword">int</span> *last_mode, <span class="keyword">double</span> *distance, <span class="keyword">double</span> *fuelconsumed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mode != <span class="number">0</span> &amp;&amp; mode != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mode = *last_mode;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Invalid mode specified. Mode %d used.\n&quot;</span>, *last_mode);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (mode) <span class="comment">//如果模式为 1</span></span><br><span class="line">    &#123;</span><br><span class="line">        *last_mode = mode; <span class="comment">//如果当前模式正确则</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter distance traveled in miles:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter fuel consumed in gallons:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (!(mode)) <span class="comment">//如果模式为 0</span></span><br><span class="line">    &#123;</span><br><span class="line">        *last_mode = mode;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter distance traveled in kilometers:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, distance);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Enter fuel consumed in liters:&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, fuelconsumed);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">(<span class="keyword">int</span> mode, <span class="keyword">double</span> distance, <span class="keyword">double</span> fuelconsumed)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mode)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Fuel consumption is %.1lf miles per gallon.\n&quot;</span>, distance / fuelconsumed);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Fuel consumption is %.2lf liters per 100 km.\n&quot;</span>, fuelconsumed / distance * <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-2a.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_info</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_info</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>在一个循环中编写并测试一个函数，该函数返回它被调用的次数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;      <span class="comment">//文件作用域的变量自动初始化为 0</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">&#x27;q&#x27;</span>)  <span class="comment">//字符串首字母不为q则</span></span><br><span class="line">    &#123;</span><br><span class="line">        fun();</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">extern</span> count;</span><br><span class="line">    count++;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个程序，生成100个1～10范围内的随机数，并以降序排列（可以把第11章的排序算法稍加改动，便可用于整数排序，这里仅对整数排序）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> random[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">        random[i] = (rand() % <span class="number">10</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (random[i] &gt; random[j])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = random[i];</span><br><span class="line">                random[i] = random[j];</span><br><span class="line">                random[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, random[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个程序，生成1000个1～10范围内的随机数。不用保存或打印这些数字，仅打印每个数出现的次数。用 10 个不同的种子值运行，生成的数字出现的次数是否相同？可以使用本章自定义的函数或ANSIC的rand()和 srand()函数，它们的格式相同。这是一个测试特定随机数生成器随机性的方法。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>      <span class="comment">//次数不相同   都是100左右</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> seed[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>, a4 = <span class="number">0</span>, a5 = <span class="number">0</span>, a6 = <span class="number">0</span>, a7 = <span class="number">0</span>, a8 = <span class="number">0</span>, a9 = <span class="number">0</span>, a10 = <span class="number">0</span>;</span><br><span class="line">        seed[i] = rand();</span><br><span class="line">        srand(seed[i]);         <span class="comment">//以默认种子为 1 rand()生成10个种子以供使用</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">1000</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (rand() % <span class="number">10</span> + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                a1++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                a2++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                a3++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                a4++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                a5++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                a6++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                a7++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                a8++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                a9++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">                a10++;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;| 1:%3d | 2:%3d | 3:%3d | 4:%3d | 5:%3d | 6:%3d | 7:%3d | 8:%3d | 9:%3d | 10:%3d |\n&quot;</span>, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序，按照程序清单12.13输出示例后面讨论的内容，修改该程序。使其输出类似：<pre><code> Enter the number of sets; enter q to stop : 18 How many sides and how many dice? 6 3 Here are 18 sets of 3 6-sided throws. 12 10 6 9 8 14 8 15 9 14 12 17 11 7 10 13 8 14 How many sets? Enter q to stop: q</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* manydice.c -- 多次掷骰子的模拟程序 */</span></span><br><span class="line"><span class="comment">/* 与 diceroll.c 一起编译*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;   /* 为库函数 srand() 提供原型 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;     /* 为 time() 提供原型 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;diceroll.h&quot;</span> <span class="comment">/* 为roll_n_dice()提供原型，为roll_count变量提供声明 */</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span>          <span class="comment">//去除了那个外部变量</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> dice, roll, sides, status, num;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>)time(<span class="number">0</span>)); <span class="comment">/* 随机种子 */</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Enter the number of sets; enter q to stop :&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;How many sides and how many dice?\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span> ((status = (<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;sides, &amp;dice))) != <span class="number">2</span> &amp;&amp;sides == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You should have entered an integer.&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; Let&#x27;s begin again.\n&quot;</span>);</span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>; <span class="comment">/* 处理错误的输入 */</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;How many sides and how many dice?\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>; <span class="comment">/* 进入循环的下一轮迭代 */</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Here are %d sets of %d %d-sided throws.\n&quot;</span>, num, dice, sides);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            roll = roll_n_dice(dice, sides);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, roll);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\nHow many sets? Enter q to stop: \n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;GOOD FORTUNE TO YOU!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* diceroll.c -- 掷骰子模拟程序 */</span></span><br><span class="line"><span class="comment">/* 与 mandydice.c 一起编译 */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;diceroll.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;          /* 提供库函数 rand()的原型 */</span></span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">rollem</span><span class="params">(<span class="keyword">int</span> sides)</span> <span class="comment">/* 该函数属于该文件私有 */</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> roll;                       <span class="comment">//接收随机数的最大值    并记录总共筛了几次 且一个骰子筛一次</span></span><br><span class="line">    roll = rand() % sides + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> roll;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">roll_n_dice</span><span class="params">(<span class="keyword">int</span> dice, <span class="keyword">int</span> sides)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> d;</span><br><span class="line">    <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (sides &lt; <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Need at least 2 sides.\n &quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (dice &lt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Need at least 1 die.\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (d = <span class="number">0</span>; d &lt; dice; d++)      <span class="comment">//设两个骰子，每个骰子6个面 total值为两个骰子的所得总值</span></span><br><span class="line">        total += rollem(sides);</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// diceroll.h</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> roll_count;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">roll_n_dice</span><span class="params">(<span class="keyword">int</span> dice, <span class="keyword">int</span> sides)</span></span>;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>下面是程序的一部分：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pe12-8.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">make_array</span><span class="params">(<span class="keyword">int</span> elem, <span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> ar[], <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *pa;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the number of elements: &quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;size) == <span class="number">1</span> &amp;&amp; size &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter the initialization value: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;value);</span><br><span class="line">        pa = make_array(size, value);</span><br><span class="line">        <span class="keyword">if</span> (pa)</span><br><span class="line">        &#123;</span><br><span class="line">            show_array(pa, size);</span><br><span class="line">            <span class="built_in">free</span>(pa);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter the number of elements (&lt;1 to quit): &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>提供make_array()和show_array()函数的定义，完成该程序。make_array()函数接受两个参数，第1个参数是int类型数组的元素个数，第2个参数是要赋给每个元素的值。该函数调用malloc()创建一个大小合适的数组，将其每个元素设置为指定的值，并返回一个指向该数组的指针。show_array()函数显示数组的内容，一行显示8个数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">make_array</span><span class="params">(<span class="keyword">int</span> elem, <span class="keyword">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> ar[], <span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *pa;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="keyword">int</span> value;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the number of elements: &quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;size) == <span class="number">1</span> &amp;&amp; size &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter the initialization value: &quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;value);</span><br><span class="line">        pa = make_array(size, value);</span><br><span class="line">        <span class="keyword">if</span> (pa)</span><br><span class="line">        &#123;</span><br><span class="line">            show_array(pa, size);</span><br><span class="line">            <span class="built_in">free</span>(pa);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter the number of elements (&lt;1 to quit): &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> *<span class="title">make_array</span><span class="params">(<span class="keyword">int</span> elem, <span class="keyword">int</span> val)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *pt = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>(elem * <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; elem; i++)</span><br><span class="line">        pt[i] = val;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span> *)pt;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> ar[], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++, j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ar[i]);</span><br><span class="line">        <span class="keyword">if</span> (j % <span class="number">8</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>编写一个符合以下描述的函数。首先，询问用户需要输入多少个单词。然后，接收用户输入的单词，并显示出来，使用malloc()并回答第1个问题（即要输入多少个单词），创建一个动态数组，该数组内含相应的指向char的指针（注意，由于数组的每个元素都是指向char的指针，所以用于储存malloc()返回值的指针应该是一个指向指针的指针，且它所指向的指针指向char）。在读取字符串时，该程序应该把单词读入一个临时的char数组， 使用malloc()分配足够的存储空间来储存单词，并把地址存入该指针数组 （该数组中每个元素都是指向 char 的指针）。然后，从临时数组中把单词拷贝到动态分配的存储空间中。因此，有一个字符指针数组，每个指针都指向一个对象，该对象的大小正好能容纳被储存的特定单词。下面是该程序的一个运行示例：<pre><code> How many words do you wish to enter? 5 Enter 5 words now: I enjoyed doing this exerise Here are your words: I enjoyed doing this exercise</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; //malloc 的原型</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> size 10</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num; <span class="comment">//单词数量</span></span><br><span class="line">    <span class="keyword">char</span>(*pt)[size];</span><br><span class="line">    <span class="keyword">char</span> temp[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;How many words do you wish to enter?&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    getchar();</span><br><span class="line">    pt = (<span class="keyword">int</span>(*)[size])<span class="built_in">malloc</span>(num * size * <span class="keyword">sizeof</span>(<span class="keyword">char</span>));</span><br><span class="line">    <span class="keyword">if</span> (pt == <span class="literal">NULL</span>) <span class="comment">//如果 malloc 申请内存失败</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;Memory allocation failed. Goodbye.&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(EXIT_FAILURE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter %d words now:\n&quot;</span>, num);</span><br><span class="line">    s_gets(temp, <span class="number">100</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, l = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; size; j++, l++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (temp[l] == <span class="string">&#x27; &#x27;</span> || temp[l] == <span class="string">&#x27;\0&#x27;</span>) <span class="comment">// l是用来统计 temp的总共走向的  i是一维   j是二维   l是字符走向</span></span><br><span class="line">            &#123;</span><br><span class="line">                l++;</span><br><span class="line">                pt[i][j] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            pt[i][j] = temp[l];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (j == size)       <span class="comment">//如果用户输入的字符数量超过了9个</span></span><br><span class="line">        &#123;</span><br><span class="line">            l++;</span><br><span class="line">            pt[i][size - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Here are your words:&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; pt[i] &amp;&amp; i &lt; num; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, pt[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; st[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            st[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第十一章复习题目和编程练习题的答案</title>
      <link href="posts/c56f0260.html"/>
      <url>posts/c56f0260.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第十一章复习题和编程练习题的答案<br>从第十一章开始所有的c语言编程练习题答案代码格式化格式都将为<br>C/C++ for Visual Studio Code扩展提供的Visual Studio格式方式<br>扩展仓库地址：<a href="https://github.com/microsoft/vscode-cpptools">https://github.com/microsoft/vscode-cpptools</a></p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>下面字符串的声明有什么问题？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> name[] = &#123;<span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;e&#x27;</span>, <span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;s&#x27;</span> &#125;;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a></li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>下面的程序会打印什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> note[] = <span class="string">&quot;See you at the snack bar.&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *ptr;</span><br><span class="line">    ptr = note;</span><br><span class="line">    <span class="built_in">puts</span>(ptr);</span><br><span class="line">    <span class="built_in">puts</span>(++ptr);</span><br><span class="line">    note[<span class="number">7</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">puts</span>(note);</span><br><span class="line">    <span class="built_in">puts</span>(++ptr);    <span class="comment">//注意下这行</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>下面的程序会打印什么？<pre><code> #include&lt;stdio.h&gt; #include&lt;string.h&gt; int main(void) &#123;     char food[] = &quot;Yummy&quot;;     char *ptr;     ptr = food + strlen(food);  //strlen()函数的返回值为int型成功记录字符的数量     while (--ptr &gt;= food)         puts(ptr);     return 0; &#125;</code></pre></li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>下面的程序会打印什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> goldwyn[<span class="number">40</span>] = <span class="string">&quot;art of it all &quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> samuel[<span class="number">40</span>] = <span class="string">&quot;I read p&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *quote = <span class="string">&quot;the way through.&quot;</span>;</span><br><span class="line">    <span class="built_in">strcat</span>(goldwyn, quote);</span><br><span class="line">    <span class="built_in">strcat</span>(samuel, goldwyn);</span><br><span class="line">    <span class="built_in">puts</span>(samuel);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li><p>下面的练习涉及字符串、循环、指针和递增指针。首先，假设定义了下面的函数：</p><pre><code> #include &lt;stdio.h&gt;     char *     pr(char *str) &#123;     char *pc;     pc = str;     while (*pc)         putchar(*pc++);     do     &#123;         putchar(*--pc);     &#125; while (pc - str);     return (pc); &#125;</code></pre><p>考虑下面的函数调用： x = pr(“Ho Ho Ho!”);<br>a.将打印什么？<br>b.x是什么类型？<br>c.x的值是什么？<br>d.表达式*–pc是什么意思？与–<em>pc有何不同？<br>e.如果用</em>–pc替换–*pc，会打印什么？<br>f.两个while循环用来测试什么？<br>g.如果pr()函数的参数是空字符串，会怎样？<br>h.必须在主调函数中做什么，才能让pr()函数正常运行？</p></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>假设有如下声明：<br>char sign = ‘$’;<br>sign占用多少字节的内存？’$’占用多少字节的内存？”$”占用多少字节的内存？</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>下面的程序会打印出什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M1 <span class="meta-string">&quot;How are ya, sweetie? &quot;</span></span></span><br><span class="line"><span class="keyword">char</span> M2[<span class="number">40</span>] = <span class="string">&quot;Beatthe clock.&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> *M3 = <span class="string">&quot;chat&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> words[<span class="number">80</span>];</span><br><span class="line">    <span class="built_in">printf</span>(M1);</span><br><span class="line">    <span class="built_in">puts</span>(M1);</span><br><span class="line">    <span class="built_in">puts</span>(M2);</span><br><span class="line">    <span class="built_in">puts</span>(M2 + <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">strcpy</span>(words, M2);</span><br><span class="line">    <span class="built_in">strcat</span>(words, <span class="string">&quot; Win a toy.&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(words);</span><br><span class="line">    words[<span class="number">4</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="built_in">puts</span>(words);</span><br><span class="line">    <span class="keyword">while</span> (*M3)</span><br><span class="line">        <span class="built_in">puts</span>(M3++);</span><br><span class="line">    <span class="built_in">puts</span>(--M3);</span><br><span class="line">    <span class="built_in">puts</span>(--M3);</span><br><span class="line">    M3 = M1;</span><br><span class="line">    <span class="built_in">puts</span>(M3);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>下面的程序会打印出什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str1[] = <span class="string">&quot;gawsie&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> str2[] = <span class="string">&quot;bletonism&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *ps;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ps = str1; *ps != <span class="string">&#x27;\0&#x27;</span>; ps++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*ps == <span class="string">&#x27;a&#x27;</span> || *ps == <span class="string">&#x27;e&#x27;</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(*ps);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            (*ps)--;</span><br><span class="line">        <span class="built_in">putchar</span>(*ps);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">while</span> (str2[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, i % <span class="number">3</span> ? str2[i] : <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>本章定义的s_gets()函数，用指针表示法代替数组表示法便可减少一个变量i。请改写该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span>   <span class="comment">//原型</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; st[i] != <span class="string">&#x27;\0&#x27;</span>)  <span class="comment">//指针表示法的一大特性就是可以使用递增运算符</span></span><br><span class="line">            i++;                                <span class="comment">//指针加一及将数值赋给解引用后的指针</span></span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            st[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>strlen()函数接受一个指向字符串的指针作为参数，并返回该字符串的长度。请编写一个这样的函数。<br>//空格也算字符</li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>本章定义的s_gets()函数，可以用strchr()函数代替其中的while循环来查找换行符。请改写该函数。<br>//还有另一个叫做strrchar()的函数  中间多了一个r  函数返回指定字符最后一次出现的位置</li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>设计一个函数，接受一个指向字符串的指针，返回指向该字符串第1个空格字符的指针，或如果未找到空格字符，则返回空指针。</li></ol><hr><h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>重写程序清单11.21，使用ctype.h头文件中的函数，以便无论用户选择大写还是小写，该程序都能正确识别答案。<br>//作者在答案里居然改了常量答案  //我的方案是全部字符串小写 然后在调用函数让第一个再大写 将这些步骤封装成函数 在s_gets函数后执行</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>设计并测试一个函数，从输入中获取下n个字符（包括空白、制表符、换行符），把结果储存在一个数组里，它的地址被传递作为一个参数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 20</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//独立一行的^z才是EOF</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[SIZE];</span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str, SIZE - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        str[i] = getchar();</span><br><span class="line">        <span class="keyword">if</span> (str[i] == EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            str[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    str[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>修改并编程练习1的函数，在n个字符后停止，或在读到第1个空白、制表符或换行符时停止，哪个先遇到哪个停止。不能只使用scanf()。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 20</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[SIZE];</span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str, SIZE - <span class="number">1</span>);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((str[i] = getchar()) == EOF || <span class="built_in">isspace</span>(str[i]))</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            i++;</span><br><span class="line">    &#125;</span><br><span class="line">    str[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>设计并测试一个函数，从一行输入中把一个单词读入一个数组中，并丢弃输入行中的其余字符。该函数应该跳过第1个非空白字符前面的所有空白。将一个单词定义为没有空白、制表符或换行符的字符序列。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str);</span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i] = getchar())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> O = <span class="built_in">isspace</span>(str[i]);</span><br><span class="line">        <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">0</span>)        <span class="comment">//如果当前字符为空格 且t=0  t另有作用</span></span><br><span class="line">            <span class="keyword">continue</span>;           <span class="comment">//则返回while重新接收字符 这样就保证了跳过第一个非空白字符前面的所有空白</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == EOF) <span class="comment">//</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">1</span>)   <span class="comment">//如果当前字符为空格 且t=1则跳出循环</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span>(str[i] != <span class="string">&#x27;\n&#x27;</span>)      <span class="comment">//这里再做一个清除工作</span></span><br><span class="line">                str[i] = getchar();</span><br><span class="line">            <span class="keyword">break</span>;              <span class="comment">//假如这里字符的确为空格但t不等于则说明这个空格是第一个非空白字符前面的空白</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            i++;                <span class="comment">//如果当前字符不为空格 则将索引指向下一个元素</span></span><br><span class="line">            t = <span class="number">1</span>;              <span class="comment">//且t=1 用以标明已经开始接收不间断字符</span></span><br><span class="line">        &#125;                       <span class="comment">//如果再遇到标准空格 那么上面那个elseif就会起作用了</span></span><br><span class="line">    &#125;</span><br><span class="line">    str[i] = <span class="string">&#x27;\0&#x27;</span>;              <span class="comment">//同样不保留换行符</span></span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>设计并测试一个函数，它类似编程练习3的描述，只不过它接受第2个参数指明可读取的最大字符数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> size;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;size);</span><br><span class="line">    <span class="keyword">char</span> str[size];             <span class="comment">//变长数组</span></span><br><span class="line">    <span class="keyword">char</span> *ch = getn(str, size - <span class="number">1</span>); <span class="comment">//最后一个位置留给空字符所以size要减一</span></span><br><span class="line">    <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="built_in">puts</span>(ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">getn</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((i &lt; n) &amp;&amp; (str[i] = getchar()))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> O = <span class="built_in">isspace</span>(str[i]);</span><br><span class="line">        <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == EOF)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (O &amp;&amp; t == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (str[i] != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                str[i] = getchar();</span><br><span class="line">            str[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            i++;</span><br><span class="line">            t = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        str[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>设计并测试一个函数，搜索第1个函数形参指定的字符串，在其中查找第2个函数形参指定的字符首次出现的位置。如果成功，该函数返指向该字符的指针，如果在字符串中未找到指定字符，则返回空指针（该函数的功能与 strchr()函数相同）。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">findchr</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//假设用户是正常人</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%s %c&quot;</span>, str, &amp;ch) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *pt = findchr(str, ch);</span><br><span class="line">        <span class="built_in">putchar</span>(*pt);                <span class="comment">//pt 指向的字符</span></span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%p&quot;</span>, pt);            <span class="comment">//pt 指向的字符的地址</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">findchr</span><span class="params">(<span class="keyword">char</span> *str, <span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*str == ch)</span><br><span class="line">            <span class="keyword">return</span> str;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个名为is_within()的函数，接受一个字符和一个指向字符串的指针作为两个函数形参。如果指定字符在字符串中，该函数返回一个非零值 （即为真）。否则，返回0（即为假）。在一个完整的程序中测试该函数， 使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>; <span class="comment">//获取指定数量的字符 且将回车符替换为空字符</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_within</span><span class="params">(<span class="keyword">char</span>, <span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (s_gets(str, <span class="number">20</span>) &amp;&amp; str[<span class="number">0</span>] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ch = getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, is_within(ch, str));</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>) <span class="comment">//清空缓冲区</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">is_within</span><span class="params">(<span class="keyword">char</span> ch, <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (*str == ch)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; st[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            st[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>strncpy(s1, s2, n)函数把s2中的n个字符拷贝至s1中，截断s2，或者有必要的话在末尾添加空字符。如果s2的长度是n或多于n，目标字符串不能以空字符结尾。该函数返回s1。自己编写一个这样的函数，名为mystrncpy()。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  //如果按照作者第二句来做会出一些混乱的错误</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt; //且题目第二句好像并不符合原strncpy()函数的作用</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 20</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">mystrncpy</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">char</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span>; <span class="comment">//获取指定数量的字符 不带换行符</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[SIZE];</span><br><span class="line">    <span class="keyword">char</span> s2[SIZE];</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">while</span> (fgets(s2, SIZE, <span class="built_in">stdin</span>) &amp;&amp; s2[<span class="number">0</span>] != <span class="string">&#x27;\n&#x27;</span>) <span class="comment">//注意下不同的情况当然要做不一样的判断</span></span><br><span class="line">    &#123;                                               <span class="comment">//fgets()是接收换行符的</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;你想复制多少个字符&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">        getchar(); <span class="comment">//去除scanf()留下的换行符</span></span><br><span class="line">        <span class="keyword">char</span> *funback = mystrncpy(s1, s2, n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fb = %s\n&quot;</span>, funback);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s1 = %s\n&quot;</span>, s1);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入下一段字符串\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;done&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">mystrncpy</span><span class="params">(<span class="keyword">char</span> *s1, <span class="keyword">char</span> *s2, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        s1[i] = s2[i];</span><br><span class="line">    <span class="keyword">return</span> s1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">s_gets</span><span class="params">(<span class="keyword">char</span> *st, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> *ret_val;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    ret_val = fgets(st, n, <span class="built_in">stdin</span>);</span><br><span class="line">    <span class="keyword">if</span> (ret_val)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (st[i] != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; st[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span> (st[i] == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            st[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret_val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>编写一个名为string_in()的函数，接受两个指向字符串的指针作为参数。如果第2个字符串中包含第1个字符串，该函数将返回第1个字符串开始的地址。例如，string_in(“hats”, “at”)将返回hats中a的地址。否则，该函数返回空指针。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">string_in</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> s1[<span class="number">20</span>], s2[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;s1&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (fgets(s1, <span class="number">20</span>, <span class="built_in">stdin</span>) &amp;&amp; s1[<span class="number">0</span>] != <span class="string">&#x27;\n&#x27;</span>) <span class="comment">//两个检测 不为EOF和换行符 因为fgets()函数的返回值</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;s2&quot;</span>);</span><br><span class="line">        fgets(s2, <span class="number">20</span>, <span class="built_in">stdin</span>);</span><br><span class="line">        <span class="keyword">char</span> **funback = string_in(s1, s2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;指针指向的字符%c\n指针指向字符的地址%X\n&quot;</span>, *funback, funback);</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;s1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;done&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">string_in</span><span class="params">(<span class="keyword">char</span> *s1, <span class="keyword">char</span> *s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s2) - <span class="number">1</span>;       <span class="comment">//求s2最大有效值索引</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; s1[i] != <span class="string">&#x27;\0&#x27;</span>; i++) <span class="comment">//外层只管当前索引得值不为空字符  这样就把整个s1给遍历了一遍</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *pt = &amp;s1[i];          <span class="comment">//记录当前索引值</span></span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; s1[i + j] == s2[j]; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j == len)           <span class="comment">//如果当前索引值是s2最后一个有效值</span></span><br><span class="line">                <span class="keyword">return</span> (<span class="keyword">char</span> *)pt;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>编写一个函数，把字符串中的内容用其反序字符串代替。在一个完整的程序中测试该函数，使用一个循环给函数提供输入值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reversal</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (fgets(str, <span class="number">20</span>, <span class="built_in">stdin</span>) &amp;&amp; str[<span class="number">0</span>] != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        reversal(str);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reversal</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(str);      <span class="comment">//还有搞前后temp替换的</span></span><br><span class="line">    <span class="keyword">char</span> temp[len + <span class="number">1</span>];</span><br><span class="line">    temp[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">while</span> (len)</span><br><span class="line">        temp[i++] = str[--len];</span><br><span class="line">    <span class="built_in">strcpy</span>(str, temp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>编写一个函数接受一个字符串作为参数，并删除字符串中的空格。在一个程序中测试该函数，使用循环读取输入行，直到用户输入一行空行。 该程序应该应用该函数只每个输入的字符串，并显示处理后的字符串。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drop_space</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">while</span> (fgets(str, <span class="number">20</span>, <span class="built_in">stdin</span>) &amp;&amp; str[<span class="number">0</span>] != <span class="string">&#x27;\n&#x27;</span> &amp;&amp; str[<span class="number">0</span>] != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        drop_space(str);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drop_space</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, j = <span class="number">0</span>; str[i] != <span class="string">&#x27;\0&#x27;</span>; i++)     <span class="comment">//遍历</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] != <span class="string">&#x27; &#x27;</span>)          <span class="comment">//如果当前索引值不为空格</span></span><br><span class="line">        &#123;</span><br><span class="line">            str[j] = str[i];        <span class="comment">//就把当前索引值赋值给 从 0 另外计数的原指针</span></span><br><span class="line">            <span class="keyword">if</span> (i != j)             <span class="comment">//这个判断说明之前遇到空格了 所以要把i的索引值变为空字符</span></span><br><span class="line">                str[i] = <span class="string">&#x27;\0&#x27;</span>;      <span class="comment">//可能会有点迷  完整的跑一边逐句吧</span></span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十一题-1"><a href="#第十一题-1" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>编写一个函数，读入10个字符串或者读到EOF时停止。该程序为用户提供一个有5个选项的菜单：打印源字符串列表、以ASCII中的顺序打印字符串、按长度递增顺序打印字符串、按字符串中第1个单词的长度打印字符串、退出。菜单可以循环显示，除非用户选择退出选项。当然，该程序要能真正完成菜单中各选项的功能。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 11</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getten</span><span class="params">(<span class="keyword">char</span> *)</span></span>;          <span class="comment">//获取十个字符</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putstr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;    <span class="comment">//打印源字符串列表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">oba</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;       <span class="comment">//以ASCII中的顺序打印字符串    order by ascii</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">triangle</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;  <span class="comment">//按长度递增顺序打印字符串      直角三角形</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">firstword</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>; <span class="comment">//按字符串中第1个单词的长度打印字符串 打印第一个单词</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[SIZE];</span><br><span class="line">    <span class="keyword">char</span> *menu = <span class="string">&quot;a. 打印源字符串列表           b. 以ASCII中的顺序打印字符串\nc. 按长度递增顺序打印字符串   d. 按字符串中第1个单词的长度打印字符串\nq. 退出&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    getten(str);</span><br><span class="line">    <span class="built_in">puts</span>(menu);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">            putstr(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">            oba(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">            triangle(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;d&#x27;</span>:</span><br><span class="line">            firstword(str);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入错误\n&quot;</span>);</span><br><span class="line">            <span class="built_in">puts</span>(menu);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">firstword</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; str[i] != <span class="string">&#x27; &#x27;</span> &amp;&amp; str[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">        <span class="built_in">putchar</span>(str[i]);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">triangle</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; str[i] != <span class="string">&#x27;\0&#x27;</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">            <span class="built_in">putchar</span>(str[j]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">oba</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">char</span> temp;                      <span class="comment">//暂存</span></span><br><span class="line">    <span class="keyword">char</span> pt[SIZE];</span><br><span class="line">    <span class="built_in">strncpy</span>(pt, str, <span class="number">10</span>);           <span class="comment">//做了一个副本</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; pt[i]; i++)         <span class="comment">//cpp做过一个示例  和它一样的流程</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; pt[j] &amp;&amp; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pt[i] &lt; pt[j])</span><br><span class="line">            &#123;</span><br><span class="line">                temp = pt[i];</span><br><span class="line">                pt[i] = pt[j];</span><br><span class="line">                pt[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(pt);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putstr</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (*str)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(*str);</span><br><span class="line">        str++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getten</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; (SIZE - <span class="number">1</span>); i++)    <span class="comment">//数组从零计数</span></span><br><span class="line">    &#123;</span><br><span class="line">        str[i] = getchar();</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">&#x27;\n&#x27;</span> || str[i] == EOF)</span><br><span class="line">        &#123;</span><br><span class="line">            str[i] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i == (SIZE - <span class="number">1</span>))        <span class="comment">//如果为真，说明用户输入字符数量超过了10个或正好十个</span></span><br><span class="line">    &#123;                           <span class="comment">//因为上面for的判断 所以我们只需要检测变量i就够了</span></span><br><span class="line">        str[SIZE] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>) <span class="comment">//test</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十二题-1"><a href="#第十二题-1" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>编写一个程序，读取输入，直至读到 EOF，报告读入的单词数、大写字母数、小写字母数、标点符号数和数字字符数。使用ctype.h头文件中的函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">30</span>];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>, word = <span class="number">1</span>, upper = <span class="number">0</span>, lower = <span class="number">0</span>, punct = <span class="number">0</span>, digit = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((str[i] = getchar()) &amp;&amp; str[i] != EOF) <span class="comment">//当然这样很不安全</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isspace</span>(str[<span class="number">0</span>]))      <span class="comment">//如果开头是空白字符则</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">        str[i - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>; <span class="comment">//这个位置是换行符 然后我把它换为空字符</span></span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (str[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(str[i]))            <span class="comment">//依次为统计大写，小写，标点符号，数字，单词数量</span></span><br><span class="line">            upper++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">islower</span>(str[i]))</span><br><span class="line">            lower++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">ispunct</span>(str[i]))</span><br><span class="line">            punct++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isdigit</span>(str[i]))</span><br><span class="line">            digit++;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">isspace</span>(str[i]) &amp;&amp; t == <span class="number">1</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            word++;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            t = <span class="number">1</span>;</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;读入单词数有%d个\n&quot;</span></span><br><span class="line">           <span class="string">&quot;大写字母数有%d个\n&quot;</span></span><br><span class="line">           <span class="string">&quot;小写字母数有%d个\n&quot;</span></span><br><span class="line">           <span class="string">&quot;标点符号数有%d个\n&quot;</span></span><br><span class="line">           <span class="string">&quot;数字字符数有%d个\n&quot;</span>,</span><br><span class="line">           word, upper, lower, punct, digit);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十三题-1"><a href="#第十三题-1" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>编写一个程序，反序显示命令行参数的单词。例如，命令行参数是see you later，该程序应打印later you see。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = argc - <span class="number">1</span>; i != <span class="number">0</span>; i--) <span class="comment">//argc记录总共有多少个字符串 因为[0]元素是内定的程序磁盘地址</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s &quot;</span>, argv[i]);         <span class="comment">//这里减一 然后反向遍历这个指向数组的指针</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;                           <span class="comment">//另外双引号可以把多个单词括起来形成一个参数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14"><li>编写一个通过命令行运行的程序计算幂。第1个命令行参数是double类型的数，作为幂的底数，第2个参数是整数，作为幂的指数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">double</span> num = atof(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span> exponent = atoi(argv[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">double</span> result = num;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; exponent; i++)</span><br><span class="line">        result *= num;</span><br><span class="line">    <span class="keyword">if</span> (exponent == <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>, num / num);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十五题"><a href="#第十五题" class="headerlink" title="第十五题"></a>第十五题</h3><ol start="15"><li>使用字符分类函数实现atoi()函数。如果输入的字符串不是纯数字，该函数返回0。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">catoi</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    gets(str);</span><br><span class="line">    <span class="keyword">int</span> i = myatoi(str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, i);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">myatoi</span><span class="params">(<span class="keyword">char</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="built_in">strlen</span>(p);</span><br><span class="line">    <span class="keyword">int</span> i, n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(p[i]))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span>                           <span class="comment">//自动转换</span></span><br><span class="line">            n = n * <span class="number">10</span> + (p[i] - <span class="string">&#x27;0&#x27;</span>); <span class="comment">// n =   1 * 10 + (50 - 48)</span></span><br><span class="line">    &#125;                                  <span class="comment">// n =  12 * 10 + (51 - 48)</span></span><br><span class="line">    <span class="keyword">return</span> n;                          <span class="comment">// n = 123 * 10 + (52 - 48)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十六题"><a href="#第十六题" class="headerlink" title="第十六题"></a>第十六题</h3><ol start="16"><li>编写一个程序读取输入，直至读到文件结尾，然后把字符串打印出来。该程序识别和实现下面的命令行参数：<br>-p  按原样打印<br>-u  把输入全部转换成大写<br>-l  把输入全部转换成小写<br>如果没有命令行参数，则让程序像是使用了-p参数那样运行。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getstr</span><span class="params">(<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span>    <span class="comment">//题外话 python语言没有switch语句</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">30</span>] = <span class="string">&quot;HELLOWORLD&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> *pt;</span><br><span class="line">    getstr(str);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;-p&quot;</span>) == <span class="number">0</span>)         <span class="comment">//整个swithch语句</span></span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;-u&quot;</span>) == <span class="number">0</span>)    <span class="comment">//这里没用switch是因为case后面的语句可能不支持两个字符</span></span><br><span class="line">    &#123;                                       <span class="comment">//时间问题所以我没去尝试</span></span><br><span class="line">        <span class="keyword">for</span> (pt = str; *pt; pt++)</span><br><span class="line">            *pt = <span class="built_in">toupper</span>(*pt);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">&quot;-l&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (pt = str; *pt; pt++)</span><br><span class="line">            *pt = <span class="built_in">tolower</span>(*pt);</span><br><span class="line">        <span class="built_in">puts</span>(str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(str); <span class="comment">//这个就是default选项</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getstr</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((str[i] = getchar()) &amp;&amp; str[i] != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isspace</span>(str[<span class="number">0</span>]))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span>)</span><br><span class="line">        str[i - <span class="number">1</span>] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第十章复习题目和编程练习题的答案</title>
      <link href="posts/d872b2ec.html"/>
      <url>posts/d872b2ec.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第十章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>下面的程序将打印什么内容？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ref[] = &#123;<span class="number">8</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> *ptr;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>, ptr = ref; index &lt; <span class="number">4</span>; index++, ptr++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, ref[index], *ptr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>在复习题1中，ref有多少个元素？</li></ol><a id="more"></a><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>在复习题1中，ref的地址是什么？ref + 1是什么意思？++ref指向什么？</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li><p>在下面的代码中，*ptr和*(ptr + 2)的值分别是什么？</p><pre><code> a. int *ptr; int torf[2][2] = &#123;12, 14, 16&#125;; ptr = torf[0]; b. int * ptr; int fort[2][2] = &#123; &#123;12&#125;, &#123;14,16&#125; &#125;; ptr = fort[0];</code></pre></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li><p>在下面的代码中，**ptr和**(ptr + 1)的值分别是什么？</p><pre><code> a. int (*ptr)[2]; int torf[2][2] = &#123;12, 14, 16&#125;; ptr = torf; b. int (*ptr)[2]; int fort[2][2] = &#123; &#123;12&#125;, &#123;14,16&#125; &#125;; ptr = fort;</code></pre></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>假设有下面的声明：<pre><code> int grid[30][100]; a.用1种写法表示grid[22][56] b.用2种写法表示grid[22][0] c.用3种写法表示grid[0][0]</code></pre></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>正确声明以下各变量：<pre><code> a.digits是一个内含10个int类型值的数组 b.rates是一个内含6个float类型值的数组 c.mat是一个内含3个元素的数组，每个元素都是内含5个整数的数组 d.psa是一个内含20个元素的数组，每个元素都是指向int的指针 e.pstr是一个指向数组的指针，该数组内含20个char类型的值</code></pre></li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>完成以下要求:<pre><code> a.声明一个内含6个int类型值的数组，并初始化各元素为1、2、4、8、16、32 b.用数组表示法表示a声明的数组的第3个元素（其值为4) c.假设编译器支持C99/C11标准，声明一个内含100个int类型值的数组，并初始化最后一个元素为-1，其他元素不考虑 d.假设编译器支持C99/C11标准，声明一个内含100个int类型值的数组，并初始化下标为5、10、11、12、3的元素为101，其他元素不考虑</code></pre></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>内含10个元素的数组下标范围是什么？</li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>假设有下面的声明：<pre><code>float rootbeer[10], things[10][5], *pf, value = 2.2;int i = 3;判断以下各项是否有效：a.rootbeer[2] = value;b.scanf(&quot;%f&quot;, &amp;rootbeer);c.rootbeer = value;d.printf(&quot;%f&quot;, rootbeer);e.things[4][4] = rootbeer[3];f.things[5] = rootbeer;g.pf = value;h.pf = rootbeer;</code></pre></li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>声明一个800×600的int类型数组。</li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>下面声明了3个数组：<pre><code>double trots[20];short clops[10][30];long shots[5][10][15];a.分别以传统方式和以变长数组为参数的方式编写处理trots数组的void函数原型和函数调用b.分别以传统方式和以变长数组为参数的方式编写处理clops数组的void函数原型和函数调用c.分别以传统方式和以变长数组为参数的方式编写处理shots数组的void函数原型和函数调用</code></pre></li></ol><hr><h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>下面有两个函数原型：<pre><code>void show(const double ar[], int n);// n是数组元素的个数void show2(const double ar2[][3], int n);// n是二维数组的行数a.编写一个函数调用，把一个内含8、3、9和2的复合字面量传递给show()函数。b.编写一个函数调用，把一个2行3列的复合字面量（8、3、9作为第1行，5、4、1作为第2行）传递给show2()函数。</code></pre></li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>修改程序清单10.7的rain.c程序，用指针进行计算（仍然要声明并初始化数组）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONTHS 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YEARS 5</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> rain[YEARS][MONTHS] =</span><br><span class="line">        &#123;&#123;<span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">3.0</span>, <span class="number">2.0</span>, <span class="number">1.2</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">2.4</span>, <span class="number">3.5</span>, <span class="number">6.6</span>&#125;,</span><br><span class="line">         &#123;<span class="number">8.5</span>, <span class="number">8.2</span>, <span class="number">1.2</span>, <span class="number">1.6</span>, <span class="number">2.4</span>, <span class="number">0.0</span>, <span class="number">5.2</span>, <span class="number">0.9</span>, <span class="number">0.3</span>, <span class="number">0.9</span>, <span class="number">1.4</span>, <span class="number">7.3</span>&#125;,</span><br><span class="line">         &#123;<span class="number">9.1</span>, <span class="number">8.5</span>, <span class="number">6.7</span>, <span class="number">4.3</span>, <span class="number">2.1</span>, <span class="number">0.8</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">1.1</span>, <span class="number">2.3</span>, <span class="number">6.1</span>, <span class="number">8.4</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.2</span>, <span class="number">9.9</span>, <span class="number">8.4</span>, <span class="number">3.3</span>, <span class="number">1.2</span>, <span class="number">0.8</span>, <span class="number">0.4</span>, <span class="number">0.0</span>, <span class="number">0.6</span>, <span class="number">1.7</span>, <span class="number">4.3</span>, <span class="number">6.2</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.6</span>, <span class="number">5.6</span>, <span class="number">3.8</span>, <span class="number">2.8</span>, <span class="number">3.8</span>, <span class="number">0.2</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.3</span>, <span class="number">2.6</span>, <span class="number">5.2</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">int</span> year, month;</span><br><span class="line">    <span class="keyword">float</span> subtot, total;</span><br><span class="line">    <span class="keyword">float</span> (* ptr)[MONTHS] = rain;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; YEAR  RAINFALL (inches)\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (year = <span class="number">0</span>, total = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (month = <span class="number">0</span>, subtot = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">            <span class="comment">//subtot += rain[year][month];</span></span><br><span class="line">            subtot += ptr[year][month];</span><br><span class="line">            <span class="comment">//subtot += *(ptr[year] + month);</span></span><br><span class="line">            <span class="comment">//subtot += *(*(ptr + year) + month);</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5d %15.1f\n&quot;</span>, <span class="number">2010</span> + year, subtot);</span><br><span class="line">        total += subtot;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nThe yearly average is %.1f inches.\n\n&quot;</span>, total / YEARS);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MONTHLY AVERAGES:\n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Jan Feb Mar Apr May Jun Jul Aug Sep Oct &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Nov Dec\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (month = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (year = <span class="number">0</span>, subtot = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">            <span class="comment">//subtot += rain[year][month];</span></span><br><span class="line">            <span class="comment">//subtot += ptr[year][month];</span></span><br><span class="line">            <span class="comment">//subtot += *(ptr[year] + month);</span></span><br><span class="line">            subtot += *(*(ptr + year) + month);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%4.1f &quot;</span>, subtot / YEARS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li><p>编写一个程序，初始化一个double类型的数组，然后把该数组的内容拷贝至3个其他数组中（在main()中声明这4个数组）。使用带数组表示法的函数进行第1份拷贝。使用带指针表示法和指针递增的函数进行第2份拷贝。把目标数组名、源数组名和待拷贝的元素个数作为前两个函数的参数。第3个函数以目标数组名、源数组名和指向源数组最后一个元素后面的元素的指针。也就是说，给定以下声明，则函数调用如下所示：</p><pre><code> double source[5] = &#123;1.1, 2.2, 3.3, 4.4, 5.5&#125;; double target1[5]; double target2[5]; double target3[5]; copy_arr(target1, source, 5); copy_ptr(target2, source, 5); copy_ptrs(target3,source, source + 5);</code></pre><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptrs</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> source[<span class="number">5</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> target1[<span class="number">5</span>], target2[<span class="number">5</span>], target3[<span class="number">5</span>];</span><br><span class="line">    copy_arr(target1, source, <span class="number">5</span>);</span><br><span class="line">    copy_ptr(target2, source, <span class="number">5</span>);</span><br><span class="line">    copy_ptrs(target3, source, source + <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> target[], <span class="keyword">double</span> source[], <span class="keyword">int</span> num)</span>    <span class="comment">//数组表示法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        target[index] = source[index];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, target[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">int</span> num)</span>  <span class="comment">//指针递增</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *pt = target;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(pt++) = *(source++);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, *(target + index));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptrs</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">double</span> *num)</span> <span class="comment">//指针指向数组最后一个元素的后面    //指针加法</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *pt = source;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; pt &lt; num; pt++, index++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(target + index) = *(source + index);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, target[index]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个函数，返回储存在int类型数组中的最大值，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">10</span>] =</span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">7</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max(<span class="built_in">array</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pt[index] &gt; max)</span><br><span class="line">            max = pt[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个函数，返回储存在double类型数组中最大值的下标，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">index_max</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>] =</span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">2.2</span>, <span class="number">5.5</span>, <span class="number">8.8</span>, <span class="number">4.4</span>, <span class="number">9.9</span>, <span class="number">7.7</span>, <span class="number">3.3</span>, <span class="number">1.1</span>, <span class="number">6.6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, index_max(<span class="built_in">array</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">index_max</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index, max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">1</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pt[index] &gt; pt[max])</span><br><span class="line">            max = index;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个函数，返回储存在double类型数组中最大值和最小值的差值，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dv</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>] =</span><br><span class="line">        &#123;<span class="number">10</span>, <span class="number">2.2</span>, <span class="number">5.5</span>, <span class="number">8.8</span>, <span class="number">4.4</span>, <span class="number">9.9</span>, <span class="number">7.7</span>, <span class="number">3.3</span>, <span class="number">1.1</span>, <span class="number">6.6</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.1lf&quot;</span>, Dv(<span class="built_in">array</span>, <span class="number">10</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Dv</span><span class="params">(<span class="keyword">double</span> *<span class="built_in">array</span>, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> max = <span class="built_in">array</span>[<span class="number">0</span>], min = <span class="built_in">array</span>[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">array</span>[index] &gt; max)</span><br><span class="line">            max = <span class="built_in">array</span>[index];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">array</span>[index] &lt; min)</span><br><span class="line">            min = <span class="built_in">array</span>[index];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (max - min);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个函数，把double类型数组中的数据倒序排列，并在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RO</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RT</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>, <span class="number">6.6</span>, <span class="number">7.7</span>, <span class="number">8.8</span>, <span class="number">9.9</span>, <span class="number">10</span>&#125;;</span><br><span class="line">    RO(<span class="built_in">array</span>, <span class="number">10</span>);</span><br><span class="line">    RT(<span class="built_in">array</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; <span class="number">10</span>; index++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, <span class="built_in">array</span>[index]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RO</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>, xedni = num - <span class="number">1</span>; xedni &gt;= <span class="number">0</span>; index++, xedni--)</span><br><span class="line">        <span class="built_in">array</span>[index] = pt[xedni];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">        pt[index] = <span class="built_in">array</span>[index];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RT</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> LT;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>, xedni = num - <span class="number">1</span>; xedni &gt;= num / <span class="number">2</span>; index++, xedni--)</span><br><span class="line">    &#123;</span><br><span class="line">        LT = pt[xedni];</span><br><span class="line">        pt[xedni] = pt[index];</span><br><span class="line">        pt[index] = LT;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序，初始化一个double类型的二维数组，使用编程练习2中的一个拷贝函数把该数组中的数据拷贝至另一个二维数组中（因为二维数组是数组的数组，所以可以使用处理一维数组的拷贝函数来处理数组中的每个子数组）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> source[<span class="number">5</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> target1[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">    copy_arr(target1, source, <span class="number">5</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; <span class="number">5</span>; index++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, *(*(target1 + <span class="number">0</span>) + index));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_arr</span><span class="params">(<span class="keyword">double</span> target[], <span class="keyword">double</span> source[], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        target[index] = source[index];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, target[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>使用编程练习2中的拷贝函数，把一个内含7个元素的数组中第3～第5个元素拷贝至内含3个元素的数组中。该函数本身不需要修改，只需要选择合适的实际参数（实际参数不需要是数组名和数组大小，只需要是数组元素的地址和待处理元素的个数）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">int</span> num)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">7</span>] = &#123;<span class="number">1.1</span>, <span class="number">2.2</span>, <span class="number">3.3</span>, <span class="number">4.4</span>, <span class="number">5.5</span>, <span class="number">6.6</span>, <span class="number">7.7</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> target[<span class="number">3</span>];</span><br><span class="line">    copy_ptr(target, <span class="built_in">array</span> + <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_ptr</span><span class="params">(<span class="keyword">double</span> *target, <span class="keyword">double</span> *source, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *pt = target;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        *(pt++) = *(source++);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.1lf &quot;</span>, *(target + index));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>编写一个程序，初始化一个double类型的3×5二维数组，使用一个处理变长数组的函数将其拷贝至另一个二维数组中。还要编写一个以变长数组为形参的函数以显示两个数组的内容。这两个函数应该能处理任意N×M数组 （如果编译器不支持变长数组，就使用传统C函数处理N×5的数组）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_VLA</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*], <span class="keyword">double</span>[*][*])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put_VLA</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">5</span>] =</span><br><span class="line">        &#123;&#123;<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>&#125;,</span><br><span class="line">         &#123;<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>&#125;,</span><br><span class="line">         &#123;<span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">double</span> target[<span class="number">3</span>][<span class="number">5</span>];</span><br><span class="line">    copy_VLA(<span class="number">3</span>, <span class="number">5</span>, <span class="built_in">array</span>, target);</span><br><span class="line">    put_VLA(<span class="number">3</span>, <span class="number">5</span>, <span class="built_in">array</span>);</span><br><span class="line">    put_VLA(<span class="number">3</span>, <span class="number">5</span>, target);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">copy_VLA</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j], <span class="keyword">double</span> target[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; j; l++)</span><br><span class="line">            target[k][l] = pt[k][l];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">put_VLA</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; i; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; j; l++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.lf &quot;</span>, pt[k][l]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>编写一个函数，把两个数组中相对应的元素相加，然后把结果储存到第3个数组中。也就是说，如果数组1中包含的值是2、4、5、8，数组2中包含的值是1、0、4、6，那么该函数把3、4、9、14赋给第3个数组。函数接受3个数组名和一个数组大小。在一个简单的程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">array_add</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> array1[<span class="number">9</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> array2[<span class="number">9</span>] = &#123;<span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">double</span> array3[<span class="number">9</span>];</span><br><span class="line">    array_add(array1, array2, array3, <span class="number">9</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">array_add</span><span class="params">(<span class="keyword">double</span> *array1, <span class="keyword">double</span> *array2, <span class="keyword">double</span> *array3, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index = <span class="number">0</span>; index &lt; num; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        array3[index] = array1[index] + array2[index];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.lf &quot;</span>, array3[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十一题-1"><a href="#第十一题-1" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>编写一个程序，声明一个int类型的3×5二维数组，并用合适的值初始化它。该程序打印数组中的值，然后各值翻倍（即是原值的2倍），并显示出各元素的新值。编写一个函数显示数组的内容，再编写一个函数把各元素的值翻倍。这两个函数都以函数名和行数作为参数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">t_times</span><span class="params">(<span class="keyword">int</span> (*)[<span class="number">5</span>], <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span> (*)[<span class="number">5</span>], <span class="keyword">int</span>)</span></span>; <span class="comment">//二维数组省略形参指针名</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[<span class="number">3</span>][<span class="number">5</span>] =</span><br><span class="line">        &#123;&#123;<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>&#125;,</span><br><span class="line">         &#123;<span class="number">20</span>, <span class="number">21</span>, <span class="number">22</span>, <span class="number">23</span>, <span class="number">24</span>&#125;,</span><br><span class="line">         &#123;<span class="number">30</span>, <span class="number">31</span>, <span class="number">32</span>, <span class="number">33</span>, <span class="number">34</span>&#125;&#125;;</span><br><span class="line">    putarray(<span class="built_in">array</span>, <span class="number">3</span>);</span><br><span class="line">    t_times(<span class="built_in">array</span>, <span class="number">3</span>);</span><br><span class="line">    putarray(<span class="built_in">array</span>, <span class="number">3</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">t_times</span><span class="params">(<span class="keyword">int</span> (*pt)[<span class="number">5</span>], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            pt[i][j] = pt[i][j] * <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span> (*pt)[<span class="number">5</span>], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *(*(pt + i) + j));</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十二题-1"><a href="#第十二题-1" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>重写程序清单10.7的rain.c程序，把main()中的主要任务都改成用函数来完成。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MONTHS 12</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YEARS 5</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">M_sum</span><span class="params">(<span class="keyword">float</span> (*)[MONTHS], <span class="keyword">int</span>)</span></span>;    <span class="comment">//五年中每月的降水量总和</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">M_average</span><span class="params">(<span class="keyword">float</span> (*)[MONTHS], <span class="keyword">int</span>)</span></span>; <span class="comment">//五年中每月的降水量平均值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">float</span> rain[YEARS][MONTHS] =</span><br><span class="line">        &#123;&#123;<span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">4.3</span>, <span class="number">3.0</span>, <span class="number">2.0</span>, <span class="number">1.2</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">0.4</span>, <span class="number">2.4</span>, <span class="number">3.5</span>, <span class="number">6.6</span>&#125;,</span><br><span class="line">         &#123;<span class="number">8.5</span>, <span class="number">8.2</span>, <span class="number">1.2</span>, <span class="number">1.6</span>, <span class="number">2.4</span>, <span class="number">0.0</span>, <span class="number">5.2</span>, <span class="number">0.9</span>, <span class="number">0.3</span>, <span class="number">0.9</span>, <span class="number">1.4</span>, <span class="number">7.3</span>&#125;,</span><br><span class="line">         &#123;<span class="number">9.1</span>, <span class="number">8.5</span>, <span class="number">6.7</span>, <span class="number">4.3</span>, <span class="number">2.1</span>, <span class="number">0.8</span>, <span class="number">0.2</span>, <span class="number">0.2</span>, <span class="number">1.1</span>, <span class="number">2.3</span>, <span class="number">6.1</span>, <span class="number">8.4</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.2</span>, <span class="number">9.9</span>, <span class="number">8.4</span>, <span class="number">3.3</span>, <span class="number">1.2</span>, <span class="number">0.8</span>, <span class="number">0.4</span>, <span class="number">0.0</span>, <span class="number">0.6</span>, <span class="number">1.7</span>, <span class="number">4.3</span>, <span class="number">6.2</span>&#125;,</span><br><span class="line">         &#123;<span class="number">7.6</span>, <span class="number">5.6</span>, <span class="number">3.8</span>, <span class="number">2.8</span>, <span class="number">3.8</span>, <span class="number">0.2</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">0.0</span>, <span class="number">1.3</span>, <span class="number">2.6</span>, <span class="number">5.2</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">float</span> total = M_sum(rain, YEARS);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nThe yearly average is %.1f inches.\n\n&quot;</span>, total / YEARS); <span class="comment">//五年的降水量平均值</span></span><br><span class="line">    M_average(rain, YEARS);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">M_sum</span><span class="params">(<span class="keyword">float</span> (*rain)[MONTHS], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year, month;</span><br><span class="line">    <span class="keyword">float</span> subtot, total;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; YEAR  RAINFALL (inches)\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (year = <span class="number">0</span>, total = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (month = <span class="number">0</span>, subtot = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">            subtot += rain[year][month];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5d %15.1f\n&quot;</span>, <span class="number">2010</span> + year, subtot);</span><br><span class="line">        total += subtot;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">M_average</span><span class="params">(<span class="keyword">float</span> (*rain)[MONTHS], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> year, month;</span><br><span class="line">    <span class="keyword">float</span> subtot, total;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;MONTHLY AVERAGES:\n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Jan Feb Mar Apr May  Jun Jul Aug Sep Oct &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; Nov Dec\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (month = <span class="number">0</span>; month &lt; MONTHS; month++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (year = <span class="number">0</span>, subtot = <span class="number">0</span>; year &lt; YEARS; year++)</span><br><span class="line">            subtot += rain[year][month];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%4.1f &quot;</span>, subtot / YEARS);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十三题-1"><a href="#第十三题-1" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>编写一个程序，提示用户输入3组数，每组数包含5个double类型的数（假设用户都正确地响应，不会输入非数值数据）。该程序应完成下列任务。<br>a.把用户输入的数据储存在3×5的数组中<br>b.计算每组（5个）数据的平均值<br>c.计算所有数据的平均值<br>d.找出这15个数据中的最大值<br>e.打印结果每个任务都要用单独的函数来完成（使用传统C处理数组的方式）。完成任务b，要编写一个计算并返回一维数组平均值的函数，利用循环调用该函数3次。对于处理其他任务的函数，应该把整个数组作为参数，完成任务c和d的函数应把结果返回主调函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIM 3</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">double</span> *)</span></span>;            <span class="comment">//赋值数组                  //使用SLEN和LIM的积来判断总共需要多少次循环 而非for嵌套 14题为for嵌套</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">int</span>)</span></span>;         <span class="comment">//输出数组各行的平均值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">double</span> (*)[SLEN], <span class="keyword">int</span>)</span></span>;    <span class="comment">//输出数组</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">double</span> (*)[SLEN], <span class="keyword">int</span>)</span></span>; <span class="comment">//所有数值的平均值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">double</span> (*)[SLEN], <span class="keyword">int</span>)</span></span>;   <span class="comment">//所有数值的最大值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[LIM][SLEN] =</span><br><span class="line">        &#123;&#123;<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>, <span class="number">0.4</span>, <span class="number">0.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">1.1</span>, <span class="number">1.2</span>, <span class="number">1.3</span>, <span class="number">1.4</span>, <span class="number">1.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">2.1</span>, <span class="number">2.2</span>, <span class="number">2.3</span>, <span class="number">2.4</span>, <span class="number">2.5</span>&#125;&#125;;</span><br><span class="line">    getarray(<span class="built_in">array</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    putarray(<span class="built_in">array</span>, LIM);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; LIM; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;数组第%d行五个元素的平均值为%.3lf\n&quot;</span>, i, ave_group(&amp;<span class="built_in">array</span>[i], SLEN));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中所有数值的平均值为%lf\n&quot;</span>, ave_total(<span class="built_in">array</span>, LIM));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中所有数值的最大值为%lf\n&quot;</span>, max_all(<span class="built_in">array</span>, LIM));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">double</span> (*pt)[SLEN], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> max = pt[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">double</span> *ptr = *pt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; SLEN; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (*ptr++ &gt; max)</span><br><span class="line">                max = *ptr;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">double</span> (*pt)[SLEN], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; SLEN; j++)</span><br><span class="line">            total += pt[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total / (LIM * SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">double</span> *pt, <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">        total += pt[i];</span><br><span class="line">    <span class="keyword">return</span> (total / SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">double</span> *pt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组的第%d个元素的值为&quot;</span>, index++);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;*(pt)))</span><br><span class="line">    &#123;</span><br><span class="line">        *pt++;</span><br><span class="line">        <span class="keyword">if</span> (index &gt; LIM * SLEN)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n数组的第%d个元素的值为&quot;</span>, index++);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">double</span> (*<span class="built_in">array</span>)[SLEN], <span class="keyword">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; SLEN; j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-10.2lf &quot;</span>, <span class="built_in">array</span>[i][j]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14"><li>以变长数组作为函数形参，完成编程练习13。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SLEN 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIM 3</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">double</span>[*])</span></span>;            <span class="comment">//给数组赋值</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>;    <span class="comment">//打印数组</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span> ar[*][*])</span></span>; <span class="comment">//各行平均值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>; <span class="comment">//所有数值平局值</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>[*][*])</span></span>;   <span class="comment">//所有数值的最大值</span></span><br><span class="line"><span class="comment">//double ave_grou2(int i, int j, double *(*(pt + i) + j));        //这句无效  都是数组形参 如果是指针形参该怎么声明 且 省略形参指针名</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">array</span>[LIM][SLEN] =</span><br><span class="line">        &#123;&#123;<span class="number">0.1</span>, <span class="number">0.2</span>, <span class="number">0.3</span>, <span class="number">0.4</span>, <span class="number">0.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">1.1</span>, <span class="number">1.2</span>, <span class="number">1.3</span>, <span class="number">1.4</span>, <span class="number">1.5</span>&#125;,</span><br><span class="line">         &#123;<span class="number">2.1</span>, <span class="number">2.2</span>, <span class="number">2.3</span>, <span class="number">2.4</span>, <span class="number">2.5</span>&#125;&#125;;</span><br><span class="line">    getarray(LIM, <span class="built_in">array</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    putarray(LIM, SLEN, <span class="built_in">array</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; LIM; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;数组第%d行五个元素的平均值为%.3lf\n&quot;</span>, i, ave_group(i, SLEN, <span class="built_in">array</span>));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中所有数值的平均值为%lf\n&quot;</span>, ave_total(LIM, SLEN, <span class="built_in">array</span>));</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;数组中所有数值的最大值为%lf\n&quot;</span>, max_all(LIM, SLEN, <span class="built_in">array</span>));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_group</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; j; k++)</span><br><span class="line">        total += pt[i][k];</span><br><span class="line">    <span class="keyword">return</span> (total / SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">ave_total</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> total;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> q = <span class="number">0</span>; q &lt; i; q++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; j; b++)</span><br><span class="line">            total += pt[q][b];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> total / (LIM * SLEN);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">putarray</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> q = <span class="number">0</span>; q &lt; i; q++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; j; b++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-10.2lf &quot;</span>, pt[q][b]);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getarray</span><span class="params">(<span class="keyword">int</span> num, <span class="keyword">double</span> pt[num])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; SLEN; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数组的第%d个元素的值为&quot;</span>, index++);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;*(pt));</span><br><span class="line">            *pt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">max_all</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j, <span class="keyword">double</span> pt[i][j])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> max = pt[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; i; n++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">0</span>; m &lt; j; m++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pt[n][m] &gt; max)</span><br><span class="line">                max = pt[n][m];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第八章复习题目和编程练习题的答案</title>
      <link href="posts/62ad57d.html"/>
      <url>posts/62ad57d.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第八章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>putchar(getchar())是一个有效表达式，它实现什么功能?getchar(putchar())是否也是有效表达式？</li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>下面的语句分别完成什么任务？<pre><code> a.putchar(&#39;H&#39;); b.putchar(&#39;\007&#39;); c.putchar(&#39;\n&#39;); d.putchar(&#39;\b&#39;);</code></pre></li></ol><a id="more"></a><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>假设有一个名为 count 的可执行程序，用于统计输入的字符数。设计一个使用 count 程序统计essay文件中字符数的命令行，并把统计结果保存在 essayct文件中。</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>给定复习题3中的程序和文件，下面哪一条是有效的命令？<pre><code> a.essayct &lt; essay b.count essay c.essay &gt;count</code></pre></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>EOF是什么？</li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>对于给定的输出（ch是int类型，而且是缓冲输入），下面各程序段的输出分别是什么？<pre><code> a.输入如下： If you quit, I will.[enter] 程序段如下： while ((ch = getchar())!= &#39;i&#39;)         putchar(ch); b.输入如下： Harhar[enter] 程序段如下： while ((ch = getchar()) != &#39;\n&#39;) &#123;         putchar(ch++);         putchar(++ch); &#125;</code></pre></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>C如何处理不同计算机系统中的不同文件和换行约定？</li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>在使用缓冲输入的系统中，把数值和字符混合输入会遇到什么潜在的问题？</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>设计一个程序，统计在读到文件结尾之前读取的字符数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> word = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">        word++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, word - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个程序，在遇到 EOF 之前，把输入作为字符流读取。程序要打印每个输入的字符及其相应的ASCII十进制值。注意，在ASCII序列中，空格字符前面的字符都是非打印字符，要特殊处理这些字符。如果非打印字符 是换行符或制表符，则分别打印\n或\t。否则，使用控制字符表示法。例如,ASCII的1是Ctrl+A，可显示为^A。注意，A的ASCII值是Ctrl+A的值加上 64。其他非打印字符也有类似的关系。除每次遇到换行符打印新的一行之外，每行打印10对值。（注意：不同的操作系统其控制字符可能不同。）<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//还有一些BUG  换行符和制表符一块输出时会乱</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>, CR = <span class="number">0</span>, SP = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">index = <span class="number">0</span>;</span><br><span class="line">CR++;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;\t&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">SP++;</span><br><span class="line"><span class="keyword">continue</span>; <span class="comment">//统计制表符和换行符的个数 在else里统一输出</span></span><br><span class="line">&#125;<span class="comment">//一个换行我直接忽略掉了 从两个开始输出</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= CR; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\\n &quot;</span>);</span><br><span class="line">index++;</span><br><span class="line"><span class="keyword">if</span> ((index % <span class="number">10</span>) == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= SP; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\\t &quot;</span>);</span><br><span class="line">index++;</span><br><span class="line"><span class="keyword">if</span> ((index % <span class="number">10</span>) == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">CR = <span class="number">0</span>;</span><br><span class="line">SP = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c-%d &quot;</span>, ch, ch);</span><br><span class="line">index++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((index % <span class="number">10</span>) == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个程序，在遇到 EOF 之前，把输入作为字符流读取。该程序要报告输入中的大写字母和小写字母的个数。假设大小写字母数值是连续的。或者使用ctype.h库中合适的分类函数更方便。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> _upper = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> _lower = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isupper</span>(ch))    <span class="comment">//if (ch &gt;= &#x27;A&#x27; &amp;&amp; ch &lt;= &#x27;Z&#x27;);</span></span><br><span class="line">            _upper++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">islower</span>(ch))   <span class="comment">//if (ch &gt;= &#x27;a&#x27; &amp;&amp; ch &lt;= &#x27;z&#x27;);</span></span><br><span class="line">            _lower++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (_upper)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, _upper);</span><br><span class="line">    <span class="keyword">if</span> (_lower)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, _lower);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，在遇到EOF之前，把输入作为字符流读取。该程序要报告平均每个单词的字母数。不要把空白统计为单词的字母。实际上，标点符号也不应该统计，但是现在暂时不同考虑这么多（如果你比较在意这点，考虑使用ctype.h系列中的ispunct()函数）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> character = <span class="number">0</span>, word = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ca = <span class="number">0</span>, wr = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch != <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">islower</span>(ch) || <span class="built_in">isupper</span>(ch))</span><br><span class="line">            &#123;</span><br><span class="line">                character++;</span><br><span class="line">                ca++;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        word++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%d个单词有%d个字母\n&quot;</span>, word, character);</span><br><span class="line">        character = <span class="number">0</span>;</span><br><span class="line">        wr++;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;\032&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;平均每个单词的字母数为%d\n&quot;</span>, ca / wr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>修改程序清单8.4的猜数字程序，使用更智能的猜测策略。例如，程序最初猜50，询问用户是猜大了、猜小了还是猜对了。如果猜小了，那么下一次猜测的值应是50和100中值，也就是75。如果这次猜大了，那么下一次猜测的值应是50和75的中值，等等。使用二分查找（binary search）策略，如果用户没有欺骗程序，那么程序很快就会猜到正确的答案。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> guess, start = <span class="number">1</span>, end = <span class="number">100</span>, ch;    <span class="comment">//bug太多</span></span><br><span class="line">    guess = (start + end) / <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;选择一个 1 到 100 之间的整数\n结果为 %d\n如果大于结果请输入 &gt; ，反之\n如果结果结果正确请输入 ！ \n&quot;</span>, guess);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;!&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">            end = guess;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;&lt;&#x27;</span>)</span><br><span class="line">            start = guess;</span><br><span class="line">        guess = (start + end) / <span class="number">2</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;结果为%d？\n&quot;</span>, guess);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;结果为%d\n&quot;</span>, guess);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>修改程序清单8.8中的get_first()函数，让该函数返回读取的第1个非空白字符，并在一个简单的程序中测试。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">char get_first(void)//程序清单8.8</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">    int ch;</span></span><br><span class="line"><span class="comment">    ch = getchar();</span></span><br><span class="line"><span class="comment">    while (getchar() != &#x27;\n&#x27;)</span></span><br><span class="line"><span class="comment">        continue;</span></span><br><span class="line"><span class="comment">    return ch;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">get_first</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    ch = get_first();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;第一个非空白字符为%c&quot;</span>, ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">get_first</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((ch == <span class="string">&#x27; &#x27;</span>) || (ch == <span class="string">&#x27;\t&#x27;</span>))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> ch;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li><p>修改第7章的编程练习8，用字符代替数字标记菜单的选项。用q代替5作为结束输入的标记。</p><pre><code> 参考第八题</code></pre></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>编写一个程序，显示一个提供加法、减法、乘法、除法的菜单。获得用户选择的选项后，程序提示用户输入两个数字，然后执行用户刚才选择的操作。该程序只接受菜单提供的选项。程序使用float类型的变量储存用户输入的数字，如果用户输入失败，则允许再次输入。进行除法运算时，如果用户输入0作为第2个数（除数），程序应提示用户重新输入一个新值。该程序的一个运行示例如下：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">function</span><span class="params">(<span class="keyword">char</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">space</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> answer = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">float</span> num1 = <span class="number">0</span>, num2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入运算符 + - * / （输入q以退出）&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            answer = function(<span class="string">&#x27;+&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            answer = function(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            answer = function(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;/&#x27;</span>:</span><br><span class="line">            answer = function(<span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;输入错误\n请输入运算符 + - * / (输入q以退出)\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;结果为%.2lf&quot;</span>, answer);</span><br><span class="line">        space();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">function</span><span class="params">(<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> num1, num2;</span><br><span class="line">    <span class="keyword">double</span> result;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;当前为 %c 运算请输入两个数字&quot;</span>, ch);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%f%f&quot;</span>, &amp;num1, &amp;num2) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (num2 == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;除数不能为零 请重新输入\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;当前为 %c 运算请输入两个数字&quot;</span>, ch);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ch == <span class="string">&#x27;+&#x27;</span>)</span><br><span class="line">        result = num1 + num2;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">        result = num1 - num2;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">        result = num1 * num2;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        result = num1 / num2;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">space</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入运算符 + - * / (输入q以退出)&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第四章复习题目和编程练习题目</title>
      <link href="posts/f409e180.html"/>
      <url>posts/f409e180.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第四章复习题和编程练习题</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>再次运行程序清单 4.1，但是在要求输入名时，请输入名和姓（根据英文书写习惯，名和姓中间有一个空格），看看会发生什么情况？为什么？<br>程序清单4.1：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;     // 提供strlen()函数的原型</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DENSITY 62.4    <span class="comment">// 人体密度（单位：磅/立方英尺）</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> weight, volume;</span><br><span class="line">    <span class="keyword">int</span> size, letters;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">40</span>];      <span class="comment">// name是一个可容纳40个字符的数组</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Hi! What&#x27;s your first name?\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s, what&#x27;s your weight in pounds?\n&quot;</span>, name);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;weight);</span><br><span class="line">    size = <span class="keyword">sizeof</span> name;</span><br><span class="line">    letters = <span class="built_in">strlen</span>(name);</span><br><span class="line">    volume = weight / DENSITY;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Well, %s, your volume is %2.2f cubic feet.\n&quot;</span>, name, volume);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Also, your first name has %d letters,\n&quot;</span>, letters);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;and we have %d bytes to store it.\n&quot;</span>, size);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><a id="more"></a><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>假设下列示例都是完整程序中的一部分，它们打印的结果分别是什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a.<span class="built_in">printf</span>(<span class="string">&quot;He sold the painting for $%2.2f.\n&quot;</span>, <span class="number">2.345e2</span>);</span><br><span class="line">b.printf(&quot;%c%c%c\n&quot;, &#x27;H&#x27;, 105, &#x27;\41&#x27;);</span><br><span class="line">c.<span class="meta">#<span class="meta-keyword">define</span> Q <span class="meta-string">&quot;His Hamlet was funny without being vulgar.&quot;</span>printf(<span class="meta-string">&quot;%s\nhas %dcharacters.\n&quot;</span>, Q, strlen(Q));</span></span><br><span class="line">d.<span class="built_in">printf</span>(<span class="string">&quot;Is %2.2e the same as %2.2f?\n&quot;</span>, <span class="number">1201.0</span>, <span class="number">1201.0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>在第2题的c中，要输出包含双引号的字符串Q，应如何修改？</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>找出下面程序中的错误。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">define B booboo</span><br><span class="line">define X <span class="number">10</span></span><br><span class="line">main(<span class="keyword">int</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">char</span> name;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please enter your first name.&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, name);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;All right, %c, what&#x27;s your age?\n&quot;</span>, name);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, age);</span><br><span class="line">    xp = age + X;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s a %s! You must be at least %d.\n&quot;</span>, B, xp);</span><br><span class="line">    rerun <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li><p>假设一个程序的开头是这样：</p><pre><code> #define BOOK &quot;War and Peace&quot; int main(void) &#123;     float cost =12.99;     float percent = 80.0;</code></pre><p>请构造一个使用BOOK、cost和percent的printf()语句，打印以下内容：</p><pre><code> This copy of &quot;War and Peace&quot; sells for $12.99. That is 80% of list.</code></pre></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>打印下列各项内容要分别使用什么转换说明？<br>a.一个字段宽度与位数相同的十进制整数<br>b.一个形如8A、字段宽度为4的十六进制整数<br>c.一个形如232.346、字段宽度为10的浮点数<br>d.一个形如2.33e+002、字段宽度为12的浮点数<br>e.一个字段宽度为30、左对齐的字符串</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>打印下面各项内容要分别使用什么转换说明？<br>a.字段宽度为15的unsigned long类型的整数<br>b.一个形如0x8a、字段宽度为4的十六进制整数<br>c.一个形如2.33E+02、字段宽度为12、左对齐的浮点数<br>d.一个形如+232.346、字段宽度为10的浮点数<br>e.一个字段宽度为8的字符串的前8个字符</li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>打印下面各项内容要分别使用什么转换说明？<br>a.一个字段宽度为6、最少有4位数字的十进制整数<br>b.一个在参数列表中给定字段宽度的八进制整数<br>c.一个字段宽度为2的字符<br>d.一个形如+3.13、字段宽度等于数字中字符数的浮点数<br>e.一个字段宽度为7、左对齐字符串中的前5个字符</li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>分别写出读取下列各输入行的scanf()语句，并声明语句中用到变量和数组。<br>a.101<br>b.22.32 8.34E−09<br>c.linguini<br>d.catch 22 e.catch 22 （但是跳过catch）</li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>什么是空白？</li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>下面的语句有什么问题？如何修正？<pre><code>printf(&quot;The double type is %z bytes..\n&quot;, sizeof(double));</code></pre></li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li><p>假设要在程序中用圆括号代替花括号，以下方法是否可行？</p><pre><code>#define ( &#123;#define ) &#125;</code></pre></li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>编写一个程序，提示用户输入名和姓，然后以“名,姓”的格式打印出来。</li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个程序，提示用户输入名和姓，并执行一下操作：<br>a.打印名和姓，包括双引号；<br>b.在宽度为20的字段右端打印名和姓，包括双引号；<br>c.在宽度为20的字段左端打印名和姓，包括双引号；<br>d.在比姓名宽度宽3的字段中打印名和姓。</li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个程序，读取一个浮点数，首先以小数点记数法打印，然后以指数记数法打印。用下面的格式进行输出（系统不同，指数记数法显示的位 数可能不同）：<br>a.输入21.3或2.1e+001；<br>b.输入+21.290或2.129E+001；</li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，提示用户输入身高（单位：英寸）和姓名，然后以下面的格式显示用户刚输入的信息：<br>Dabney, you are 6.208 feet tall<br>使用float类型，并用/作为除号。如果你愿意，可以要求用户以厘米为单位输入身高，并以米为单位显示出来。</li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个程序，提示用户输入以兆位每秒（Mb/s）为单位的下载速度和以兆字节（MB）为单位的文件大小。程序中应计算文件的下载时间。注 意，这里1字节等于8位。使用float类型，并用/作为除号。该程序要以下面 的格式打印 3 个变量的值（下载速度、文件大小和下载时间），显示小数点后面两位数字： At 18.12 megabits per second, a file of 2.20 megabytes downloads in 0.97 seconds.</li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个程序，先提示用户输入名，然后提示用户输入姓。在一行打印用户输入的名和姓，下一行分别打印名和姓的字母数。字母数要与相应名和姓的结尾对齐，如下所示：<pre><code> Melissa  Honeybee       7         8</code></pre>接下来，再打印相同的信息，但是字母个数与相应名和姓的开头对齐，如下所示：<pre><code> Melissa  Honeybee 7        8</code></pre></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序，将一个double类型的变量设置为1.0/3.0，一个float类型的变量设置为1.0/3.0。分别显示两次计算的结果各3次：一次显示小数点 后面6位数字；一次显示小数点后面12位数字；一次显示小数点后面16位数 字。程序中要包含float.h头文件，并显示FLT_DIG和DBL_DIG的值。1.0/3.0 的值与这些值一致吗？</li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>编写一个程序，提示用户输入旅行的里程和消耗的汽油量。然后计算并显示消耗每加仑汽油行驶的英里数，显示小数点后面一位数字。接下来， 使用1加仑大约3.785升，1英里大约为1.609千米，把单位是英里/加仑的值转 换为升/100公里（欧洲通用的燃料消耗表示法），并显示结果，显示小数点 后面 1 位数字。注意，美国采用的方案测量消耗单位燃料的行程（值越大越 好），而欧洲则采用单位距离消耗的燃料测量方案（值越低越好）。使用 #define 创建符号常量或使用 const 限定符创建变量来表示两个转换系数。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第九章复习题目和编程练习题的答案</title>
      <link href="posts/612ff2cc.html"/>
      <url>posts/612ff2cc.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第九章复习题和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>实际参数和形式参数的区别是什么？</li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>根据下面各函数的描述，分别编写它们的ANSI C函数头。注意，只需写出函数头，不用写函数体。<br> a.donut()接受一个int类型的参数，打印若干（参数指定数目）个0<br> b.gear()接受两个int类型的参数，返回int类型的值<br> c.guess()不接受参数，返回一个int类型的值<br> d.stuff_it()接受一个double类型的值和double类型变量的地址，把第1个值储存在指定位置</li></ol><a id="more"></a><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>根据下面各函数的描述，分别编写它们的ANSI C函数头。注意，只需写出函数头，不用写函数体。<br> a.n_to_char()接受一个int类型的参数，返回一个char类型的值<br> b.digit()接受一个double类型的参数和一个int类型的参数，返回一个int类型的值<br> c.which()接受两个可储存double类型变量的地址，返回一个double类型的地址<br> d.random()不接受参数，返回一个int类型的值</li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="4"><li>设计一个函数，返回两整数之和。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num1 = <span class="number">10</span>, num2 = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, add(num1, num2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>如果把复习题4改成返回两个double类型的值之和，应如何修改函数？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num1 = <span class="number">10</span>, num2 = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>, add(num1, num2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> num1, <span class="keyword">double</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>设计一个名为alter()的函数，接受两个int类型的变量x和y，把它们的值分别改成两个变量之和以及两变量之差。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">alter</span><span class="params">(<span class="keyword">int</span> *, <span class="keyword">int</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">10</span>, y = <span class="number">10</span>;</span><br><span class="line">    alter(&amp;x, &amp;y);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, x, y);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">alter</span><span class="params">(<span class="keyword">int</span> * x, <span class="keyword">int</span> * y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    *x = *x + *y;</span><br><span class="line">    *y = *x - *y * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>下面的函数定义是否正确？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">salami</span><span class="params">(num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num, count;</span><br><span class="line">    <span class="keyword">for</span> (count = <span class="number">1</span>; count &lt;= num;num++)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; O salami mio!\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>编写一个函数，返回3个整数参数中的最大值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">6</span>, y = <span class="number">66</span>, z = <span class="number">666</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, max(x, y, z));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; y &amp;&amp; x &gt; z)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (y &gt; x &amp;&amp; y &gt; z)</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>给定下面的输出：<pre><code> Please choose one of thefollowing:     1) copy files       2) move files     2) remove files     4) quit Enter the number of your choice:</code></pre>a.编写一个函数，显示一份有4个选项的菜单，提示用户进行选择（输出如上所示）。<br>b.编写一个函数，接受两个int类型的参数分别表示上限和下限。该函数从用户的输入中读取整数。如果整数超出规定上下限，函数再次打印菜单（使用a部分的函数）提示用户输入，然后获取一个新值。如果用户输入的整数在规定范围内，该函数则把该整数返回主调函数。如果用户输入一个非 整数字符，该函数应返回4。<br>c.使用本题a和b部分的函数编写一个最小型的程序。最小型的意思是，该程序不需要实现菜单中各选项的功能，只需显示这些选项并获取有效的响应即可。</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>设计一个函数min(x, y)，返回两个double类型值的较小值。在一个简单的驱动程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">min</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x = <span class="number">3.14</span>, y = <span class="number">3.1415926</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;min = %lf&quot;</span>, min(x, y));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">min</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt;= y)</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>设计一个函数chline(ch, i, j)，打印指定的字符j行i列。在一个简单的驱动程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chline</span><span class="params">(<span class="keyword">char</span>, <span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c%d%d&quot;</span>, &amp;ch, &amp;i, &amp;j);</span><br><span class="line">    chline(ch, i, j);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">chline</span><span class="params">(<span class="keyword">char</span> ch, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> p = <span class="number">0</span>; p &lt; i; p++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> b = <span class="number">0</span>; b &lt; j; b++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-2"><a href="#第三题-2" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个函数，接受3个参数：一个字符和两个整数。字符参数是待打印的字符，第1个整数指定一行中打印字符的次数，第2个整数指定打印指定字符的行数。编写一个调用该函数的程序。</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>两数的调和平均数这样计算：先得到两数的倒数，然后计算两个倒数的平均值，最后取计算结果的倒数。编写一个函数，接受两个double类型的参数，返回这两个参数的调和平均数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">average</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num1, num2, result;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf %lf&quot;</span>, &amp;num1, &amp;num2);</span><br><span class="line">    result = average(num1, num2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>, result);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">average</span><span class="params">(<span class="keyword">double</span> num1, <span class="keyword">double</span> num2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    num1 = <span class="number">1</span> / num1;</span><br><span class="line">    num2 = <span class="number">1</span> / num2;</span><br><span class="line">    <span class="keyword">double</span> result = (num1 + num2) / <span class="number">2</span>;</span><br><span class="line">    result = <span class="number">1</span> / result;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写并测试一个函数larger_of()，该函数把两个double类型变量的值替换为较大的值。例如，larger_of(x, y)会把x和y中较大的值重新赋给两个变量。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">larger_of</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> q = <span class="number">666</span>, p = <span class="number">999</span>;</span><br><span class="line">    larger_of(&amp;q, &amp;p);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n%lf&quot;</span>, q, p);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">larger_of</span><span class="params">(<span class="keyword">double</span> *d, <span class="keyword">double</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (*d &gt; *b)</span><br><span class="line">        *b = *d;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        *d = *b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写并测试一个函数，该函数以3个double变量的地址作为参数，把最小值放入第1个变量，中间值放入第2个变量，最大值放入第3个变量。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">(<span class="keyword">double</span> *, <span class="keyword">double</span> *, <span class="keyword">double</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a, b, c;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>, &amp;a, &amp;b, &amp;c) == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">match(&amp;a, &amp;b, &amp;c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.lf%.lf%.lf\n&quot;</span>, a, b, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">match</span><span class="params">(<span class="keyword">double</span> * a, <span class="keyword">double</span> * b, <span class="keyword">double</span> * c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> a1 = *a, b1 = *b, c1 = *c;</span><br><span class="line"><span class="keyword">if</span> (*a &gt; *b &amp;&amp; *a &gt; *c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*c &gt; *b)</span><br><span class="line">&#123;</span><br><span class="line">*c = a1;</span><br><span class="line">*b = c1;</span><br><span class="line">*a = b1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">*c = a1;</span><br><span class="line">*b = b1;</span><br><span class="line">*a = c1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (*b &gt; *a &amp;&amp; *b &gt; *c)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*c &gt; *a)</span><br><span class="line">&#123;</span><br><span class="line">*c = b1;</span><br><span class="line">*b = c1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">*c = b1;</span><br><span class="line">*b = a1;</span><br><span class="line">*a = c1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (*c &gt; *b &amp;&amp; *c &gt; *a)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*a &gt; *b)</span><br><span class="line">&#123;</span><br><span class="line">*b = a1;</span><br><span class="line">*a = b1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个函数，从标准输入中读取字符，直到遇到文件结尾。程序要报告每个字符是否是字母。如果是，还要报告该字母在字母表中的数值位置。例如，c和C在字母表中的位置都是3。合并一个函数，以一个字符作为参数，如果该字符是一个字母则返回一个数值位置，否则返回-1。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">character</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">character();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">character</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">while</span> ((ch = getchar()) != EOF)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">islower</span>(ch))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c在字母表中的位置是%d\n&quot;</span>, ch, ch - <span class="number">96</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isupper</span>(ch))</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c在字母表中的位置是%d\n&quot;</span>, ch, ch - <span class="number">64</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>第6章的程序清单6.20中，power()函数返回一个double类型数的正整数次幂。改进该函数，使其能正确计算负幂。另外，函数要处理0的任何次幂都为0，任何数的0次幂都为1（函数应报告0的0次幂未定义，因此把该值处理为1）。要使用一个循环，并在程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; //转为递归 9</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> n, <span class="keyword">int</span> p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x, xpow;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">exp</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入底数和指数 输入‘q’以使程序退出\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf%d&quot;</span>, &amp;x, &amp;<span class="built_in">exp</span>) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        xpow = power(x, <span class="built_in">exp</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3g的%d次幂为%.5g\n&quot;</span>, x, <span class="built_in">exp</span>, xpow);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入底数和指数 输入‘q’以使程序退出\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;bye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> n, <span class="keyword">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> <span class="built_in">pow</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= p; i++)</span><br><span class="line">        <span class="built_in">pow</span> *= n;</span><br><span class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">pow</span> &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> -<span class="built_in">pow</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>使用递归函数重写编程练习8。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">int</span>, <span class="keyword">int</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> x, xpow;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">exp</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入底数和指数 输入‘q’以使程序退出\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf%d&quot;</span>, &amp;x, &amp;<span class="built_in">exp</span>) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> x_index = x;</span><br><span class="line">        xpow = power(x, <span class="built_in">exp</span>, <span class="number">1</span>, x_index);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.3g的%d次幂为%.5g\n&quot;</span>, x, <span class="built_in">exp</span>, xpow);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入底数和指数 输入‘q’以使程序退出\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;bye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">power</span><span class="params">(<span class="keyword">double</span> x, <span class="keyword">int</span> <span class="built_in">exp</span>, <span class="keyword">int</span> n, <span class="keyword">double</span> x_index)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">exp</span> == <span class="number">0</span>)   <span class="comment">//零次幂处理</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    ++n;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="built_in">exp</span>) <span class="comment">//递归处理</span></span><br><span class="line">        x = power(x *= x_index, <span class="built_in">exp</span>, n, x_index);</span><br><span class="line">    <span class="keyword">if</span> (x_index &lt; <span class="number">0</span>) <span class="comment">//负数处理</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> -x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>为了让程序清单9.8中的to_binary()函数更通用，编写一个to_base_n()函数接受两个在2～10范围内的参数，然后以第2个参数中指定的进制打印第1个参数的数值。例如，to_base_n(129，8)显示的结果为201，也就是129的八进制数。在一个完整的程序中测试该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_base_n</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> jz)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, jz;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数字和这个数字将要转换的进制\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;jz) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d的%d进制为\n&quot;</span>, n, jz);</span><br><span class="line">        to_base_n(n, jz);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入一个数字和这个数字将要转换的进制\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">to_base_n</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> jz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &gt;= jz)</span><br><span class="line">    &#123;</span><br><span class="line">        to_base_n(n / jz, jz);</span><br><span class="line">        <span class="keyword">int</span> ys = n % jz;</span><br><span class="line">        <span class="keyword">if</span> (jz == <span class="number">16</span>) <span class="comment">//十六进制优化 确定为十六进制才进行转换</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ys &gt; <span class="number">9</span> &amp;&amp; ys &lt; <span class="number">16</span>) <span class="comment">//确定余数为十六进制的10到15才进行转换</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ys + (<span class="string">&#x27;A&#x27;</span> - <span class="number">10</span>));</span><br><span class="line">                <span class="comment">//printf(&quot;%c&quot;, ys + (&#x27;F&#x27; - 15));</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ys);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, n);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>编写并测试Fibonacci()函数，该函数用循环代替递归计算斐波那契数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">unsigned</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">long</span> j = Fibonacci(num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lu\n&quot;</span>, j);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">unsigned</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> i = <span class="number">1</span>, j = <span class="number">1</span>, index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">3</span>; index &lt;= n; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        i += j;      <span class="comment">//本来想写成这样的 https://blog.csdn.net/qq_36324796/article/details/78993870</span></span><br><span class="line">        index++;</span><br><span class="line">        <span class="keyword">if</span> (index &gt; n)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        j += i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> i; <span class="comment">//质数返回</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> j; <span class="comment">//偶数返回</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第三章复习题目和编程练习题目</title>
      <link href="posts/ffd17e17.html"/>
      <url>posts/ffd17e17.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第三章复习题和编程练习题</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>指出下面各种数据使用的合适数据类型（有些可使用多种数据类型）：<br>a.East Simpleton的人口<br>b.DVD影碟的价格<br>c.本章出现次数最多的字母<br>d.本章出现次数最多的字母次数</li></ol><a id="more"></a><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>在什么情况下要用long类型的变量代替int类型的变量？</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>使用哪些可移植的数据类型可以获得32位有符号整数？选择的理由是什么？</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>指出下列常量的类型和含义（如果有的话）：<br>a.’\b’<br>b.1066<br>c.99.44<br>d.0XAA<br>e.2.0e30</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>Dottie Cawm编写了一个程序，请找出程序中的错误。<pre><code> include &lt;stdio.h&gt; main ( float g; h; floatg = e21; tax = rate*g; )</code></pre></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>写出下列常量在声明中使用的数据类型和在printf()中对应的转换说明：<table><thead><tr><th>常量</th><th>类型</th><th>转换说明（%转换字符）</th></tr></thead><tbody><tr><td>12</td><td></td><td></td></tr><tr><td>0X3</td><td></td><td></td></tr><tr><td>‘c’</td><td></td><td></td></tr><tr><td>2.34E07</td><td></td><td></td></tr><tr><td>‘\040’</td><td></td><td></td></tr><tr><td>7.0</td><td></td><td></td></tr><tr><td>6L</td><td></td><td></td></tr><tr><td>6.0f</td><td></td><td></td></tr><tr><td>0x5.b6p12</td><td></td><td></td></tr></tbody></table></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>写出下列常量在声明中使用的数据类型和在printf()中对应的转换说明 （假设int为16位）：<table><thead><tr><th>常量</th><th>类型</th><th>转换说明（%转换字符）</th></tr></thead><tbody><tr><td>012</td><td></td><td></td></tr><tr><td>2.9e05L</td><td></td><td></td></tr><tr><td>‘s’</td><td></td><td></td></tr><tr><td>100000</td><td></td><td></td></tr><tr><td>‘\n’</td><td></td><td></td></tr><tr><td>20.0f</td><td></td><td></td></tr><tr><td>0x44</td><td></td><td></td></tr><tr><td>-40</td><td></td><td></td></tr></tbody></table></li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>假设程序的开头有下列声明：<pre><code> int imate = 2; long shot = 53456; char grade = &#39;A&#39;; float log = 2.71828;</code></pre>把下面printf()语句中的转换字符补充完整：<pre><code> printf(&quot;The odds against the %__ were %__ to 1.\n&quot;, imate, shot); printf(&quot;A score of %__ is not an %__ grade.\n&quot;, log, grade);</code></pre></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>假设ch是char类型的变量。分别使用转义序列、十进制值、八进制字符常量和十六进制字符常量把回车字符赋给ch（假设使用ASCII编码值）。</li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>修正下面的程序（在C中，/表示除以）。<pre><code>void main(int)  /this program is perfect /&#123;cows, legs integer;printf(&quot;How many cow legs did you count?\n); scanf(&quot;%c&quot;,legs);cows = legs / 4; printf(&quot;Thatimplies there are %f cows.\n&quot;, cows)&#125;</code></pre></li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>指出下列转义序列的含义：<pre><code>a.\nb.\\c.\&quot;d.\t</code></pre></li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li><p>通过试验（即编写带有此类问题的程序）观察系统如何处理整数上溢、浮点数上溢和浮点数下溢的情况。</p><hr></li></ol><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个程序，要求提示输入一个ASCII码值（如，66），然后打印输入的字符。</li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个程序，发出一声警报，然后打印下面的文本：<pre><code> Startled by the sudden sound, Sally shouted, &quot;By the Great Pumpkin, what was that!&quot;</code></pre></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，读取一个浮点数，先打印成小数点形式，再打印成指数形式。然后，如果系统支持，再打印成p记数法（即十六进制记数法）。 按以下格式输出（实际显示的指数位数因系统而异）：<pre><code> Enter a floating-point value: 64.25 fixed-point notation: 64.250000 exponential notation: 6.425000e+01 p notation: 0x1.01p+6</code></pre></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>一年大约有3.156×107秒。编写一个程序，提示用户输入年龄，然后显示该年龄对应的秒数。</li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>1个水分子的质量约为3.0×10−23克。1夸脱水大约是950克。编写一个程序，提示用户输入水的夸脱数，并显示水分子的数量。</li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>1英寸相当于2.54厘米。编写一个程序，提示用户输入身高（/英寸），然后以厘米为单位显示身高。</li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>在美国的体积测量系统中，1品脱等于2杯，1杯等于8盎司，1盎司等于2大汤勺，1大汤勺等于3茶勺。编写一个程序，提示用户输入杯数，并以品脱、盎司、汤勺、茶勺为单位显示等价容量。思考对于该程序，为何使用 浮点类型比整数类型更合适？</li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第二章复习题目和编程练习题目</title>
      <link href="posts/d112c232.html"/>
      <url>posts/d112c232.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第二章复习题和编程练习题</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>C语言的基本模块是什么？</li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>什么是语法错误？写出一个英语例子和C语言例子。</li></ol><a id="more"></a><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>什么是语义错误？写出一个英语例子和C语言例子。</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>Indiana Sloth编写了下面的程序，并征求你的意见。请帮助他评定。<pre><code> include studio.h int main&#123;void&#125; /* 该程序打印一年有多少周 /* (     int s s := 56;     print(There are s weeks in a year.);     return 0;</code></pre></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>假设下面的4个例子都是完整程序中的一部分，它们都输出什么结果？<pre><code> a. printf(&quot;Baa Baa Black Sheep.&quot;); printf(&quot;Have you any wool?\n&quot;); b. printf(&quot;Begone!\nO creature of lard!\n&quot;); c.printf(&quot;What?\nNo/nfish?\n&quot;); d.int num; num = 2; printf(&quot;%d + %d = %d&quot;, num, num, num + num);</code></pre></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>在main、int、function、char、=中，哪些是C语言的关键字？</li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>如何以下面的格式输出变量words和lines的值（这里，3020和350代表两个变量的值）？<br>There were 3020 words and 350 lines.</li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li><p>考虑下面的程序：</p><pre><code> #include &lt;stdio.h&gt; int main(void) &#123;     int a, b;     a = 5;     b = 2; /* 第7行 */     b = a; /* 第8行 */     a = b; /* 第9行 */     printf(&quot;%d %d\n&quot;, b, a);     return 0; &#125;</code></pre><p>请问，在执行完第7、第8、第9行后，程序的状态分别是什么？</p><hr></li></ol><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>考虑下面的程序：<pre><code> #include &lt;stdio.h&gt; int main(void) &#123; int x, y; x = 10; y = 5;/* 第7行 */ y = x + y; /*第8行*/ x = x*y;/*第9行*/ printf(&quot;%d %d\n&quot;, x, y); return 0; &#125;</code></pre>请问，在执行完第7、第8、第9行后，程序的状态分别是什么？</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>编写一个程序，调用一次printf()函数，把你的姓名打印在一行。再调用一次printf()函数，把你的姓名分别打印在两行。然后，再调用两次printf()函数，把你的姓名打印在一行。输出应如下所示（当然要把示例的内容换成你的姓名）：<pre><code> Gustav Mahler   &lt;-第 1 次打印的内容 Gustav          &lt;-第 2 次打印的内容 Mahler          &lt;-仍是第 2 次打印的内容 Gustav Mahler   &lt;-第 3 次和第 4 次打印的内容</code></pre></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个程序，打印你的姓名和地址。</li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个程序把你的年龄转换成天数，并显示这两个值。这里不用考虑闰年的问题。</li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，生成以下输出：<pre><code>  For he&#39;s a jolly good fellow!  For he&#39;s a jolly good fellow!  For he&#39;s a jolly good fellow!  Which nobody can deny!</code></pre>除了 main()函数以外，该程序还要调用两个自定义函数：一个名为jolly()，用于打印前 3 条消息，调用一次打印一条；另一个函数名为 deny()，打印最后一条消息。</li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>编写一个程序，生成以下输出：<pre><code> Brazil, Russia, India, China India, China, Brazil, Russia</code></pre>除了main()以外，该程序还要调用两个自定义函数：一个名为br()，调<br>用一次打印一次“Brazil, Russia”；另一个名为ic()，调用一次打印一次“India, China”。其他内容在main()函数中完成。</li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个程序，创建一个整型变量toes，并将toes设置为10。程序中还要计算toes的两倍和toes的平方。该程序应打印3个值，并分别描述以示区分。</li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>许多研究表明，微笑益处多多。编写一个程序，生成以下格式的输出：<pre><code> Smile!Smile!Smile! Smile!Smile! Smile!</code></pre>该程序要定义一个函数，该函数被调用一次打印一次“Smile!”，根据程序的需要使用该函数。</li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>在C语言中，函数可以调用另一个函数。编写一个程序，调用一个名为one_three()的函数。该函数在一行打印单词“one”，再调用第2个函数two()，然后在另一行打印单词“three”。two()函数在一行显示单词“two”。 main()函数在调用 one_three()函数前要打印短语“startingnow:”，并在调用完毕后显示短语“done!”。因此，该程序的输出应如下所示：<pre><code> starting now: one two three done!</code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第七章复习题目和编程练习题的答案</title>
      <link href="posts/fd0b3dd8.html"/>
      <url>posts/fd0b3dd8.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第七章复习题目和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>判断下列表达式是true还是false。<br>a 100 &gt; 3 &amp;&amp; ‘a’&gt;’c’<br>b 100 &gt; 3 || ‘a’&gt;’c’<br>c !(100&gt;3)</li></ol><a id="more"></a><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>根据下列描述的条件，分别构造一个表达式：<br>a umber等于或大于90，但是小于100<br>b h不是字符q或k<br>c umber在1～9之间（包括1和9），但不是5<br>d umber不在1～9之间</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>下面的程序关系表达式过于复杂，而且还有些错误，请简化并改正。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> weight, height;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d , weight, height);</span></span><br><span class="line"><span class="string">    if (weight &lt; 100 &amp;&amp; height &gt; 64)</span></span><br><span class="line"><span class="string">    if (height &gt;= 72)</span></span><br><span class="line"><span class="string">    printf(&quot;</span>You are very tall <span class="keyword">for</span> your weight.\n<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    else if (height &lt; 72 &amp;&amp;&gt; 64)</span></span><br><span class="line"><span class="string">    printf(&quot;</span>You are tall <span class="keyword">for</span> your weight.\n<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    else if (weight &gt; 300 &amp;&amp; !(weight &lt;= 300)&amp;&amp; height &lt; 48)</span></span><br><span class="line"><span class="string">    if (!(height &gt;= 48))</span></span><br><span class="line"><span class="string">    printf(&quot;</span> You are quite <span class="keyword">short</span> <span class="keyword">for</span> your weight.\n<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">    printf(&quot;</span>Your weight is ideal.\n<span class="string">&quot;);</span></span><br><span class="line"><span class="string">    return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>下列个表达式的值是多少？<pre><code> a.5 &gt; 2 b.3 + 4 &gt; 2 &amp;&amp; 3 &lt; 2 c.x &gt;= y || y &gt; x d.d = 5 + ( 6 &gt; 2 ) e.&#39;X&#39; &gt; &#39;T&#39; ? 10 : 5 f.x &gt; y ? y &gt; x : x &gt; y</code></pre></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>下面的程序将打印什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">for</span> (num = <span class="number">1</span>; num &lt;= <span class="number">11</span>; num++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;$&#x27;</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;#&#x27;</span>);</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;%&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>下面的程序将打印什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;fat &quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;hat &quot;</span>);</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;cat &quot;</span>);</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Oh no!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>下面的程序有哪些错误？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> lc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> uc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> oc = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;a&#x27;</span> &lt;= ch &gt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">            lc++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!(ch &lt; <span class="string">&#x27;A&#x27;</span>) || !(ch &gt; <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">            uc++;</span><br><span class="line">            oc++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(%d lowercase, %d uppercase, %d other, lc, uc, oc);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>下面的程序将打印什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> age = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">while</span> (age++ &lt;= <span class="number">65</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((age % <span class="number">20</span>) == <span class="number">0</span>) <span class="comment">/* age是否能被20整除？ */</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You are %d.Here is a raise.\n&quot;</span>, age);</span><br><span class="line">        <span class="keyword">if</span> (age = <span class="number">65</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;You are %d.Here is your gold watch.\n&quot;</span>, age);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>给定下面的输入时，以下程序将打印什么？<br>q c h b<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Step 1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;c&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;b&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;h&#x27;</span>)</span><br><span class="line">            <span class="keyword">goto</span> laststep;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Step 2\n&quot;</span>);</span><br><span class="line">    laststep:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Step 3\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>重写复习题9，但这次不能使用continue和goto语句。</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>编写一个程序读取输入，读到#字符停止，然后报告读取的空格数、换行符数和所有其他字符的数量。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> word = <span class="number">0</span>，space = <span class="number">0</span>, LF = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        word += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">            space += <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            LF += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;这段字符串中有%d个空格，%d个换行符，总共%d个字符&quot;</span>, space, LF, word);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个程序读取输入，读到#字符停止。程序要打印每个输入的字符以及对应的ASCII码（十进制）。<br>一行打印8个字符。建议 : 使用字符计数 和求模运算符（%）在每8个循环周期时打印一个换行符。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((c = getchar()) != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            i = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c-%d &quot;</span>, c, c);</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">8</span> == <span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个程序，读取整数直到用户输入0。<br>输入结束后，程序应报告 用户输入的偶数（不包括 0）个数、这些偶数的平均值、输入的奇数个数及其奇数的平均值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">0</span>;      <span class="comment">//接收指定值</span></span><br><span class="line">    <span class="keyword">int</span> n_even = <span class="number">0</span>;   <span class="comment">//偶数的个数</span></span><br><span class="line">    <span class="keyword">int</span> even_num = <span class="number">0</span>; <span class="comment">//偶数的总和</span></span><br><span class="line">    <span class="keyword">int</span> n_odd = <span class="number">0</span>;    <span class="comment">//奇数的个数</span></span><br><span class="line">    <span class="keyword">int</span> odd_num = <span class="number">0</span>;  <span class="comment">//奇数的总和</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num), num != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            n_even++;</span><br><span class="line">            even_num += num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            n_odd++;</span><br><span class="line">            odd_num += num;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果没有奇/偶数及数值 那就另作提示</span></span><br><span class="line">    <span class="keyword">if</span> (n_even != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;偶数有%3d个 偶数的平均数为%3d\n&quot;</span>, n_even, even_num / n_even);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;没有偶数\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (n_odd != <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;奇数有%3d个 奇数的平均数为%3d\n&quot;</span>, n_odd, odd_num / n_odd);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;没有奇数\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>使用if else语句编写一个程序读取输入，读到#停止。<br>用感叹号替换句号，用两个感叹号替换原来的感叹号，最后报告进行了多少次替换。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> once = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">            once++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">&#x27;!&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">            once++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">putchar</span>(ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;替换了%d次&quot;</span>, once);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>使用switch重写练习4。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> one = <span class="number">0</span>, two = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;.&#x27;</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">            one++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;!&#x27;</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">            <span class="built_in">putchar</span>(<span class="string">&#x27;!&#x27;</span>);</span><br><span class="line">            two++;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">putchar</span>(ch);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> once = one + two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;总共替换了%d次\n&quot;</span>, once);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;其中 . 符号替换了%d次 ！ 符号替换了%d次\n&quot;</span>, one, two);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写程序读取输入，读到#停止，报告ei出现的次数。<br>注意该程序要记录前一个字符和当前字符。用“Receive your eieio award”这样的输入来测试<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">int</span> fre = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;e&#x27;</span> &amp;&amp; getchar() == <span class="string">&#x27;i&#x27;</span>)</span><br><span class="line">            fre++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, fre);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序，提示用户输入一周工作的小时数，然后打印工资总额、税金和净收入。做如下假设：<br>a.基本工资 = 10.00美元/小时<br>b.加班（超过40小时） = 1.5倍的时间<br>c.税率： 前300美元为15% 续150美元为20%<br>余下的为25%<br>用#define定义符号常量。不用在意是否符合当前的税法。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m_hour 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> t_over 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> h_over 1.5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m_fourty (m_hour * t_over)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m1 300                                       <span class="comment">//第一个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m2 450                                       <span class="comment">//第二个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trf 0.15                                        <span class="comment">//前300美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trs 0.20                                        <span class="comment">//续150美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trt 0.25                                        <span class="comment">//余下的美元费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f_taxation (tr_m1 * trf)                        <span class="comment">//300美元的税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> s_taxation (f_taxation + trs * (tr_m2 - tr_m1)) <span class="comment">//450美元的税费</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> hour, m_all;               <span class="comment">//工作时间和工资总额  一周168小时</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;一周工作的小时数 = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;hour);</span><br><span class="line">    <span class="keyword">if</span> (hour &gt; <span class="number">40</span>)</span><br><span class="line">        m_all = m_fourty + m_hour * (h_over * (hour - t_over));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        m_all = hour * m_hour;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;工资总额 = %5.2lf\n税金     = %5.2lf\n净收入   = %5.2lf\n&quot;</span>, m_all, taxation(m_all), m_all - taxation(m_all));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span> m_all)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ta;     <span class="comment">//税金</span></span><br><span class="line">    <span class="keyword">if</span>(m_all &lt;= tr_m1)      <span class="comment">//300美元以内的税费</span></span><br><span class="line">    ta = m_all * trf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m1) <span class="comment">//450美元以内的税费</span></span><br><span class="line">    ta = f_taxation + trs * (m_all - tr_m1);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m2) <span class="comment">//超过450美元的税费</span></span><br><span class="line">    ta = s_taxation + trt * (m_all - tr_m2);</span><br><span class="line">    <span class="keyword">return</span> ta;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>修改练习7的假设a，让程序可以给出一个供选择的工资等级菜单。使用switch完成工资等级选择。运行程序后，显示的菜单应该类似这样：<pre><code> ***************************************************************** Enter the number corresponding to the desired pay rate or action: 1) $8.75/hr     2) $9.33/hr 2) $10.00/hr    4) $11.20/hr 5) quit *****************************************************************</code></pre>如果选择 1～4 其中的一个数字，程序应该询问用户工作的小时数。程序要通过循环运行，除非用户输入 5。如果输入 1～5 以外的数字，程序应 提醒用户输入正确的选项，然后再重复显示菜单提示用户输入。使用#define 创建符号常量表示各工资等级和税率。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> t_over 40</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> h_over 1.5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m1 300                                       <span class="comment">//第一个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tr_m2 450                                       <span class="comment">//第二个分界点</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trf 0.15                                        <span class="comment">//前300美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trs 0.20                                        <span class="comment">//续150美元的费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> trt 0.25                                        <span class="comment">//余下的美元费率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> f_taxation (tr_m1 * trf)                        <span class="comment">//300美元的税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> s_taxation (f_taxation + trs * (tr_m2 - tr_m1)) <span class="comment">//450美元的税费</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">M_all</span><span class="params">(<span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">mof</span><span class="params">(<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> m_all, m_hour;</span><br><span class="line">    <span class="keyword">int</span> target;</span><br><span class="line">    menu();</span><br><span class="line">    <span class="keyword">while</span> ((target = getchar()) != <span class="string">&#x27;5&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (target == <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">switch</span> (target)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            m_hour = <span class="number">8.75</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            m_hour = <span class="number">9.33</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            m_hour = <span class="number">10.00</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            m_hour = <span class="number">11.20</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入1-5之间的数字&quot;</span>);</span><br><span class="line">            menu();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        m_all = M_all(m_hour);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;工资总额 = %5.2lf\n税金     = %5.2lf\n净收入   = %5.2lf\n&quot;</span>, m_all, taxation(m_all), m_all - taxation(m_all));</span><br><span class="line">        menu();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n*****************************************************************\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter the number corresponding to the desired pay rate or action:\n1) $8.75/hr     2) $9.33/hr\n3) $10.00/hr    4) $11.20/hr\n5) quit\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;*****************************************************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">M_all</span><span class="params">(<span class="keyword">double</span> m_hour)</span> <span class="comment">//计算工资总额</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> hour;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入工作小时数&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;hour);</span><br><span class="line">    <span class="keyword">double</span> m_all, m_fourty;</span><br><span class="line">    m_fourty = (m_hour * t_over);</span><br><span class="line">    <span class="keyword">if</span> (hour &gt; t_over)</span><br><span class="line">        m_all = m_fourty + m_hour * (h_over * (hour - t_over));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        m_all = hour * m_hour;</span><br><span class="line">    <span class="keyword">return</span> m_all;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">taxation</span><span class="params">(<span class="keyword">double</span> m_all)</span> <span class="comment">//计算税费</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> ta;          <span class="comment">//税金</span></span><br><span class="line">    <span class="keyword">if</span> (m_all &lt;= tr_m1) <span class="comment">//300美元以内的税费</span></span><br><span class="line">        ta = m_all * trf;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m1) <span class="comment">//450美元以内的税费</span></span><br><span class="line">        ta = f_taxation + trs * (m_all - tr_m1);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (m_all &gt; tr_m2) <span class="comment">//超过450美元的税费</span></span><br><span class="line">        ta = s_taxation + trt * (m_all - tr_m2);</span><br><span class="line">    <span class="keyword">return</span> ta;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>编写一个程序，只接受正整数输入，然后显示所有小于或等于该数的素数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num, i, j, result, a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= num; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                a = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a == <span class="number">1</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>1988年的美国联邦税收计划是近代最简单的税收方案。它分为4个类别，每个类别有两个等级。<br>下面是该税收计划的摘要（美元数为应征税的收入）：<br>|类别|税金|<br>|单身|17850美元按15%计，超出部分按28%计|<br>|户主|23900美元按15%计，超出部分按28%计|<br>|已婚，共有|29750美元按15%计，超出部分按28%计|<br>|已婚，离异|14875美元按15%计，超出部分按28%计|<br>例如，一位工资为20000美元的单身纳税人，应缴纳税费0.15×17850+0.28×（20000−17850）美元。编写一个程序，让用户指定缴纳税金的种类和应纳税收入，然后计算税金。程序应通过循环让用户可以多次输入。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SINTRT 17850          <span class="comment">//单身的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SINTRM (SINTRT * TRO) <span class="comment">//单身的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOHTRT 23900          <span class="comment">//户主的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HOHTRM (HOHTRT * TRO) <span class="comment">//户主的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MARTRT 29750          <span class="comment">//已婚的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MARTRM (MARTRT * TRO) <span class="comment">//已婚的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIVTRT 14875          <span class="comment">//离异的税费阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIVTRM (DIVTRT * TRO) <span class="comment">//离异的一级税费</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRO 0.15              <span class="comment">//一级税率</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TRT 0.28              <span class="comment">//二级税率</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">result</span><span class="params">(<span class="keyword">double</span>, <span class="keyword">double</span>, <span class="keyword">double</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">banner</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">double</span> T_target, M_target;</span><br><span class="line">    banner();</span><br><span class="line">    <span class="keyword">while</span> ((ch = getchar()) != <span class="string">&#x27;5&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (ch)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            T_target = SINTRT;</span><br><span class="line">            M_target = SINTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">            T_target = HOHTRT;</span><br><span class="line">            M_target = HOHTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">2</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">            T_target = MARTRT;</span><br><span class="line">            M_target = MARTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">3</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">            T_target = DIVTRT;</span><br><span class="line">            M_target = DIVTRM;</span><br><span class="line">            result(T_target, M_target, <span class="number">4</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请重新输入&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        banner();</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">result</span><span class="params">(<span class="keyword">double</span> T_target, <span class="keyword">double</span> M_target, <span class="keyword">double</span> tip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> DR = <span class="number">0</span>, result;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;类别：%.lf\n请输入美元(输入q以退出到种类选择)\n&quot;</span>, tip);</span><br><span class="line">    <span class="keyword">while</span> ((<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;DR)) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (DR &lt;= T_target)</span><br><span class="line">            result = DR * TRO;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result = M_target + (DR - T_target) * TRT;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.2lf美元的税费\n&quot;</span>, result);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;类别：%.lf\n请输入美元(输入q以退出到种类选择)\n&quot;</span>, tip);</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">banner</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;************************************************************\n&quot;</span></span><br><span class="line">           <span class="string">&quot;请输入一个对应的字符以使程序进入下一步\n&quot;</span></span><br><span class="line">           <span class="string">&quot;1)单身        2)户主\n3)已婚，共有  4)已婚，离异\n5)退出\n&quot;</span></span><br><span class="line">           <span class="string">&quot;************************************************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>ABC 邮购杂货店出售的洋蓟售价为 2.05 美元/磅，甜菜售价为 1.15美元/磅，胡萝卜售价为 1.09美元/磅。在添加运费之前，100美元的订单有 5%的打折优惠。少于或等于5磅的订单收取6.5美元的运费和包装费，5磅～ 20磅的订单收取14美元的运费和包装费，超过20磅的订单在14美元的基础上 每续重1磅增加0.5美元。编写一个程序，在循环中用switch语句实现用户输入不同的字母时有不同的响应，即输入a的响应是让用户输入洋蓟的磅数，b 是甜菜的磅数，c是胡萝卜的磅数，q 是退出订购。程序要记录累计的重量。即，如果用户输入 4 磅的甜菜，然后输入 5磅的甜菜，程序应报告9磅的甜菜。然后，该程序要计算货物总价、折扣（如果有的话）、运费和包装费。随后，程序应显示所有的购买信息：物品售价、订购的重量（单位：磅）、订购的蔬菜费用、订单的总费用、折扣（如果有的话）、运费和包装费，以及所有的费用总额。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> YJM 2.05        <span class="comment">//洋蓟价格</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TCM 1.15        <span class="comment">//甜菜价格</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HLBM 1.09       <span class="comment">//胡萝卜价格</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DCS 0.05        <span class="comment">//打折优惠</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PA 5            <span class="comment">//一级磅数阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PB 20           <span class="comment">//二级磅数阈值</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PAM 6.5         <span class="comment">//一级磅数单价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PBM 14          <span class="comment">//二级磅数单价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OFPA PA *PAM    <span class="comment">//一级磅数总价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OFPB PB *PBM    <span class="comment">//二级磅数总价</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OFP 0.5         <span class="comment">//超过20磅每磅续加0.5美元</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span>;        <span class="comment">//菜单</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span>)</span></span>;       <span class="comment">//统计所需蔬菜磅数</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">freight</span><span class="params">(<span class="keyword">double</span>)</span></span>; <span class="comment">//包装费和运费</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> target;        <span class="comment">//进入switch</span></span><br><span class="line">    <span class="keyword">double</span> yj, tc, hlb; <span class="comment">//洋蓟， 甜菜， 胡萝卜</span></span><br><span class="line">    <span class="keyword">int</span> dft = <span class="number">1</span>;        <span class="comment">//防止用户输入其他值程序报出总蔬菜磅数</span></span><br><span class="line">    menu();</span><br><span class="line">    <span class="keyword">while</span> ((target = getchar()) != <span class="string">&#x27;q&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (target)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;a&#x27;</span>:</span><br><span class="line">            dft = <span class="number">1</span>;</span><br><span class="line">            yj += add(<span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;b&#x27;</span>:</span><br><span class="line">            dft = <span class="number">1</span>;</span><br><span class="line">            tc += add(<span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;c&#x27;</span>:</span><br><span class="line">            dft = <span class="number">1</span>;</span><br><span class="line">            hlb += add(<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            dft = <span class="number">0</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请重新输入\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        menu();</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (dft)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%5.2lf磅洋蓟 = %5.2lf美元\n%5.2lf磅甜菜 = %5.2lf美元\n%5.2lf磅胡萝卜 = %5.2lf美元\n&quot;</span>, yj, yj * YJM, tc, tc * TCM, hlb, hlb * HLBM);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> Tp = (yj * YJM) + (tc * TCM) + (hlb * HLBM); <span class="comment">//蔬菜总费用</span></span><br><span class="line">    <span class="keyword">double</span> Tpk = <span class="number">0</span>;                                     <span class="comment">//折扣数</span></span><br><span class="line">    <span class="keyword">if</span> (Tp &gt; <span class="number">100</span>)</span><br><span class="line">        Tpk = Tp * DCS;</span><br><span class="line">    <span class="keyword">double</span> Pound = yj + tc + hlb;   <span class="comment">//总磅数</span></span><br><span class="line">    <span class="keyword">double</span> PoundM = freight(Pound); <span class="comment">//包装费和运费</span></span><br><span class="line">    <span class="keyword">double</span> aof = Tp + PoundM - Tpk; <span class="comment">//所有的加在一起</span></span><br><span class="line">    <span class="keyword">if</span> (Tpk)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;蔬菜总磅数 = %.2lf磅\n蔬菜总费用 = %.2lf美元\n折扣 = %.2lf美元\n运费和包装费 = %.2lf美元\n所有的费用 = %.2lf美元\n&quot;</span>, Pound, Tp, Tpk, PoundM, aof);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;蔬菜总磅数 = %.2lf磅\n蔬菜总费用 = %.2lf美元\n运费和包装费 = %.2lf美元\n所有的费用 = %.2lf美元\n&quot;</span>, Pound, Tp, PoundM, aof);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">freight</span><span class="params">(<span class="keyword">double</span> Pound)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> Ft;</span><br><span class="line">    <span class="keyword">if</span> (Pound &lt;= PA)</span><br><span class="line">        Ft = PAM;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Pound &gt; PA &amp;&amp; Pound &lt; PB)</span><br><span class="line">        Ft = PBM;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Pound &gt; PB)</span><br><span class="line">        Ft = PBM + (Pound - PB) * OFP;</span><br><span class="line">    <span class="keyword">return</span> Ft;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">char</span> tip)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> bang, _bang;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;类别：%c\n请输入磅数(输入q以退出到选择菜单)\n&quot;</span>, tip);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;bang) == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        _bang += bang;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;类别：%c，当前磅数为 %.2lf\n&quot;</span>, tip, _bang);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入磅数(输入q以退出到选择菜单)\n&quot;</span>, tip);</span><br><span class="line">        <span class="keyword">while</span> (getchar() != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> _bang;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;**************************************************\n*                                                *&quot;</span></span><br><span class="line">           <span class="string">&quot;\n*  a)   洋蓟 2.05美元/磅    b) 甜菜 1.15美元/磅  *\n*  c) 胡萝卜 1.09美元/磅    q) 退出订购          *\n*                                                *&quot;</span></span><br><span class="line">           <span class="string">&quot;\n**************************************************\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第六章复习题目和编程练习题的答案</title>
      <link href="posts/4f33e526.html"/>
      <url>posts/4f33e526.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第六章复习题目和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>写出执行完下列各行后quack的值是多少。后5行中使用的是第1行quack的值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> quack = <span class="number">2</span>;</span><br><span class="line">quack += <span class="number">5</span>;</span><br><span class="line">quack *= <span class="number">10</span>;</span><br><span class="line">quack -= <span class="number">6</span>;</span><br><span class="line">quack /= <span class="number">8</span>;</span><br><span class="line">quack %= <span class="number">3</span>;</span><br></pre></td></tr></table></figure><a id="more"></a></li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>假设value是int类型，下面循环的输出是什么？<pre><code> for ( value = 36; value &gt; 0; value /= 2) printf(&quot;%3d&quot;, value);</code></pre>如果value是double类型，会出现什么问题？</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>用代码表示以下测试条件：<br>a.大于5<br>b.scanf()读取一个double类型值且失败<br>c.X的值等于</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>用代码表示以下测试条件：<br>a.scanf()成功读取一个整数<br>b.不等于<br>c.x大于或等于20</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>下面的程序有点问题，请找出问题所在。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, <span class="built_in">list</span>(<span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>, i &lt;= <span class="number">10</span>, i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">list</span>[i] = <span class="number">2</span> * i + <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>, j &gt;= i, j++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; %d&quot;</span>, <span class="built_in">list</span>[j]);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个程序打印下面的图案，要求使用嵌套循环：<pre><code> $$$$$$$$ $$$$$$$$ $$$$$$$$ $$$$$$$$</code></pre></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>下面的程序各打印什么内容？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">a.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (++i &lt; <span class="number">4</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Hi! &quot;</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Bye! &quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (i++ &lt; <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">b.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>, ch = <span class="string">&#x27;A&#x27;</span>; i &lt; <span class="number">4</span>; i++, ch += <span class="number">2</span> * i)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>假设用户输入的是么？（在ASCII码中，!紧跟在空格字符后面）<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">a.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">b.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">while</span> (ch != <span class="string">&#x27;g&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ++ch);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">c.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">    &#125; <span class="keyword">while</span> (ch != <span class="string">&#x27;g&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">d.</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch);</span><br><span class="line">    <span class="keyword">for</span> (ch = <span class="string">&#x27;$&#x27;</span>; ch != <span class="string">&#x27;g&#x27;</span>; <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;ch))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>下面的程序打印什么内容？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    n = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">while</span> (++n &lt;= <span class="number">33</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d|&quot;</span>, n);</span><br><span class="line">    n = <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d|&quot;</span>, n);</span><br><span class="line">    <span class="keyword">while</span> (++n &lt;= <span class="number">33</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n***\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">1</span>; n * n &lt; <span class="number">200</span>; n += <span class="number">4</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n***\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">2</span>, m = <span class="number">6</span>; n &lt; m; n *= <span class="number">2</span>, m += <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, n, m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n***\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (n = <span class="number">5</span>; n &gt; <span class="number">0</span>; n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (m = <span class="number">0</span>; m &lt;= n; m++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>考虑下面的声明：<br>double mint[10];<br>a.数组名是什么？<br>b.该数组有多少个元素？<br>c.每个元素可以储存什么类型的值？<br>d.下面的哪一个scanf()的用法正确？<br>i.scanf(“%lf”, mint[2])<br>ii.scanf(“%lf”, &amp;mint[2])<br>iii.scanf(“%lf”, &amp;mint)</li></ol><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>Noah先生喜欢以2计数，所以编写了下面的程序，创建了一个储存2、4、6、8等数字的数组。<br>这个程序是否有错误之处？如果有，请指出。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 8</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> by_twos[SIZE];</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">1</span>; index &lt;= SIZE; index++)</span><br><span class="line">        by_twos[index] = <span class="number">2</span> * index;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">1</span>; index &lt;= SIZE; index++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, by_twos);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>假设要编写一个返回long类型值的函数，函数定义中应包含什么？</li></ol><hr><h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>定义一个函数，接受一个int类型的参数，并以long类型返回参数的平方值。</li></ol><hr><h3 id="第十四题"><a href="#第十四题" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14"><li>下面的程序打印什么内容？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">1</span>, <span class="built_in">printf</span>(<span class="string">&quot;%d: Hi!\n&quot;</span>, k); <span class="built_in">printf</span>(<span class="string">&quot;k = %d\n&quot;</span>, k),k * k &lt; <span class="number">26</span>; k += <span class="number">2</span>, <span class="built_in">printf</span>(<span class="string">&quot;Now k is %d\n&quot;</span>, k))</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;k is %d in the loop\n&quot;</span>, k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>编写一个程序，创建一个包含26个元素的数组，并在其中储存26个小写字母。然后打印数组的所有内容。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="keyword">char</span> Letter, <span class="built_in">array</span>[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>,Letter = <span class="string">&#x27;a&#x27;</span>; index &lt; <span class="number">26</span>; index++,Letter++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">array</span>[index] = Letter;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot; %c&quot;</span>, <span class="built_in">array</span>[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li><p>使用嵌套循环，按下面的格式打印字符：</p><p> $<br> $$<br> $$$<br> $$$$<br> $$$$$</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> outer, inner;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> outer = <span class="number">0</span>; outer &lt; <span class="number">5</span>; outer++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> inner = <span class="number">0</span>; inner &lt;= outer; inner++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;$&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>使用嵌套循环，按下面的格式打印字母：<br>F<br>FE<br>FED<br>FEDC<br>FEDCB<br>FEDCBA<br>注意：如果你的系统不使用ASCII或其他以数字顺序编码的代码，可以 把字符数组初始化为字母表中的字母：<br>char lets[27] = “ABCDEFGHIJKLMNOPQRSTUVWXYZ”;<br>然后用数组下标选择单独的字母，例如lets[0]是‘A’，等等。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> outer = <span class="string">&#x27;F&#x27;</span>, inner = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (outer = <span class="string">&#x27;F&#x27;</span>; outer &gt;= <span class="string">&#x27;A&#x27;</span>; outer--)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="keyword">for</span> (inner = <span class="string">&#x27;F&#x27;</span>; inner &gt;= outer; inner--)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, inner);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>使用嵌套循环，按下面的格式打印字母：<br>A              65<br>BC             66<br>DEF            68<br>GHIJ           71<br>KLMNO          75<br>PQRSTU         80<br>如果你的系统不使用以数字顺序编码的代码，请参照练习3的方案解决。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> index;</span><br><span class="line">    <span class="keyword">int</span> outer, inner;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="string">&#x27;A&#x27;</span>,outer = <span class="number">1</span>; outer &lt;= <span class="number">6</span>; outer++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (inner = <span class="number">1</span>; inner &lt;= outer;inner++, index++)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, index);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol><li><p>编写一个程序，提示用户输入大写字母。使用嵌套循环以下面金字塔 型的格式打印字母：</p><pre><code>         Ａ        ABA       ABCBA      ABCDCBA     ABCDEDCBA</code></pre><p>打印这样的图形，要根据用户输入的字母来决定。例如，上面的图形是 在用户输入E后的打印结果。<br>提示：用外层循环处理行，每行使用3个内层循环，分别处理空格、以升序打印字母、以降序打印字母。<br>如果系统不使用ASCII或其他以数字顺序 编码的代码，请参照练习3的解决方案。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span>  word;     <span class="comment">//接收指定值</span></span><br><span class="line">    <span class="keyword">int</span>   line;     <span class="comment">//控制升序打印字母的个数 放在外层中循环递增 意思是控制第一行的升序层打印一个字母 第二层。。。（与目标有些无伤大雅的出入）用断点跑一遍你就明白了</span></span><br><span class="line">    <span class="keyword">char</span> space;     <span class="comment">//控制打印空格的个数  赋值在外层中 指定值减去&#x27;A&#x27;就是要打印的空格数量</span></span><br><span class="line">    <span class="keyword">int</span>  index;     <span class="comment">//在空格和升序中均被用来当作索引</span></span><br><span class="line">    <span class="keyword">char</span>    Ao;     <span class="comment">//升序</span></span><br><span class="line">    <span class="keyword">char</span>    Do;     <span class="comment">//降序</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;word);</span><br><span class="line">    <span class="keyword">for</span> (line = <span class="number">0</span>, space = word - <span class="string">&#x27;A&#x27;</span>; Ao &lt;= word; Ao++, line++, space--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; space; index++)                <span class="comment">//空格层</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (index = <span class="number">1</span>, Ao = <span class="string">&#x27;A&#x27;</span>; index &lt;= line; index++, Ao++)<span class="comment">//升序层  搞明白为什么index要初始化为1 提示：index &lt;= line;和外层line = 0；</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, Ao);</span><br><span class="line">        <span class="keyword">for</span> (Do = Ao; Do &gt;= <span class="string">&#x27;A&#x27;</span>; Do--)                         <span class="comment">//降序层  Do取升序Ao的值 然后递减输出到A</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, Do);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>编写一个程序打印一个表格，每一行打印一个整数、该数的平方、该数的立方。要求用户输入表格的上下限。使用一个for循环。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> Begin, End;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Begin = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;Begin);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;End = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;End);</span><br><span class="line">    <span class="keyword">for</span> (; Begin &lt;= End; Begin++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The square and cube of %5d is %5d and %5d\n&quot;</span>, Begin, Begin * Begin, Begin * Begin * Begin);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序把一个单词读入一个字符数组中，然后倒序打印这个单词。<br>提示：strlen()函数（第4章介绍过）可用于计算数组最后一个字符的下标。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> word[<span class="number">100</span>];</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, word);</span><br><span class="line">    <span class="keyword">int</span> size = <span class="built_in">strlen</span>(word) - <span class="number">1</span>;    <span class="comment">//stren函数从1开始计数,所以要减1</span></span><br><span class="line">    <span class="keyword">for</span> (; size &gt;= <span class="number">0</span>; size--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, word[size]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>编写一个程序，要求用户输入两个浮点数，并打印两数之差除以两数 乘积的结果。<br>在用户输入非数字之前，程序应循环处理用户输入的每对值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  //注意审题</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> one,two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter a pair of numbers\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;one, &amp;two) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%g&quot;</span>, (one - two) / (one * two));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter a pair of numbers\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>修改练习8，使用一个函数返回计算的结果。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Operation</span><span class="params">(<span class="keyword">float</span> one, <span class="keyword">float</span> two)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> one,two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter a pair of numbers\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>, &amp;one, &amp;two) == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">float</span> Result = Operation(one,two);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%g\n&quot;</span>, Result);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter a pair of numbers\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">Operation</span><span class="params">(<span class="keyword">float</span> one, <span class="keyword">float</span> two)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (one - two) / (one * two);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十题-1"><a href="#第十题-1" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>编写一个程序，要求用户输入一个上限整数和一个下限整数，计算 从上限到下限范围内所有整数的平方和，并显示计算结果。然后程序继续提 示用户输入上限和下限整数，并显示结果，直到用户输入的上限整数小于下 限整数为止。程序的运行示例如下：<br>Enter　lower　and　upper　integer　limits : 5　9<br>The　sums　of　the　squares　from　25　to　81　is　255<br>Enter　next　set　of　limits : 3　25<br>The　sums　of　the　squares　from　9　to　625　is　5520<br>Enter　next　set　of　limits : 5　5<br>Done<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calculation</span><span class="params">(<span class="keyword">int</span>, <span class="keyword">int</span>)</span></span>;  <span class="comment">//声明函数原型</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lower_num, upper_num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter　lower　and　upper　integer　limits :&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;lower_num, &amp;upper_num);</span><br><span class="line">    <span class="keyword">while</span> (lower_num &lt; upper_num)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;The sums of the squares from %d to %d is &quot;</span>, lower_num * lower_num, upper_num * upper_num);</span><br><span class="line">        calculation(lower_num, upper_num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Enter next set of limits :&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;lower_num, &amp;upper_num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done!&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calculation</span><span class="params">(<span class="keyword">int</span> lower_num, <span class="keyword">int</span> upper_num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result;</span><br><span class="line">    <span class="keyword">for</span> (result = <span class="number">0</span>; lower_num &lt;= upper_num; lower_num++)</span><br><span class="line">        result += lower_num * lower_num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十一题-1"><a href="#第十一题-1" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>编写一个程序，在数组中读入8个整数，然后按倒序打印这8个整数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 8</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">0</span>;  <span class="comment">//两阶段 遍历数组赋值和遍历数组输出</span></span><br><span class="line">    <span class="keyword">int</span> number[SIZE];</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; SIZE; index++)  <span class="comment">//数组是从0开始的</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;number[index]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (index = SIZE - <span class="number">1</span>; index &gt;= <span class="number">0</span>; index--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, number[index]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十二题-1"><a href="#第十二题-1" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>考虑下面两个无限序列：<br>1.0 + 1.0/2.0 + 1.0/3.0 + 1.0/4.0 + …<br>1.0 - 1.0/2.0 + 1.0/3.0 - 1.0/4.0 + …<br>编写一个程序计算这两个无限序列的总和，直到到达某次数。提示：奇数个-1 相乘得-1，偶数个-1相乘得1。让用户交互地输入指定的次数，当用户输入0或负值时结束输入。查看运行100项、1000项、10000项后的总和，是否发现每个序列都收敛于某值？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j, index;</span><br><span class="line">    <span class="keyword">double</span> i = <span class="number">1</span>, result1 = <span class="number">0</span>, result2 = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;j);</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt; j; index++, i++)</span><br><span class="line">    &#123;</span><br><span class="line">        result1 += <span class="number">1</span> / i;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="keyword">int</span>)i &amp; <span class="number">1</span>)</span><br><span class="line">            result2 += <span class="number">1</span> / i;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            result2 -= <span class="number">1</span> / i;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%result1 = %lf   result2 = %lf\n&quot;</span>, result1, result2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十三题-1"><a href="#第十三题-1" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>编写一个程序，创建一个包含8个元素的int类型数组，分别把数组元素设置为2的前8次幂。<br>使用for循环设置数组元素的值，使用do while循环显示数组元素的值。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SIZE 8</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[SIZE], index, num;</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>, num = <span class="number">1</span>; index &lt; SIZE; index++, num *= <span class="number">2</span>)</span><br><span class="line">        <span class="built_in">array</span>[index] = num;</span><br><span class="line">    index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">array</span>[index]);</span><br><span class="line">        index++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (index &lt; SIZE);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十四题-1"><a href="#第十四题-1" class="headerlink" title="第十四题"></a>第十四题</h3><ol start="14"><li>编写一个程序，创建两个包含8个元素的double类型数组，使用循环提示用户为第一个数组输入8 个值。第二个数组元素的值设置为第一个数组对应元素的累积之和。例如，第二个数组的第 4个元素的值是第一个数组前 4个元素之和，第二个数组的第5个元素的值是第一个数组前5个元素之和 （用嵌套循环可以完成，但是利用第二个数组的第5个元素是第二个数组的 第4个元素与第一个数组的第5个元素之和，只用一个循环就能完成任务，不需要使用嵌套循环）。最后，使用循环显示两个数组的内容，第一个数组显示成一行，第二个数组显示在第一个数组的下一行，而且每个元素都与第一个数组各元素相对应。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> one[<span class="number">8</span>], two[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">int</span> index;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;one = &quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt;= <span class="number">7</span>; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;one[index]); <span class="comment">//7个数字需要一次输完   否则就需要再创两个for来输出数组</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%4.1lf|&quot;</span>, one[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    two[<span class="number">-1</span>] = <span class="number">0</span>; <span class="comment">//数组下标-1</span></span><br><span class="line">    <span class="keyword">for</span> (index = <span class="number">0</span>; index &lt;= <span class="number">7</span>; index++)</span><br><span class="line">    &#123;</span><br><span class="line">        two[index] = one[index] + two[index - <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%4.1lf|&quot;</span>, two[index]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十五题"><a href="#第十五题" class="headerlink" title="第十五题"></a>第十五题</h3><ol start="15"><li>编写一个程序，读取一行输入，然后把输入的内容倒序打印出来。可以把输入储存在char类型的数组中，假设每行字符不超过255。回忆一下，根据%c转换说明，scanf()函数一次只能从输入中读取一个字符，而且在用户按下Enter键时scanf()函数会生成一个换行字符（\n）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> word[<span class="number">255</span>];</span><br><span class="line">    <span class="keyword">int</span> index = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        index++;                    <span class="comment">//思考一下为什么递增一定要放在这一行</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;word[index]);</span><br><span class="line">    &#125; <span class="keyword">while</span> (word[index] != <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">for</span> (index -= <span class="number">1</span>; index &gt;= <span class="number">0</span>; index--)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, word[index]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十六题"><a href="#第十六题" class="headerlink" title="第十六题"></a>第十六题</h3><ol start="16"><li>Daphne以10%的单利息投资了100美元（也就是说，每年投资获利相当于原始投资的10%）。<br>Deirdre以 5%的复合利息投资了 100 美元（也就是说，利息是当前余额的 5%，包含之前的利息）。<br>编写一个程序，计算需要多少年Deirdre的投资额才会超过Daphne，并显示那时两人的投资额。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> Daphne = <span class="number">100</span>, Deirdre = <span class="number">100</span>;</span><br><span class="line">    <span class="keyword">int</span> years = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (Deirdre &lt;= Daphne)</span><br><span class="line">    &#123;</span><br><span class="line">        Daphne = Daphne + <span class="number">10</span>;</span><br><span class="line">        Deirdre = Deirdre * <span class="number">1.05</span>;</span><br><span class="line">        years++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;第%d年Deirdre的投资额超过了Daphne&quot;</span>, years);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十七题"><a href="#第十七题" class="headerlink" title="第十七题"></a>第十七题</h3><ol start="17"><li>Chuckie Lucky赢得了100万美元（税后），他把奖金存入年利率8%的账户。<br>在每年的最后一天， Chuckie取出10万美元。编写一个程序，计算多少年后Chuckie会取完账户的钱？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> dollar = <span class="number">1000000</span>;</span><br><span class="line">    <span class="keyword">int</span> year = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (dollar &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        year++;</span><br><span class="line">        dollar -= (<span class="number">100000</span> - dollar * <span class="number">0.08</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;第%2d年 Chuckie Lucky先生 把钱取完了&quot;</span>, year);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十八题"><a href="#第十八题" class="headerlink" title="第十八题"></a>第十八题</h3><ol start="18"><li>Rabnud博士加入了一个社交圈。起初他有5个朋友。他注意到他的朋友数量以下面的方式增长。<br>第1周少了1个朋友，剩下的朋友数量翻倍；第2 周少了2个朋友，剩下的朋友数量翻倍。<br>一般而言，第N周少了N个朋友，剩下的朋友数量翻倍。编写一个程序，计算并显示Rabnud博士每周的朋友数量。<br>该程序一直运行，直到超过邓巴数（Dunbar’s number）。邓巴数是粗略 估算一个人在社交圈中有稳定关系的成员的最大值，该值大约是150。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DB 150</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> friends, index;</span><br><span class="line">    <span class="keyword">for</span> (friends = <span class="number">5</span>, index = <span class="number">1</span>; friends &lt;= DB; friends -= index, friends *= <span class="number">2</span>, index++)    <span class="comment">//初始朋友5个，第一周减一个朋友；朋友总数不能大于邓巴数；朋友数量减去这周要减的数量，剩下的朋友数量翻倍，每周要减的朋友数量加一。</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;第%2d周Rabnud博士有%3d个朋友\n&quot;</span>, index, friends);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第五章复习题目和编程练习题的答案</title>
      <link href="posts/d48f18a.html"/>
      <url>posts/d48f18a.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第五章复习题目和编程练习题的答案</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>假设所有变量的类型都是int，下列各项变量的值是多少：<br>a.x = (2 + 3) * 6;<br>b.x = (12 + 6)/2<em>3;<br>c.y = x = (2 + 3)/4;<br>d.y = 3 + 2</em>(x = 7/2);</li></ol><a id="more"></a><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>假设所有变量的类型都是int，下列各项变量的值是多少：<br>a.x = (int)3.8 + 3.3;<br>b.x = (2 + 3) * 10.5;<br>c.x = 3 / 5 * 22.0;<br>d.x = 22.0 * 3 / 5;</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>对下列各表达式求值：<br>a.30.0 / 4.0 * 5.0;<br>b.30.0 / (4.0 * 5.0);<br>c.30 / 4 * 5;<br>d.30 * 5 / 4;<br>e.30 / 4.0 * 5;<br>f.30 / 4 * 5.0;</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>请找出下面的程序中的错误。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>,</span><br><span class="line">    <span class="keyword">float</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Watch out! Here come a bunch of fractions!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (i &lt; <span class="number">30</span>)</span><br><span class="line">    n = <span class="number">1</span>/i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; %f&quot;</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s all, folks!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>这是程序清单 5.9 的另一个版本。从表面上看，该程序只使用了一条scanf()语句，比程序清单5.9简单。请找出不如原版之处。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> S_TO_M 60</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sec, min, left;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;This program converts seconds to minutes and &quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;seconds.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Just enter the number of seconds.\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Enter 0 to end the program.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (sec &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sec);</span><br><span class="line">        min = sec / S_TO_M;</span><br><span class="line">        left = sec % S_TO_M;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d sec is %d min, %d sec.\n&quot;</span>, sec, min, left);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Next input?\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>下面的程序将打印出什么内容？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FORMAT <span class="meta-string">&quot;%s! C is cool!\n&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num = <span class="number">10</span>;</span><br><span class="line">    <span class="built_in">printf</span>(FORMAT, FORMAT);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ++num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num++);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num--);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>下面的程序将打印出什么内容？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c1, c2;</span><br><span class="line">    <span class="keyword">int</span> diff;</span><br><span class="line">    <span class="keyword">float</span> num;</span><br><span class="line">    c1 = <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">    c2 = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    diff = c1 - c2;</span><br><span class="line">    num = diff;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c:%d %3.2f\n&quot;</span>, c1, c2, c1, diff, num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>下面的程序将打印出什么内容？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEN 10</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n++ &lt; TEN)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>, n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>修改上一个程序，使其可以打印字母a～g。</li></ol><hr><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><ol start="10"><li>假设下面是完整程序中的一部分，它们分别打印什么？<br>a. int x = 0; while (++x &lt; 3)printf(“%4d”, x);<br>b. int x = 100; while (x++ &lt; 103) printf(“%4d\n”,x); printf(“%4d\n”,x);<br>c. char ch = ‘s’; while (ch &lt; ‘w’) { printf(“%c”, ch); ch++; } printf(“%c\n”,ch);</li></ol><hr><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><ol start="11"><li>下面的程序会打印出什么？<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MESG <span class="meta-string">&quot;COMPUTER BYTES DOG&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n &lt; <span class="number">5</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, MESG);</span><br><span class="line">    n++;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;That&#x27;s all.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><ol start="12"><li>分别编写一条语句，完成下列各任务（或者说，使其具有以下副作用）：<br>a.将变量x的值增加10<br>b.将变量x的值增加1<br>c.将a与b之和的两倍赋给c<br>d.将a与b的两倍之和赋给c</li></ol><hr><h3 id="第十三题"><a href="#第十三题" class="headerlink" title="第十三题"></a>第十三题</h3><ol start="13"><li>分别编写一条语句，完成下列各任务：<br>a.将变量x的值减少1<br>b.将n除以k的余数赋给m<br>c.q除以b减去a，并将结果赋给p<br>d.a与b之和除以c与d的乘积，并将结果赋给x</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><ol><li>编写一个程序，把用分钟表示的时间转换成用小时和分钟表示的时间。<br>使用#define或const创建一个表示60的符号常量或const变量。<br>通过while 循环让用户重复输入值，直到用户输入小于或等于0的值才停止循环。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> hour 60</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> min;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;min = (&lt;= 0 to quit)\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;min);</span><br><span class="line">    <span class="keyword">while</span> (min &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;min = %dh%dmin\n&quot;</span>, min / hour, min % hour); <span class="comment">//%求余运算符</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;min = (&lt;= 0 to quit)\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;min);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>编写一个程序，提示用户输入一个整数，然后打印从该数到比该数大 10的所有整数（例如，用户输入5，则打印5～15的所有整数，包括5和 15）。要求打印的各值之间用一个空格、制表符或换行符分开。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num, bigger;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;number = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;num);</span><br><span class="line">    bigger = num + <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">while</span> (num &lt;= bigger)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d  &quot;</span>, num);</span><br><span class="line">        num++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编写一个程序，提示用户输入天数，然后将其转换成周数和天数。<br>例如，用户输入18，则转换成2周4天。<br>以下面的格式显示结果：18 days are 2 weeks, 4 days.<br>通过while循环让用户重复输入天数，当用户输入一个非正值时（如0 或 - 20），循环结束。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> week 7</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> days;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;天数 = (&lt;= 0 to quit)\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;days);</span><br><span class="line">    <span class="keyword">while</span> (days &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d天 = %d周0%d天\n&quot;</span>,days, days / week, days % week);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;天数 = (&lt;= 0 to quit)\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;days);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编写一个程序，提示用户输入一个身高（单位：厘米），并分别以厘米和英寸为单位显示该值，允许有小数部分。<br>程序应该能让用户重复输入身 高，直到用户输入一个非正值。<br>其输出示例如下：<br> Enter　a　height　in　centimeters : 182<br> 182.0　cm　 = 5　feet, 11.7　inches<br> Enter　a　height　in　centimeters　(&lt;= 0　to　quit) : 168.7<br> 168.0　cm　 = 5　feet, 6.<br> 4　inches<br> Enter　a　height　in　centimeters　(&lt;= 0　to　quit) : 0<br> bye<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  //1英尺 = 12英寸  1厘米 = 0.0328084英尺  1厘米 = 0.393701英寸</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> cm, inches;</span><br><span class="line">    <span class="keyword">int</span> feet;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;height = (cm)(&lt;= 0 to quit)&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;cm);</span><br><span class="line">    <span class="keyword">while</span> (cm)</span><br><span class="line">    &#123;</span><br><span class="line">        feet = (<span class="keyword">int</span>)(cm * <span class="number">0.0328084</span>);</span><br><span class="line">        inches = (cm * <span class="number">0.3937008</span>) - (feet * <span class="number">12</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%.lfcm = %dfeet%.1finches\n&quot;</span>, cm, feet, inches);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;height = (cm)(&lt;= 0 to quit)&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;cm);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第五题-1"><a href="#第五题-1" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>修改程序addemup.c（程序清单5.13），你可以认为addemup.c是计算20天里赚多少钱的程序<br>（假设第1天赚$1、第2天赚$2、第3天赚$3，以此类 推）。<br>修改程序，使其可以与用户交互，根据用户输入的数进行计算（即，用读入的一个变量来代替20）。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count, sum, days;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;days = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;days);</span><br><span class="line">    <span class="keyword">while</span> (count++ &lt; days)</span><br><span class="line">        sum = sum + count;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第六题-1"><a href="#第六题-1" class="headerlink" title="第六题"></a>第六题</h3><ol start="6"><li>修改编程练习5的程序，使其能计算整数的平方和（可以认为第1天赚 $1、第2天赚$4、第3天赚$9，以此类推，这看起来很不错）。C没有平方函数，但是可以用n * n来表示n的平方。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count, sum, days;</span><br><span class="line">    count = <span class="number">0</span>;</span><br><span class="line">    sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;days = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;days);</span><br><span class="line">    <span class="keyword">while</span> (count++ &lt; days)</span><br><span class="line">        sum = (sum + count * count);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;sum = %d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第七题-1"><a href="#第七题-1" class="headerlink" title="第七题"></a>第七题</h3><ol start="7"><li>编写一个程序，提示用户输入一个double类型的数，并打印该数的立方值。<br>自己设计一个函数计算并打印立方值。main()函数要把用户输入的值传递给该函数。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cube</span><span class="params">(<span class="keyword">double</span> num)</span></span>;   <span class="comment">//声明函数原型</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> num;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;number = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;num);</span><br><span class="line">    cube(num);           <span class="comment">//函数调用</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cube</span><span class="params">(<span class="keyword">double</span> num)</span>    <span class="comment">//该函数的参数为double型num变量</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%f\n&quot;</span>, num * num * num);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;           <span class="comment">//读者在做到这题时可以试着让cube函数把结果返回给main函数 再由main函数输出</span></span><br><span class="line">&#125;                       <span class="comment">//当然函数详解在第九章</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第八题-1"><a href="#第八题-1" class="headerlink" title="第八题"></a>第八题</h3><ol start="8"><li>编写一个程序，显示求模运算的结果。<br>把用户输入的第1个整数作为 求模运算符的第2个运算对象，该数在运算过程中保持不变。<br>用户后面输入的数是第1个运算对象。当用户输入一个非正值时，程序结束。其输出示例 如下：<br>This　program　computes　moduli.<br>Enter　an　integer　to　serve　as　the　second　operand:　256<br>Now　enter　the　first　operand : 438<br>438 % 256　is　182<br>Enter　next　number　for　first　operand　(&lt;= 0　to　quit) : 1234567<br>1234567 % 256　is　135<br>Enter　next　number　for　first　operand　(&lt;= 0　to　quit) : 0<br>Done<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> one, two;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;two = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;two);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;one = &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;one);</span><br><span class="line">    <span class="keyword">while</span> (one &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;       <span class="comment">//用两个百分号来输出百分号</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %% %d = %d\n&quot;</span>, one, two, one % two);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;two = (&lt;= 0 to quit)&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;one);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Done\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="第九题-1"><a href="#第九题-1" class="headerlink" title="第九题"></a>第九题</h3><ol start="9"><li>编写一个程序，要求用户输入一个华氏温度。<br>程序应读取double类型 的值作为温度值，并把该值作为参数传递给一个用户自定义的函数Temperatures()。<br>该函数计算摄氏温度和开氏温度，并以小数点后面两位数字 的精度显示3种温度。<br>要使用不同的温标来表示这3个温度值。下面是华氏温 度转摄氏温度的公式：<br>摄氏温度 = 5.0 / 9.0 * (华氏温度 - 32.0)<br>开氏温标常用于科学研究，0表示绝对零，代表最低的温度。下面是摄 氏温度转开氏温度的公式：<br>开氏温度 = 摄氏温度 + 273.16<br>Temperatures()函数中用const创建温度转换中使用的变量。<br>在main()函数 中使用一个循环让用户重复输入温度，当用户输入 q 或其他非数字时，循环 结束。<br>scanf()函数返回读取数据的数量，所以如果读取数字则返回1，如果 读取q则不返回1。<br>可以使用 == 运算符将scanf()的返回值和1作比较，测试两值是否相等。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Temperatures</span><span class="params">(<span class="keyword">double</span> Fahrenheit)</span></span>;        <span class="comment">//声明函数原型</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> Fahrenheit;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Fahrenheit = &quot;</span>);                <span class="comment">//scanf的返回值与成功读取的项数成正比</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;Fahrenheit) == <span class="number">1</span>)  <span class="comment">//这句意思为：如果（scanf的返回值 == 1）这个表达式成立 则结果为1；</span></span><br><span class="line">    &#123;                                       <span class="comment">//while为真的具体条件是 紧跟while的关系表达式的结果为 除0以外的所有整数</span></span><br><span class="line">        Temperatures(Fahrenheit);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Fahrenheit = &quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Bye!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Temperatures</span><span class="params">(<span class="keyword">double</span> Fahrenheit)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">double</span> Celsius = <span class="number">5.0</span> / <span class="number">9.0</span> * (Fahrenheit - <span class="number">32.0</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">double</span> Kelvin = Celsius + <span class="number">273.16</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2lf°F = %.2lf℃ = %.2lfK\n&quot;</span>,Fahrenheit,Celsius,Kelvin);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C-Primer-Puls第一章复习题目和编程练习题目</title>
      <link href="posts/ffd17e17.html"/>
      <url>posts/ffd17e17.html</url>
      
        <content type="html"><![CDATA[<p>本章内容为《C Primer Plus第六版》第一章复习题和编程练习题</p><h2 id="复习题"><a href="#复习题" class="headerlink" title="复习题"></a>复习题</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><ol><li>对编程而言，可移植性意味着什么？<a id="more"></a></li></ol><hr><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><ol start="2"><li>解释源代码文件、目标代码文件和可执行文件有什么区别？</li></ol><hr><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><ol start="3"><li>编程的7个主要步骤是什么？</li></ol><hr><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><ol start="4"><li>编译器的任务是什么？</li></ol><hr><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><ol start="5"><li>链接器的任务是什么？</li></ol><hr><h2 id="编程练习"><a href="#编程练习" class="headerlink" title="编程练习"></a>编程练习</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><p>我们尚未要求你编写C代码，该练习侧重于编程过程的早期步骤。</p><ol><li>你刚被MacroMuscle有限公司聘用。该公司准备进入欧洲市场，需要一个把英寸单位转换为厘米单位（1 英寸=2.54 厘米）的程序。该程序要提示用户输入英寸值。你的任务是定义程序目标和设计程序（编程过程的第1 步和第2步）。</li></ol><hr>]]></content>
      
      
      <categories>
          
          <category> C Primer Plus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
